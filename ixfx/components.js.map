{"version":3,"sources":["../src/components/HistogramVis.ts","../src/components/FrequencyHistogramPlot.ts"],"sourcesContent":["import {LitElement, css, html} from 'lit';\r\nimport {customElement} from 'lit/decorators/custom-element.js';\r\nimport {property} from 'lit/decorators/property.js';\r\nimport {repeat} from 'lit/directives/repeat.js';\r\nimport {KeyValue} from '../KeyValue.js';\r\n\r\ntype Bar = {\r\n  readonly percentage: number\r\n  readonly data: KeyValue\r\n};\r\n\r\nconst jsonData = (obj: unknown) => {\r\n  if (obj === null || obj === undefined || obj === `undefined`) return;\r\n  try {\r\n    if (typeof obj === `string`) {\r\n      if (obj.length === 0) return;\r\n      const o = JSON.parse(obj);\r\n      if (!Array.isArray(o)) {\r\n        console.error(`Histogram innerText should be JSON array`);\r\n        return;\r\n      }\r\n\r\n      // eslint-disable-next-line functional/no-loop-statement, functional/no-let\r\n      for (let i = 0; i < o.length; i++) {\r\n        if (!Array.isArray(o[i])) {\r\n          console.error(`Histogram array should consist of inner arrays`);\r\n          return;\r\n        }\r\n        if (o[i].length !== 2) {\r\n          console.error(`Histogram inner arrays should consist of two elements`);\r\n          return;\r\n        }\r\n        if (typeof o[i][0] !== `string`) {\r\n          console.error(`First element of inner array should be a string (index ${i})`);\r\n          return;\r\n        }\r\n        if (typeof o[i][1] !== `number`) {\r\n          console.error(`Second element of inner array should be a number (index ${i})`);\r\n          return;\r\n        }\r\n      }\r\n      return o;\r\n    }\r\n  } catch (ex) {\r\n    console.log(obj);\r\n    console.error(ex);\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Usage in HTML:\r\n * ```html\r\n * <style>\r\n * histogram-vis {\r\n *  display: block;\r\n *  height: 7em;\r\n *  --histogram-bar-color: pink;\r\n * }\r\n * </style>\r\n * <histogram-vis>\r\n * [\r\n *  [\"apples\", 5],\r\n *  [\"oranges\", 3],\r\n *  [\"pineapple\", 0],\r\n *  [\"limes\", 9]\r\n * ]\r\n * </histogram-vis>\r\n * ```\r\n * \r\n * CSS colour theming:\r\n * --histogram-bar-color\r\n * --histogram-label-color\r\n * \r\n * HTML tag attributes\r\n * showXAxis (boolean)\r\n * showDataLabels (boolean)\r\n *\r\n * @export\r\n * @class HistogramVis\r\n * @extends {LitElement}\r\n **/\r\n@customElement(`histogram-vis`)\r\nexport class HistogramVis extends LitElement {\r\n  static readonly styles = css`\r\n    :host {\r\n    }\r\n    div.container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n    }\r\n    div.chart {\r\n      display: grid;\r\n      flex: 1;\r\n      grid-template-rows: 1fr 1px min-content;\r\n      justify-items: center;\r\n    }\r\n    div.bar {\r\n      display: flex;\r\n      flex-direction: column-reverse;\r\n      align-items: center;\r\n      justify-self: normal;\r\n      padding-left: 0.3vw;\r\n      padding-right: 0.3vw;\r\n    }\r\n    div.bar>div.barTrack {\r\n      background-color: var(--histogram-bar-color, gray);\r\n      align-self: stretch;\r\n    }\r\n    div.xAxisLabels, div.data {\r\n      font-size: min(1vw, 1em);\r\n      color: var(--histogram-label-color, currentColor);\r\n    }\r\n    div.xAxisLabels {\r\n      width: 100%;\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-align: center;\r\n    }\r\n    div.xAxis {\r\n      background-color: var(--histogram-axis-color, silver);\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `;\r\n\r\n  // static properties = {\r\n  //   showXAxis: { attribute: false}\r\n  // };\r\n\r\n\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  @property()\r\n  declare data: readonly KeyValue[];\r\n\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  @property()\r\n  declare showDataLabels: boolean;\r\n\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  @property()\r\n  declare height: string;\r\n\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  @property()\r\n  declare showXAxis: boolean;\r\n\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  @property({converter: jsonData, type: Object})\r\n  declare json: readonly KeyValue[] | undefined;\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = [];\r\n    this.showDataLabels = true;\r\n    this.height = `100%`;\r\n    this.showXAxis = true;\r\n    this.json = undefined;\r\n  }\r\n\r\n  connectedCallback() {\r\n    if (!this.hasAttribute(`json`)) {\r\n      this.setAttribute(`json`, this.innerText);\r\n    }\r\n    super.connectedCallback();\r\n  }\r\n\r\n  barTemplate(bar: Bar, index: number, _totalBars: number) {\r\n    const {percentage} = bar;\r\n    const [key, freq] = bar.data;\r\n\r\n    // grid-area: rowStart / gridColStart / gridRowEnd / gridColEnd\r\n    const rowStart = 1;\r\n    const rowEnd = 2;\r\n    const colStart = index + 1;\r\n    const colEnd = colStart + 1;\r\n\r\n    const dataLabel = html`<div class=\"data\">${freq}</div>`;\r\n    const xAxis = html`${key}`;\r\n    return html`\r\n    <div class=\"bar\" style=\"grid-area: ${rowStart} / ${colStart} / ${rowEnd} / ${colEnd}\">\r\n      <div class=\"barTrack\" style=\"height: ${(percentage ?? 0) * 100}%\"></div>\r\n      ${this.showDataLabels ? dataLabel : ``}\r\n    </div>\r\n    <div class=\"xAxisLabels\" style=\"grid-area: ${rowStart + 2} / ${colStart} / ${rowEnd + 2} / ${colEnd}\">\r\n      ${this.showXAxis ? xAxis : ``}\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    if ((this.data === undefined || this.data.length === 0) && this.json === undefined) return html``;\r\n\r\n    const d = this.data ?? this.json;\r\n    const length = d.length;\r\n    const highestCount = Math.max(...d.map(d => d[1] as number));\r\n    const bars = d.map(kv => ({data: kv, percentage: kv[1] as number / highestCount}));\r\n\r\n    const xAxis = html`<div class=\"xAxis\" style=\"grid-area: 2 / 1 / 3 / ${d.length + 1}\"></div>`;\r\n    const height = this.height ? `height: ${this.height};` : ``;\r\n    const h = html`\r\n    <style>\r\n    div.chart {\r\n      grid-template-columns: repeat(${d.length}, minmax(2px, 1fr));\r\n    }\r\n    </style>\r\n    <div class=\"container\" style=\"${height}\">\r\n      <div class=\"chart\">\r\n      ${repeat(bars, (bar) => bar.data[0], (b, index) => this.barTemplate(b, index, length))}\r\n        ${this.showXAxis ? xAxis : ``}\r\n      </div>\r\n    </div>`;\r\n    return h;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    // eslint-disable-next-line quotes\r\n    readonly \"histogram-vis\": HistogramVis\r\n  }\r\n}","import { HistogramVis } from './HistogramVis.js';\r\nimport * as KeyValueUtil from '../KeyValue.js';\r\n\r\n/**\r\n * Creates and drives a HistogramVis instance.\r\n * Data should be an outer array containing two-element arrays for each\r\n * data point. The first element of the inner array is expected to be the key, the second the frequency.\r\n * For example,  `[`apples`, 2]` means the key `apples` was counted twice.\r\n * \r\n * Usage:\r\n * .sortBy() automatically sorts prior to visualisation. By default off.\r\n * .update(data) full set of data to plot\r\n * .clear() empties plot - same as calling `update([])`\r\n * .el - The `HistogramVis` instance, or undefined if not created/disposed\r\n * \r\n * ```\r\n * const plot = new FrequencyHistogramPlot(document.getElementById('histogram'));\r\n * plot.sortBy('key'); // Automatically sort by key\r\n * ...\r\n * plot.update([[`apples`, 2], [`oranges', 0], [`bananas`, 5]])\r\n * ```\r\n *\r\n * @export\r\n * @class FrequencyHistogramPlot\r\n */\r\nexport class FrequencyHistogramPlot {\r\n  //readonly parentEl:HTMLElement;\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  \r\n  readonly el:HistogramVis|undefined;\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  #sorter:KeyValueUtil.SortingFn|undefined;\r\n\r\n  constructor(el: HistogramVis) {\r\n    this.el = el;\r\n  }\r\n\r\n  setAutoSort(sortStyle:`value` | `valueReverse` | `key` | `keyReverse`):void {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    this.#sorter = KeyValueUtil.getSorter(sortStyle);\r\n  }\r\n\r\n  clear() {\r\n    if (this.el === undefined) return;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    this.el.data = [];\r\n  }\r\n\r\n  // init() {\r\n  //   if (this.el !== undefined) return; // already inited\r\n  //   // eslint-disable-next-line functional/immutable-data\r\n  //   this.el = document.createElement(`histogram-vis`);\r\n  //   this.parentEl.appendChild(this.el);\r\n  // }\r\n\r\n  dispose() {\r\n    const el = this.el;\r\n    if (el === undefined) return; // already disposed\r\n    el.remove();\r\n  }\r\n\r\n  update(data:ReadonlyArray<readonly [key:string, count:number]>) {\r\n    if (this.el === undefined) {\r\n      console.warn(`FrequencyHistogramPlot this.el undefined`);\r\n      return;\r\n    }\r\n\r\n    if (this.#sorter !== undefined) {\r\n      // eslint-disable-next-line functional/immutable-data, functional/prefer-readonly-type\r\n      this.el.data = this.#sorter(data as KeyValueUtil.KeyValue[]);\r\n    } else {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      this.el.data  = [...data];\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","names":[]}