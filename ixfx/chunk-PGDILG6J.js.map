{"version":3,"sources":["../src/dom/index.ts","../src/dom/ShadowDom.ts","../src/dom/Log.ts","../src/dom/DomRx.ts","../src/temporal/PointTracker.ts","../src/dom/PointerVisualise.ts"],"sourcesContent":["\r\nexport * from './Log.js';\r\n\r\nexport * from './DomRx.js';\r\nexport * from './Util.js';\r\n\r\n/**\r\n * Functions for working with DOM elements\r\n */\r\nexport * as Forms from './Forms.js';\r\n\r\nexport * from './PointerVisualise.js';","export const addShadowCss = (parentEl:HTMLElement, styles:string):ShadowRoot => {\r\n  const styleEl = document.createElement(`style`);\r\n  styleEl.textContent = styles;\r\n\r\n  let shadowRoot;\r\n  if (parentEl.shadowRoot) {\r\n    shadowRoot = parentEl.shadowRoot;\r\n    shadowRoot.innerHTML = ``;\r\n  } else {\r\n    shadowRoot = parentEl.attachShadow({ mode: `open` });\r\n  }\r\n  shadowRoot.appendChild(styleEl);\r\n  return shadowRoot;\r\n};\r\n","import {resolveEl} from \"./Util.js\";\r\nimport {addShadowCss} from \"./ShadowDom.js\";\r\n\r\nexport type LogOpts = {\r\n  readonly reverse?:boolean\r\n  readonly capacity?: number\r\n  readonly timestamp?: boolean\r\n  readonly collapseDuplicates?:boolean\r\n  readonly monospaced?:boolean\r\n  readonly minIntervalMs?:number\r\n  readonly css?:string\r\n}\r\n\r\nexport type Log = Readonly<{\r\n  clear():void\r\n  error(msgOrError:string|Error|unknown):void\r\n  log(msg?:string|object|number):HTMLElement|undefined\r\n  append(el:HTMLElement):void\r\n  dispose():void\r\n  readonly isEmpty:boolean\r\n}>\r\n\r\n/**\r\n * Allows writing to a DOM element in console.log style. Element grows in size, so use\r\n * something like `overflow-y: scroll` on its parent\r\n * \r\n * ```\r\n * const l = log(`#dataStream`); // Assumes HTML element with id `dataStream` exists \r\n * l.log(`Hi`);\r\n * l.log(); // Displays a horizontal rule\r\n * \r\n * const l = log(document.getElementById(`dataStream`), {\r\n *  timestamp: true,\r\n *  truncateEntries: 20\r\n * });\r\n * l.log(`Hi`);\r\n * l.error(`Some error`); // Adds class `error` to line\r\n * ```\r\n * \r\n * For logging high-throughput streams:\r\n * ```\r\n * // Silently drop log if it was less than 5ms since the last\r\n * const l = log(`#dataStream`, { minIntervalMs: 5 });\r\n * \r\n * // Only the last 100 entries are kept\r\n * const l = log(`#dataStream`, { capacity: 100 });\r\n * ```\r\n *\r\n * @param {(HTMLElement | string | undefined)} elOrId Element or id of element\r\n * @param {LogOpts} opts\r\n * @returns {Log}\r\n */\r\nexport const log = (domQueryOrEl: HTMLElement | string, opts: LogOpts = {}):Log => {\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  const {capacity = 0, monospaced = true, timestamp = false, collapseDuplicates = true, css =  `` } = opts;\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let added = 0;\r\n  // eslint-disable-next-line functional/no-let\r\n  let lastLog:string|undefined;\r\n  // eslint-disable-next-line functional/no-let\r\n  let lastLogRepeats = 0;\r\n\r\n  const parentEl = resolveEl<HTMLElement>(domQueryOrEl);\r\n  const fontFamily = monospaced ? `Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", Monaco, \"Courier New\", Courier, monospace` : `normal`;\r\n  const shadowRoot = addShadowCss(parentEl, `\r\n  .log {\r\n    font-family: ${fontFamily};\r\n    background-color: var(--code-background-color);\r\n    padding: var(--padding1, 0.2em);\r\n    overflow-y: auto;\r\n    height:100%;\r\n  }\r\n  .timestamp {\r\n    margin-right: 0.5em;\r\n    opacity: 0.5;\r\n    font-size: 70%;\r\n    align-self: center;\r\n  }\r\n  .line {\r\n    display: flex;\r\n    padding-bottom: 0.1em;\r\n    padding-top: 0.1em;\r\n  }\r\n  .line:hover {\r\n  \r\n  }\r\n  .error {\r\n    color: red;\r\n  }\r\n  .badge {\r\n    border: 1px solid currentColor;\r\n    align-self: center;\r\n    font-size: 70%;\r\n    padding-left: 0.2em;\r\n    padding-right: 0.2em;\r\n    border-radius: 1em;\r\n    margin-left: 0.5em;\r\n    margin-right: 0.5em;\r\n  }\r\n  .msg {\r\n    flex: 1;\r\n    word-break: break-all;\r\n\r\n  }\r\n  ${css}\r\n  `);\r\n  \r\n  const el = document.createElement(`div`);\r\n  // eslint-disable-next-line functional/immutable-data\r\n  el.className = `log`;\r\n  shadowRoot.append(el);\r\n\r\n  const error = (msgOrError: string | Error | unknown) => {\r\n    const line = document.createElement(`div`);\r\n    \r\n    if (typeof msgOrError === `string`) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerHTML = msgOrError;\r\n    } else if (msgOrError instanceof Error) {\r\n      const stack = msgOrError.stack;\r\n      if (stack === undefined) {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        line.innerHTML = msgOrError.toString();\r\n      } else {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        line.innerHTML = stack.toString();\r\n      }\r\n    } else {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerHTML = msgOrError as string;\r\n    }\r\n    line.classList.add(`error`);\r\n    append(line);\r\n    lastLog = undefined;\r\n    lastLogRepeats = 0;\r\n  };\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let lastLogTime = 0;\r\n\r\n  const log = (whatToLog: unknown = ``):HTMLElement|undefined => {\r\n    // eslint-disable-next-line functional/no-let\r\n    let msg:string|undefined;\r\n    const interval = window.performance.now() - lastLogTime;\r\n    if (opts.minIntervalMs && interval < opts.minIntervalMs) return;\r\n    lastLogTime = window.performance.now();\r\n\r\n    if (typeof whatToLog === `object`) {\r\n      msg = JSON.stringify(whatToLog);\r\n    } else if (whatToLog === undefined) {\r\n      msg = `(undefined)`;\r\n    } else if (whatToLog === null) {\r\n      msg = `(null)`;\r\n    } else if (typeof whatToLog === `number`) {\r\n      if (Number.isNaN(msg)) msg = `(NaN)`;\r\n      msg = whatToLog.toString();\r\n    } else {\r\n      msg = whatToLog as string;\r\n    }\r\n   \r\n    if (msg.length === 0) {\r\n      const rule = document.createElement(`hr`);\r\n      lastLog = undefined;\r\n      append(rule);\r\n    } else if (msg === lastLog && collapseDuplicates) {\r\n      const lastEl = el.firstElementChild as HTMLElement;\r\n      // eslint-disable-next-line functional/no-let\r\n      let lastBadge = lastEl.querySelector(`.badge`);\r\n      if (lastBadge === null) {\r\n        lastBadge = document.createElement(`div`);\r\n        // eslint-disable-next-line functional/immutable-data\r\n        lastBadge.className = `badge`;\r\n        lastEl.insertAdjacentElement(`beforeend`, lastBadge);\r\n      }\r\n      if (lastEl !== null) {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        lastBadge.textContent = (++lastLogRepeats).toString();\r\n      }\r\n      return lastEl;\r\n    } else {\r\n      const line = document.createElement(`div`);\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerText = msg;\r\n      append(line);\r\n      lastLog = msg;\r\n      return line;\r\n    }\r\n  };\r\n\r\n  const append = (line: HTMLElement) => {\r\n    if (timestamp) {\r\n      const wrapper = document.createElement(`div`);\r\n      const timestamp = document.createElement(`div`);\r\n      // eslint-disable-next-line functional/immutable-data\r\n      timestamp.className = `timestamp`;\r\n      // eslint-disable-next-line functional/immutable-data\r\n      timestamp.innerText = new Date().toLocaleTimeString();\r\n      wrapper.append(timestamp, line);\r\n      line.classList.add(`msg`);\r\n      wrapper.classList.add(`line`);\r\n      line = wrapper;\r\n    } else {\r\n      line.classList.add(`line`, `msg`);\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      el.appendChild(line);\r\n    } else {\r\n      el.insertBefore(line, el.firstChild);\r\n    }\r\n\r\n    if (capacity > 0 && (++added > capacity * 2)) {\r\n      // eslint-disable-next-line functional/no-loop-statement\r\n      while (added > capacity) {\r\n        el.lastChild?.remove();\r\n        added--;\r\n      }\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      // Scroll to bottom\r\n      //eslint-disable-next-line functional/immutable-data\r\n      el.scrollTop = el.scrollHeight;\r\n    }\r\n    lastLogRepeats = 0;\r\n  };\r\n\r\n  const clear = () => {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    el.innerHTML = ``;\r\n    lastLog = undefined;\r\n    lastLogRepeats = 0;\r\n    added = 0;\r\n  };\r\n\r\n  const dispose = () => {\r\n    el.remove();\r\n  };\r\n\r\n  return {\r\n    error, log, append, clear, dispose,\r\n    get isEmpty() {\r\n      return added === 0;\r\n    }\r\n  };\r\n};","import {fromEvent, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {resolveEl} from './Util.js';\r\n\r\n/**\r\n * @private\r\n */\r\nexport type PluckOpts =  {\r\n  readonly pluck: string\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport type TransformOpts = {\r\n  transform(ev:Event):any\r\n}\r\n\r\n/**\r\n * Responsive value\r\n */\r\n// eslint-disable-next-line functional/no-mixed-type\r\nexport type Rx<V> = {\r\n  /**\r\n   * Last value\r\n   */\r\n  readonly value: V,\r\n  /**\r\n   * Clears last value\r\n   */\r\n  readonly clear: () => void\r\n}\r\n\r\nexport type DomRxOpts = PluckOpts | TransformOpts;\r\n\r\n/**\r\n * Keeps track of last event data\r\n * \r\n * ```js\r\n * const pointer = rx(`#myDiv`, `pointermove`).value;\r\n * \r\n * if (pointer.clientX > ...)\r\n * ``` \r\n * \r\n * Pluck a field:\r\n * ```js\r\n * const pointerX = rx(`#myDiv`, `pointermove`, {pluck: `clientX`}).value;\r\n * \r\n * if (pointerX > ...)\r\n * ```\r\n * @template V Event type\r\n * @param opts\r\n * @return\r\n */\r\nexport const rx = <V>(elOrQuery:HTMLElement|string, event:string, opts?:DomRxOpts):Rx<V> => {\r\n  const el = resolveEl<HTMLElement>(elOrQuery);\r\n  const ev = fromEvent(el, event);\r\n  // @ts-ignore\r\n  const value:V = {};\r\n\r\n  const clear = () => {\r\n    const keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\r\n      delete (value as any)[key];\r\n    });\r\n  };\r\n\r\n  const setup = (sub:Observable<Event>):Rx<V> => {\r\n    sub.subscribe({\r\n      next: (newValue) => {\r\n        // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\r\n        Object.assign(value, newValue);\r\n      }\r\n    });\r\n    return {\r\n      value, clear\r\n    };\r\n  };\r\n\r\n  if (opts === undefined) return setup(ev);\r\n  \r\n  if ((opts as PluckOpts).pluck) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return setup(ev.pipe(map(x => (x as any)[(opts as PluckOpts).pluck])));\r\n  } else if ((opts as TransformOpts).transform) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return setup(ev.pipe(map(x => (opts as TransformOpts).transform(x))));\r\n  }\r\n\r\n  return setup(ev);\r\n};","import * as Points from \"../geometry/Point.js\";\r\nimport {getOrGenerate, GetOrGenerate} from \"../collections/Map.js\";\r\nimport * as Line from \"~/geometry/Line.js\";\r\n\r\nexport type PointSeenInfo = {\r\n  readonly distance:number\r\n  readonly centroid:Points.Point\r\n  readonly angle:number\r\n  readonly speed:number\r\n  readonly values:readonly Points.Point[]\r\n};\r\n\r\nexport type Timestamped<V> = V & {\r\n  readonly at:number\r\n};\r\n\r\nexport class TrackedValue<V> {\r\n  values:Timestamped<V>[];\r\n  //last:Timestamped<V>;\r\n\r\n  constructor(readonly id:string, start:V, readonly storeIntermediate:boolean) {\r\n    const s = {...start, at:Date.now()} as Timestamped<V>;\r\n    this.values = [s];\r\n  }\r\n\r\n  /**\r\n   * Tracks a value\r\n   */\r\n  seen(...p:V[]|Timestamped<V>[]) {\r\n    // Make sure values have a timestamp\r\n    const ts = p.map(v => ((`at` in v) ? v : {\r\n      ...v,\r\n      at: Date.now()\r\n    }));\r\n\r\n    const last = ts.at(-1) as Timestamped<V>;\r\n  \r\n    if (this.storeIntermediate) this.values.push(...ts);\r\n    else if (this.values.length === 2) {\r\n      this.values[1] = last;\r\n    } else {\r\n      this.values.push(last);\r\n    }\r\n  }\r\n\r\n  get last() {\r\n    return this.values.at(-1);\r\n  }\r\n  \r\n  /**\r\n   * Returns number of saved points (including start)\r\n   */\r\n  get size() {\r\n    return this.values.length;\r\n  }\r\n\r\n  /**\r\n   * Returns the elapsed time, in milliseconds since the instance was created\r\n   */\r\n  get elapsed():number {\r\n    return Date.now() - this.values[0].at;\r\n  }\r\n}\r\n\r\n/**\r\n * A tracked point\r\n */\r\nexport class TrackedPoint extends TrackedValue<Points.Point> {\r\n  relation;\r\n\r\n  constructor(readonly id:string, start:Points.Point, readonly storePoints:boolean) {\r\n    super(id, start, storePoints);\r\n\r\n    const s = {x:start.x, y:start.y, at:Date.now()};\r\n    this.relation = Points.relation(s);\r\n    //this.lastPoint = {x: start.x, y:start.y, at:Date.now()};\r\n    //this.points = [s];\r\n  }\r\n\r\n\r\n  get x() {\r\n    return this.last?.x;\r\n  }\r\n\r\n  get y() {\r\n    return this.last?.y;\r\n  }\r\n\r\n  /**\r\n   * Tracks a point, returning information on the relation between it\r\n   * and the start point.\r\n   * \r\n   * If multiple points are given, it's relation to the last point that is returned.\r\n   * @param p Point\r\n   */\r\n  seen(...p:Points.Point[]|Timestamped<Points.Point>[]):PointSeenInfo {\r\n    //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const currentLast = this.last!;\r\n    super.seen(...p);\r\n    //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const newLast = this.last!;\r\n\r\n    // Get basic geometric relation from start to the last provided point\r\n    const rel = this.relation(newLast);\r\n    \r\n    const r:PointSeenInfo = {\r\n      ...rel,\r\n      values: this.values,\r\n      speed: Line.length(currentLast, newLast) / (newLast.at - currentLast.at),\r\n    };\r\n\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Returns a polyline representation of stored points.\r\n   * Returns an empty array if points were not saved, or there's only one.\r\n   */\r\n  get line():Line.PolyLine {\r\n    if (this.values.length === 1) return [];\r\n    return Line.joinPointsToLines(...this.values);\r\n  }\r\n\r\n  /**\r\n   * Returns the total length of accumulated points.\r\n   * Returns 0 if points were not saved, or there's only one\r\n   */\r\n  get length():number {\r\n    if (this.values.length === 1) return 0;\r\n    const l = this.line;\r\n    return Line.length(l);\r\n  }\r\n}\r\n\r\n/**\r\n * Options for PointTracker\r\n */\r\nexport type Opts = {\r\n  /**\r\n   * If true, intermediate points are stored\r\n   */\r\n  readonly trackIntermediatePoints?:boolean\r\n}\r\n\r\n\r\n/**\r\n * PointTracker. Mutable.\r\n */\r\nexport class TrackedValueMap<V>  {\r\n  store:Map<string, TrackedValue<V>>;\r\n  gog:GetOrGenerate<string, TrackedValue<V>, V>;\r\n\r\n  constructor(creator:(key:string, start:V|undefined) => TrackedValue<V>, opts:Opts = {}) {\r\n  \r\n    this.store = new Map();\r\n    this.gog = getOrGenerate<string, TrackedValue<V>, V>(this.store, creator);\r\n    /*\r\n    (key, start) => {\r\n      if (start === undefined) throw new Error(`Requires start point`);\r\n      return new TrackedPoint(key, start, trackIntermediatePoints);\r\n    });*/\r\n  }\r\n\r\n  /**\r\n   * Return number of named points being tracked\r\n   */\r\n  get size() {\r\n    return this.store.size;\r\n  }\r\n\r\n  has(id:string) {\r\n    return this.store.has(id);\r\n  }\r\n\r\n  /**\r\n   * For a given id, note that we have seen one or more values.\r\n   * @param id Id\r\n   * @param values Values(s)\r\n   * @returns Information about start to last value\r\n   */\r\n  protected async seenImpl(id:string, ...values:V[]) {\r\n    const trackedValue = await this.seenValue(id, ...values);\r\n    \r\n    // Pass it over to the TrackedValue\r\n    trackedValue.seen(...values);\r\n  }\r\n\r\n  protected async seenValue(id:string, ...values:V[]) {\r\n    if (id === null) throw new Error(`id parameter cannot be null`);\r\n    if (id === undefined) throw new Error(`id parameter cannot be undefined`);\r\n\r\n    // Create or recall TrackedValue by id\r\n    const trackedValue = await this.gog(id, values[0]);\r\n    return trackedValue;\r\n  }\r\n\r\n  /**\r\n   * Remove a tracked value by id.\r\n   * Use {@link reset} to clear them all.\r\n   * @param id\r\n   */\r\n  delete(id:string) {\r\n    this.store.delete(id);\r\n  }\r\n\r\n  /**\r\n   * Remove all tracked values.\r\n   * Use {@link delete} to remove a single value by id.\r\n   */\r\n  reset() {\r\n    this.store = new Map();\r\n  }\r\n\r\n  /**\r\n   * Enumerate ids\r\n   */\r\n  *ids() {\r\n    yield* this.store.keys();\r\n  }\r\n\r\n  /**\r\n   * Enumerate tracked values\r\n   */\r\n  *values() {\r\n    yield* this.store.values();\r\n  }\r\n\r\n  /**\r\n   * Returns TrackedValues ordered with oldest first\r\n   * @returns \r\n   */\r\n  getByAge():readonly TrackedValue<V>[] {\r\n    const tp = Array.from(this.store.values());\r\n    tp.sort((a, b) => {\r\n      const aa =a.elapsed;\r\n      const bb = b.elapsed;\r\n      if (aa === bb) return 0;\r\n      if (aa > bb) return -1;\r\n      return 1;\r\n    });\r\n    return tp;\r\n  }\r\n\r\n  /**\r\n   * Enumerate last received values\r\n   * \r\n   * @example Calculate centroid of latest-received points\r\n   * ```js\r\n   * const pointers = pointTracker();\r\n   * const c = Points.centroid(...Array.from(pointers.lastPoints()));\r\n   * ```\r\n   */\r\n  *lastPoints() {\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const p of this.store.values()) {\r\n      yield p.last;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enumerate starting values\r\n   */\r\n  *startValues() {\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const p of this.store.values()) {\r\n      yield p.values[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a tracked value by id, or undefined if not found\r\n   * @param id \r\n   * @returns \r\n   */\r\n  get(id:string):TrackedValue<V>|undefined {\r\n    return this.store.get(id);\r\n  }\r\n}\r\n\r\nexport class TrackedPointMap extends TrackedValueMap<Points.Point> {\r\n  constructor(opts:Opts) {\r\n    super((key, start) => {\r\n      if (start === undefined) throw new Error(`Requires start point`);\r\n      return new TrackedPoint(key, start, opts.trackIntermediatePoints ?? false);\r\n    }, opts);\r\n  }\r\n\r\n  async seen(id:string, ...values:Points.Point[]) {\r\n    const trackedValue = await this.seenValue(id, ...values) as TrackedPoint;\r\n    \r\n    // Pass it over to the TrackedValue\r\n    return trackedValue.seen(...values);\r\n  }\r\n}\r\n\r\n\r\nexport const pointTracker = (opts:Opts) => new TrackedPointMap(opts);\r\n","/* eslint-disable functional/immutable-data */\r\nimport {pointTracker} from \"../temporal/PointTracker.js\";\r\nimport {fullSizeElement, resolveEl} from \"./Util.js\";\r\nimport * as Svg from \"../visual/Svg.js\";\r\n\r\nexport type Opts = {\r\n  readonly touchRadius?:number\r\n  readonly mouseRadius?:number\r\n  readonly trace?:boolean\r\n  readonly hue?:number\r\n}\r\n\r\n/**\r\n * Visualises pointer events within a given element.\r\n * \r\n * ```js\r\n * // Show pointer events for whole document\r\n * pointerVis(document);\r\n * ```\r\n * \r\n * Options\r\n * * touchRadius/mouseRadius: size of circle for these kinds of pointer events\r\n * * trace: if true, intermediate events are captured and displayed\r\n * @param elOrQuery \r\n * @param opts \r\n */\r\nexport const pointerVisualise = (elOrQuery: HTMLElement | string, opts:Opts = {}) => {\r\n  const touchRadius = opts.touchRadius ?? 45;\r\n  const mouseRadius = opts.touchRadius ?? 20;\r\n  const trace = opts.trace ?? false;\r\n  const hue = opts.hue ?? 100;\r\n\r\n  const startFillStyle =`hsla(${hue}, 100%, 10%, 10%)`;\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let currentHue = hue;\r\n\r\n  const el = resolveEl(elOrQuery);\r\n  const tracker = pointTracker({\r\n    trackIntermediatePoints:trace\r\n  });  \r\n\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const svg = (document.createElementNS(`http://www.w3.org/2000/svg`, `svg`) as any) as SVGElement & HTMLElement;\r\n  svg.id = `pointerVis`;\r\n  svg.style.zIndex = `100`;\r\n  svg.style.position = `fixed`;\r\n  svg.style.top = `0`;\r\n  svg.style.left = `0`;\r\n  svg.style.width = `100%`;\r\n  svg.style.height = `100%`;\r\n  svg.style.boxSizing = `border-box`;\r\n  svg.style.border = `3px solid red`;\r\n\r\n  fullSizeElement(svg);\r\n  //eslint-disable-next-line functional/no-let\r\n  let pointerCount = 0;\r\n  const lostPointer = async (ev:PointerEvent) => {\r\n    const id = ev.pointerId.toString();\r\n    tracker.delete(id);\r\n    currentHue = hue;\r\n    svg.querySelector(`#pv-start-${id}`)?.remove();\r\n\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i=0;i<pointerCount+1;i++) {\r\n      svg.querySelector(`#pv-progress-${id}-${i}`)?.remove();\r\n    }\r\n    pointerCount = 0;\r\n  };\r\n\r\n  const trackPointer = async (ev:PointerEvent) => {\r\n    const id = ev.pointerId.toString();\r\n    const pt = {x: ev.x, y: ev.y};\r\n    const type = ev.pointerType;\r\n\r\n    if (ev.type ===`pointermove` && !tracker.has(id)) return;\r\n\r\n    const info = await tracker.seen(id, pt);\r\n\r\n    if (info.values.length === 1) {\r\n      Svg.Elements.circle({...info.values[0], radius: (type === `touch` ? touchRadius : mouseRadius)}, svg, {\r\n        fillStyle: startFillStyle,\r\n      }, `#pv-start-${id}`);\r\n    }\r\n\r\n    const progressFillStyle = `hsla(${currentHue}, 100%, 50%, 50%)`;\r\n    \r\n    Svg.Elements.circle({...pt, radius: (type === `touch` ? touchRadius : mouseRadius)}, svg, {\r\n      fillStyle: progressFillStyle\r\n    }, `#pv-progress-${id}-${info.values.length}`);\r\n    currentHue +=1;\r\n    pointerCount = info.values.length;\r\n  };\r\n\r\n  document.body.appendChild(svg);\r\n\r\n  el.addEventListener(`pointerdown`, trackPointer);\r\n  el.addEventListener(`pointermove`, trackPointer);\r\n  el.addEventListener(`pointerup`, lostPointer);\r\n  el.addEventListener(`pointerleave`, lostPointer);\r\n};"],"mappings":"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","names":[]}