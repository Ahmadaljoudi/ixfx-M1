{"version":3,"sources":["../src/KeyValue.ts","../node_modules/fp-ts/es6/function.js","../node_modules/fp-ts/es6/Eq.js","../node_modules/fp-ts/es6/Ord.js","../node_modules/fp-ts/es6/number.js","../node_modules/fp-ts/es6/Array.js","../node_modules/fp-ts/es6/string.js","../src/collections/Arrays.ts","../src/Random.ts","../src/modulation/Easing.ts","../src/data/index.ts","../src/data/Normalise.ts","../src/collections/NumericArrays.ts","../src/data/Scale.ts","../src/geometry/index.ts","../src/geometry/Arc.ts","../src/geometry/Point.ts","../src/geometry/Line.ts","../src/collections/index.ts","../src/collections/CircularArray.ts","../src/collections/MapMultiMutable.ts","../src/collections/Stack.ts","../src/collections/Queue.ts","../src/collections/MapImmutable.ts","../src/collections/MapMutable.ts","../src/geometry/Rect.ts","../src/geometry/Bezier.ts","../node_modules/bezier-js/src/utils.js","../node_modules/bezier-js/src/poly-bezier.js","../node_modules/bezier-js/src/bezier.js","../src/geometry/Circle.ts","../src/geometry/CompoundPath.ts","../src/geometry/Grid.ts","../src/geometry/Path.ts","../src/geometry/Ellipse.ts","../src/geometry/Polar.ts","../src/geometry/Shape.ts","../src/geometry/Triangle.ts","../src/geometry/TriangleEquilateral.ts","../src/geometry/TriangleRight.ts","../src/geometry/TriangleIsosceles.ts","../src/io/index.ts","../src/io/NordicBleDevice.ts","../src/io/Codec.ts","../src/io/StringReceiveBuffer.ts","../src/io/StringWriteBuffer.ts","../src/flow/Retry.ts","../src/io/BleDevice.ts","../src/io/AudioAnalyser.ts","../src/io/AudioVisualiser.ts","../src/data/TrackedValue.ts","../src/data/NumberTracker.ts","../src/io/Espruino.ts","../src/io/EspruinoBleDevice.ts","../src/io/Serial.ts","../src/io/JsonDevice.ts","../src/io/EspruinoSerialDevice.ts","../src/io/Camera.ts","../src/visual/Video.ts","../src/io/FrameProcessor.ts","../src/visual/index.ts","../src/visual/Drawing.ts","../src/visual/Colour.ts","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/lab.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/piecewise.js","../src/visual/Svg.ts","../src/visual/SvgMarkers.ts","../src/visual/SvgElements.ts","../src/visual/Plot.ts","../src/visual/Plot2.ts","../src/visual/SceneGraph.ts","../src/visual/Palette.ts","../src/dom/index.ts","../src/dom/ShadowDom.ts","../src/dom/Log.ts","../src/dom/DomRx.ts","../src/data/PointTracker.ts","../src/dom/PointerVisualise.ts","../src/dom/ErrorHandler.ts","../src/modulation/index.ts","../src/modulation/Envelope.ts","../src/modulation/Forces.ts","../src/modulation/Oscillator.ts","../src/data/FrequencyMutable.ts","../src/data/MovingAverage.ts","../src/data/IntervalTracker.ts","../src/data/Flip.ts","../src/data/Wrap.ts","../src/data/Interpolate.ts"],"sourcesContent":["import { sort } from 'fp-ts/Array';\r\nimport { pipe } from 'fp-ts/function';\r\nimport * as S from 'fp-ts/string';\r\nimport * as N from 'fp-ts/number';\r\nimport { reverse as reverseOrd, contramap } from 'fp-ts/Ord';\r\nimport {minMaxAvg as arrayMinMaxAg} from './collections/Arrays.js';\r\n\r\n/// ✔ Sorting functions are unit tested\r\n\r\nexport type Primitive = string | number;\r\nexport type KeyValue = readonly [key: string, value: Primitive];\r\n\r\nconst byKey = (reverse:boolean = false) => pipe(\r\n  reverse ? reverseOrd(S.Ord) : S.Ord, \r\n  contramap((v:KeyValue) => v[0])\r\n);\r\n\r\nexport const byValueString = (reverse:boolean = false) => pipe(\r\n  reverse ? reverseOrd(S.Ord) : S.Ord, \r\n  contramap((v:KeyValue) => v[1] as string)\r\n);\r\n\r\nconst byValueNumber = (reverse:boolean = false) => pipe(\r\n  reverse ? reverseOrd(N.Ord) : N.Ord, \r\n  contramap((v:KeyValue) => v[1] as number)\r\n);\r\n\r\nexport const sortByKey = (reverse:boolean = false) => sort<KeyValue>(byKey(reverse));\r\nexport const sortByValueString = (reverse:boolean = false) => sort<KeyValue>(byValueString(reverse));\r\nexport const sortByValueNumber = (reverse:boolean = false) => sort<KeyValue>(byValueNumber(reverse));\r\n\r\n// eslint-disable-next-line functional/prefer-readonly-type\r\nexport type SortingFn = (data:KeyValue[]) => KeyValue[];\r\n\r\nexport const getSorter = (sortStyle:`value` | `valueReverse` | `key` | `keyReverse`) => {\r\n  switch (sortStyle) {\r\n  case `value`:\r\n    return sortByValueNumber(false);\r\n  case `valueReverse`:\r\n    return sortByValueNumber(true);\r\n  case `key`:\r\n    return sortByKey(false);\r\n  case `keyReverse`:\r\n    return sortByKey(true);\r\n  default:\r\n    throw new Error(`Unknown sorting value '${sortStyle}'. Expecting: value, valueReverse, key or keyReverse`);\r\n  }\r\n};\r\n\r\n\r\nexport const minMaxAvg = (entries:readonly KeyValue[], conversionFn?:(v:KeyValue) => number) => {\r\n  if (conversionFn === undefined) conversionFn = (v:KeyValue) => v[1] as number;\r\n  const values = entries.map<number>(conversionFn);\r\n  return arrayMinMaxAg(values);\r\n};","// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) { return function (f) { return f(a); }; };\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default:\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n","import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n","import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nexport var equalsDefault = function (compare) { return function (first, second) {\n    return first === second || compare(first, second) === 0;\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromCompare = function (compare) { return ({\n    equals: equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = function (O) { return fromCompare(function (first, second) { return O.compare(second, first); }); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () { return 0; })\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var trivial = {\n    equals: constTrue,\n    compare: \n    /*#__PURE__*/\n    constant(0)\n};\n/**\n * @since 2.11.0\n */\nexport var equals = function (O) { return function (second) { return function (first) {\n    return first === second || O.compare(first, second) === 0;\n}; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var min = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) < 1 ? first : second;\n}; };\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var max = function (O) { return function (first, second) {\n    return first === second || O.compare(first, second) > -1 ? first : second;\n}; };\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport var clamp = function (O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport var between = function (O) {\n    var ltO = lt(O);\n    var gtO = gt(O);\n    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ord = Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var ordDate = \n/*#__PURE__*/\npipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n","// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n","import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match). It will work when `onEmpty` and `onNonEmpty`\n * have different return types.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category combinators\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var tail = function (as) { return (isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var init = function (as) { return (isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeLeft = function (n) { return function (as) { return (isOutOfBound(n, as) ? copy(as) : as.slice(0, n)); }; };\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeRight = function (n) { return function (as) {\n    return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeft = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropRight = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexport function dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = function (as) { return as.slice(); };\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) { return modifyAt(i, function () { return a; }); };\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = function (i) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n}; };\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = function (as) { return (isEmpty(as) ? [] : as.slice().reverse()); };\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n}; };\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : []); };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var splitAt = function (n) { return function (as) {\n    return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n}; };\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromOption(f.apply(void 0, a));\n}; };\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(NEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concatW = function (second) { return function (first) {\n    return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n}; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second)\n            ? unionE(second)(first)\n            : isNonEmpty(first)\n                ? copy(first)\n                : copy(second);\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @category Zero\n * @since 2.7.0\n */\nexport var zero = function () { return []; };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * It can be used to extend the concept of [`map`](#map) to a function that\n * takes more than one parameter as described\n * read [here](https://dev.to/gcanti/getting-started-with-fp-ts-applicative-1kb3)\n *\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return chain(function (f) { return pipe(fa, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * Derivable from [`chain`](#chain).\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return partitionMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * Less strict version of [`alt`](#alt), it can concatenate `Array`s of different base types.\n *\n * @example\n * import { altW } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(altW(() => [2, 3, 4])([\"a\"]), [\"a\", 2, 3, 4]);\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return fa.concat(that()); }; };\n/**\n * `alt` implements the `Alt` iterface by concatenation of `Array`s.\n * `Alt` interface is similar to `Semigroup` for higher-kinded types such\n * as `Array` and `Option`: the example below shows both `Alt`'s `alt` and\n * `Semigroup`'s `concat` functions.\n *\n * @example\n * import { alt, concat } from 'fp-ts/Array';\n *\n * assert.deepStrictEqual(alt(() => [2, 3, 4])([1]), [1, 2, 3, 4]);\n * assert.deepStrictEqual(concat([2, 3, 4])([1]), [1, 2, 3, 4]);\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n * Derivable from `Extend`.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n    });\n}; };\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: []\n}); };\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n}); };\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexport var filterE = \n/*#__PURE__*/\nfilterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","import { isNonEmpty } from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexport var empty = '';\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Monoid = {\n    concat: Semigroup.concat,\n    empty: empty\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nexport var isString = function (u) { return typeof u === 'string'; };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var toUpperCase = function (s) { return s.toUpperCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var toLowerCase = function (s) { return s.toLowerCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var replace = function (searchValue, replaceValue) { return function (s) {\n    return s.replace(searchValue, replaceValue);\n}; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var trim = function (s) { return s.trim(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var trimLeft = function (s) { return s.trimLeft(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var trimRight = function (s) { return s.trimRight(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var slice = function (start, end) { return function (s) { return s.slice(start, end); }; };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nexport var isEmpty = function (s) { return s.length === 0; };\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nexport var size = function (s) { return s.length; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nexport var split = function (separator) { return function (s) {\n    var out = s.split(separator);\n    return isNonEmpty(out) ? out : [s];\n}; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nexport var includes = function (searchString, position) { return function (s) {\n    return s.includes(searchString, position);\n}; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nexport var startsWith = function (searchString, position) { return function (s) {\n    return s.startsWith(searchString, position);\n}; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nexport var endsWith = function (searchString, position) { return function (s) {\n    return s.endsWith(searchString, position);\n}; };\n","/**\r\n * Functions for working with primitive arrays, regardless of type\r\n * See Also: NumericArrays.ts\r\n */\r\n\r\nimport {integer as guardInteger} from '../Guards.js';\r\nimport {defaultRandom, RandomSource} from '../Random.js';\r\nimport {IsEqual, isEqualDefault, isEqualValueDefault} from '../Util.js';\r\n\r\nexport * from './NumericArrays.js';\r\n\r\n/**\r\n * Throws an error if `array` parameter is not a valid array\r\n * @private\r\n * @param array \r\n * @param paramName \r\n */\r\nexport const guardArray = <V>(array:ArrayLike<V>, paramName:string = `?`) => {\r\n  if (array === undefined) throw new Error(`Param '${paramName}' is undefined. Expected array.`);\r\n  if (array === null) throw new Error(`Param '${paramName}' is null. Expected array.`);\r\n  if (!Array.isArray(array)) throw new Error(`Param '${paramName}' not an array as expected`);\r\n};\r\n\r\n/**\r\n * Throws if `index` is an invalid array index for `array`, and if\r\n * `array` itself is not a valid array.\r\n * @param array \r\n * @param index \r\n */\r\nexport const guardIndex = <V>(array:ReadonlyArray<V>, index:number, paramName:string = `index`) => {\r\n  guardArray(array);\r\n  guardInteger(index, `positive`, paramName);\r\n  if (index > array.length -1) throw new Error(`'${paramName}' ${index} beyond array max of ${array.length-1}`);\r\n};\r\n\r\n/**\r\n * Returns _true_ if all the contents of the array are identical.\r\n * \r\n * @example Uses default equality function:\r\n * ```js\r\n * const a1 = [10, 10, 10];\r\n * areValuesIdentical(a1); // True\r\n * \r\n * const a2 = [ {name:`Jane`}, {name:`John} ];\r\n * areValuesIdentical(a2); // True, because JSON version captures value\r\n * ```\r\n * \r\n * If we want to compare by value for objects that aren't readily\r\n * converted to JSON, you need to provide a function:\r\n * ```js\r\n * areValuesIdentical(someArray, (a, b) => {\r\n *  return (a.eventType === b.eventType);\r\n * });\r\n * ```\r\n * @param array Array\r\n * @param equality Equality checker. Uses string-conversion checking by default\r\n * @returns \r\n */\r\nexport const areValuesIdentical = <V>(array:ReadonlyArray<V>, equality?:IsEqual<V>):boolean => {\r\n  // Unit tested\r\n\r\n  if (!Array.isArray(array)) throw new Error(`Param 'array' is not an array.`);\r\n  if (array.length === 0) return true;\r\n  const eq = (equality === undefined) ? isEqualValueDefault : equality;\r\n  const a = array[0];\r\n  const r = array.some(v => !eq(a, v));\r\n  if (r) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Zip ombines the elements of two or more arrays based on their index.\r\n * \r\n * ```js\r\n * const a = [1,2,3];\r\n * const b = [`red`, `blue`, `green`];\r\n * \r\n * const c = zip(a, b);\r\n * // Yields:\r\n * // [\r\n * //   [1, `red`],\r\n * //   [2, `blue`],\r\n * //   [3, `green`]\r\n * // ]\r\n * ```\r\n * \r\n * Typically the arrays you zip together are all about the same logical item. Eg, in the above example\r\n * perhaps `a` is size and `b` is colour. So thing #1 (at array index 0) is a red thing of size 1. Before\r\n * zipping we'd access it by `a[0]` and `b[0]`. After zipping, we'd have c[0], which is array of [1, `red`].\r\n * @param arrays \r\n * @returns Zipped together array\r\n */\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const zip = (...arrays:ReadonlyArray<any>):ReadonlyArray<any> => {\r\n  // Unit tested\r\n  if (arrays.some((a) => !Array.isArray(a))) throw new Error(`All parameters must be an array`);\r\n  const lengths = arrays.map(a => a.length);\r\n  if (!areValuesIdentical(lengths)) throw new Error(`Arrays must be of same length`);\r\n  const ret = [];\r\n  const len = lengths[0];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<len;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    ret.push(arrays.map(a => a[i]));\r\n  }\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Returns an interleaving of two or more arrays. All arrays must be the same length.\r\n * \r\n * ```js\r\n * const a = [`a`, `b`, `c`];\r\n * const b = [`1`, `2`, `3`];\r\n * const c = interleave(a, b);\r\n * // Yields:\r\n * // [`a`, `1`, `b`, `2`, `c`, `3`]\r\n * ```\r\n * @param arrays \r\n * @returns \r\n */\r\nexport const interleave = <V>(...arrays:ReadonlyArray<readonly V[]>):ReadonlyArray<V> => {\r\n  if (arrays.some((a) => !Array.isArray(a))) throw new Error(`All parameters must be an array`);\r\n  const lengths = arrays.map(a => a.length);\r\n  if (!areValuesIdentical(lengths)) throw new Error(`Arrays must be of same length`);\r\n\r\n  const ret = [];\r\n  const len = lengths[0];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<len;i++) {\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let p=0;p<arrays.length;p++) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      ret.push(arrays[p][i]);\r\n    }\r\n  }\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Returns an copy of `data` with specified length.\r\n * If the input array is too long, it is truncated.\r\n *  \r\n * If the input array is too short, it will be expanded based on the `expand` strategy:\r\n *  - 'undefined': fill with `undefined`\r\n *  - 'repeat': repeat array elements, starting from position 0\r\n *  - 'first': continually use first element\r\n *  - 'last': continually use last element\r\n * \r\n * @example\r\n * ```js\r\n * ensureLength([1,2,3], 2); // [1,2]\r\n * ensureLength([1,2,3], 5, `undefined`); // [1,2,3,undefined,undefined]\r\n * ensureLength([1,2,3], 5, `repeat`);    // [1,2,3,1,2]\r\n * ensureLength([1,2,3], 5, `first`);     // [1,2,3,1,1]\r\n * ensureLength([1,2,3], 5, `last`);      // [1,2,3,3,3] \r\n * ```\r\n * @param data Input array to expand\r\n * @param length Desired length\r\n * @param expand Expand strategy\r\n * @typeParam V Type of array \r\n */\r\nexport const ensureLength = <V>(data:ReadonlyArray<V>, length:number, expand:`undefined`|`repeat`|`first`|`last` = `undefined`):ReadonlyArray<V> => {\r\n  // Unit tested\r\n  if (data === undefined) throw new Error(`Data undefined`);\r\n  if (!Array.isArray(data)) throw new Error(`data is not an array`);\r\n  if (data.length === length) return [...data];\r\n  if (data.length > length) {\r\n    return data.slice(0, length);\r\n  }\r\n  const d = [...data];\r\n  const add = length - d.length;\r\n  \r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<add;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (expand === `undefined`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(undefined);\r\n    } else if (expand === `repeat`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[i%data.length]);\r\n    } else if (expand === `first`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[0]);\r\n    } else if (expand === `last`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[data.length-1]);\r\n    }\r\n  }\r\n  return d;\r\n};\r\n\r\n\r\n/**\r\n * Return elements from `array` that match a given `predicate`, and moreover are between\r\n * the given `startIndex` and `endIndex` (both inclusive).\r\n * \r\n * While this can be done with in the in-built `array.filter` function, it will\r\n * needlessly iterate through the whole array. It also avoids another alternative \r\n * of slicing the array before using `filter`.\r\n * \r\n * ```js\r\n * // Return 'registered' people between and including array indexes 5-10\r\n * const filtered = filterBetween(people, person => person.registered, 5, 10);\r\n * ```\r\n * @param array Array to filter \r\n * @param predicate Filter function\r\n * @param startIndex Start index (defaults to 0)\r\n * @param endIndex End index (defaults to last index)\r\n */\r\nexport const filterBetween = <V>(array:ReadonlyArray<V>, predicate: (value: V, index: number, array: ReadonlyArray<V>) => boolean, startIndex?:number, endIndex?:number):readonly V[] => {\r\n  guardArray(array);\r\n  if (typeof startIndex === `undefined`) startIndex = 0;\r\n  if (typeof endIndex === `undefined`) endIndex = array.length-1;\r\n  guardIndex(array, startIndex, `startIndex`);\r\n  guardIndex(array, endIndex, `endIndex`);\r\n\r\n  const t:V[] = [];\r\n  //eslint-disable-next-line functional/no-let,functional/no-loop-statement\r\n  for (let i=startIndex;i<=endIndex;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (predicate(array[i], i, array)) t.push(array[i]);\r\n  }\r\n  return t;\r\n};\r\n/**\r\n * Returns a random array index.\r\n * \r\n * ```js\r\n * const v = [`blue`, `red`, `orange`];\r\n * randomIndex(v); // Yields 0, 1 or 2\r\n * ```\r\n * \r\n * Use {@link randomElement} if you want a value from `array`, not index.\r\n * \r\n * @param array Array\r\n * @param rand Random generator. `Math.random` by default.\r\n * @returns \r\n */\r\nexport const randomIndex = <V>(array: ArrayLike<V>, rand:RandomSource = defaultRandom): number => Math.floor(rand() * array.length);\r\n\r\n/**\r\n * Returns random element.\r\n * ```js\r\n * const v = [`blue`, `red`, `orange`];\r\n * randomElement(v); // Yields `blue`, `red` or `orange`\r\n * ```\r\n * \r\n * Use {@link randomIndex} if you want a random index within `array`.\r\n * \r\n * @param array\r\n * @params rand Random generator. `Math.random` by default.\r\n * @returns \r\n */\r\nexport const randomElement = <V>(array: ArrayLike<V>, rand:RandomSource = defaultRandom): V => {\r\n  guardArray(array, `array`);\r\n  return array[Math.floor(rand() * array.length)];\r\n};\r\n\r\n/**\r\n * Removes a random item from an array, returning both the item and the new array as a result.\r\n * Does not modify the original array unless `mutate` parameter is true.\r\n * \r\n * @example Without changing source\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const {value, array} = randomPluck(data);\r\n * // value: 20, array: [100, 40], data: [100, 20, 40];\r\n * ```\r\n *\r\n * @example Mutating source\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const {value} = randomPluck(data, true);\r\n * // value: 20, data: [100, 40];\r\n * ```\r\n * \r\n * @template V Type of array\r\n * @param array Array to pluck item from\r\n * @param mutate If _true_, changes input array. _False_ by default.\r\n * @param random Random generatr. `Math.random` by default.\r\n * @return Returns an object `{value:V|undefined, array:V[]}`\r\n * \r\n */\r\n//eslint-disable-next-line functional/prefer-readonly-type\r\nexport const randomPluck = <V>(array:readonly V[], mutate = false, rand:RandomSource = defaultRandom):{readonly value:V|undefined, readonly array:Array<V> } => {\r\n  if (array === undefined) throw new Error(`array is undefined`);\r\n  if (!Array.isArray(array)) throw new Error(`'array' param is not an array`);\r\n  if (array.length === 0) return {value: undefined, array: []};\r\n  const index = randomIndex(array, rand);\r\n  if (mutate) {\r\n    return {\r\n      value: array[index],\r\n      //eslint-disable-next-line functional/immutable-data\r\n      array: array.splice(index, 1)\r\n    };\r\n  } else {\r\n    // Copy array, remove item from that\r\n    const t = [...array];\r\n    //eslint-disable-next-line functional/immutable-data\r\n    t.splice(index, 1);\r\n    return {\r\n      value: array[index],\r\n      array: t\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a shuffled copy of the input array.\r\n * @example\r\n * ```js\r\n * const d = [1, 2, 3, 4];\r\n * const s = shuffle(d);\r\n * // d: [1, 2, 3, 4], s: [3, 1, 2, 4]\r\n * ```\r\n * @param dataToShuffle \r\n * @param rand Random generator. `Math.random` by default.\r\n * @returns Copy with items moved around randomly\r\n * @template V Type of array items\r\n */\r\nexport const shuffle = <V>(dataToShuffle:ReadonlyArray<V>, rand:RandomSource = defaultRandom): ReadonlyArray<V> => {\r\n  const array = [...dataToShuffle];\r\n  // eslint-disable-next-line functional/no-loop-statement, functional/no-let\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(rand() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n/**\r\n * Returns an array with a value omitted. If value is not found, result will be a copy of input.\r\n * Value checking is completed via the provided `comparer` function. \r\n * By default checking whether `a === b`. To compare based on value, use the `isEqualValueDefault` comparer.\r\n *\r\n * @example\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const filtered = without(data, 20); // [100, 40]\r\n * ```\r\n * \r\n * @example Using value-based comparison\r\n * ```js\r\n * const data = [{name: `Alice`}, {name:`Sam`}];\r\n * \r\n * // This wouldn't work as expected, because the default comparer uses instance,\r\n * // not value:\r\n * without(data, {name: `Alice`});\r\n * \r\n * // So instead we can use a value comparer:\r\n * without(data, {name:`Alice`}, isEqualValueDefault);\r\n * ```\r\n * \r\n * @example Use a function\r\n * ```js\r\n * const data = [{name: `Alice`}, {name:`Sam`}];\r\n * without(data, {name:`ALICE`}, (a, b) => {\r\n *  return (a.name.toLowerCase() === b.name.toLowerCase());\r\n * });\r\n * ```\r\n * \r\n * Consider {@link remove} to remove an item by index.\r\n * \r\n * @template V Type of array items\r\n * @param data Source array\r\n * @param value Value to remove\r\n * @param comparer Comparison function. If not provided `Util.isEqualDefault` is used, which compares using `===`\r\n * @return Copy of array without value.\r\n */\r\nexport const without = <V>(data:ReadonlyArray<V>, value:V, comparer:IsEqual<V> = isEqualDefault):ReadonlyArray<V> => data.filter(v => !comparer(v, value));\r\n\r\n/**\r\n * Removes an element at `index` index from `data`, returning the resulting array without modifying the original.\r\n * \r\n * ```js\r\n * const v = [ 100, 20, 50 ];\r\n * const vv = remove(2);\r\n * \r\n * Yields:\r\n *  v: [ 100, 20, 50 ]\r\n * vv: [ 100, 20 ] \r\n * ```\r\n * \r\n * Consider {@link without} if you want to remove an item by value.\r\n * \r\n * Throws an exception if `index` is outside the range of `data` array.\r\n * @param data Input array\r\n * @param index Index to remove\r\n * @typeParam V Type of array\r\n * @returns \r\n */\r\nexport const remove = <V>(data:ReadonlyArray<V>, index:number) : ReadonlyArray<V> => {\r\n  // ✔️ Unit tested\r\n  if (!Array.isArray(data)) throw new Error(`'data' parameter should be an array`);\r\n  guardIndex(data, index, `index`);\r\n  return [...data.slice(0, index), ...data.slice(index+1)]; \r\n};\r\n\r\n/**\r\n * Groups data by a function `grouper`, returning data as a map with string\r\n * keys and array values. Multiple values can be assigned to the same group.\r\n * \r\n * `grouper` must yield a string designated group for a given item.\r\n * \r\n * @example\r\n * ```js\r\n * const data = [\r\n *  { age: 39, city: `London` }\r\n *  { age: 14, city: `Copenhagen` }\r\n *  { age: 23, city: `Stockholm` }\r\n *  { age: 56, city: `London` }\r\n * ];\r\n * \r\n * // Whatever the function returns will be the designated group\r\n * // for an item\r\n * const map = groupBy(data, item => data.city); \r\n * ```\r\n * \r\n * This yields a Map with keys London, Stockholm and Copenhagen, and the corresponding values.\r\n * \r\n * ```\r\n * London: [{ age: 39, city: `London` }, { age: 56, city: `London` }]\r\n * Stockhom: [{ age: 23, city: `Stockholm` }]\r\n * Copenhagen: [{ age: 14, city: `Copenhagen` }]\r\n * ```\r\n * @param array Array to group\r\n * @param grouper Function that returns a key for a given item\r\n * @typeParam K Type of key to group by. Typically string.\r\n * @typeParam V Type of values\r\n * @returns Map \r\n */\r\nexport const groupBy = <K, V>(array: ReadonlyArray<V>, grouper: (item: V) => K) => array.reduce((store, item) => {\r\n  const key = grouper(item);\r\n  const val = store.get(key);\r\n  if (val === undefined) {\r\n    store.set(key, [item]);\r\n  } else {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    val.push(item);\r\n  }\r\n  return store;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n}, new Map<K, V[]>());\r\n\r\n/**\r\n * Samples array\r\n * \r\n * @example By percentage - get half of the items\r\n * ```\r\n * const list = [1,2,3,4,5,6,7,8,9,10];\r\n * const sub = sample(list, 0.5);\r\n * // Yields:\r\n * // [2, 4, 6, 8, 10]\r\n * ```\r\n * \r\n * @example By steps - every third\r\n * ```\r\n * const list = [1,2,3,4,5,6,7,8,9,10];\r\n * const sub = sample(list, 3);\r\n * // Yields:\r\n * // [3, 6, 9]\r\n * ```\r\n * @param array Array to sample\r\n * @param amount Amount, given as a percentage (0..1) or the number of interval (ie 3 for every third item)\r\n * @returns \r\n */\r\nexport const sample = <V>(array: ReadonlyArray<V>, amount:number):ReadonlyArray<V> => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let subsampleSteps = 1;\r\n  if (amount <= 1) {\r\n    // Subsample based on a percentage\r\n    const numberOfItems = array.length*amount;\r\n    subsampleSteps = Math.round(array.length/numberOfItems);\r\n  } else {\r\n    subsampleSteps = amount;\r\n  }\r\n\r\n  guardInteger(subsampleSteps, `positive`, `amount`);\r\n  if (subsampleSteps > array.length -1) throw new Error(`Subsample steps exceeds array length`);\r\n  \r\n  const r:V[] = [];\r\n  \r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=subsampleSteps-1;i<array.length;i+=subsampleSteps) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    r.push(array[i]);\r\n  }\r\n  return r;\r\n};","import { randomIndex, randomElement } from \"./collections/Arrays.js\";\r\nimport {number as guardNumber} from './Guards.js';\r\nimport * as Easings from \"./modulation/Easing.js\";\r\nimport {clamp} from './data/Clamp.js';\r\n\r\nexport {randomIndex as arrayIndex};\r\nexport {randomElement as arrayElement};\r\nexport {randomHue as hue} from './visual/Colour.js';\r\n\r\n/**\r\n * Default random number generator: `Math.random`.\r\n */\r\nexport const defaultRandom = Math.random;\r\n\r\n\r\n/**\r\n * A random source.\r\n * \r\n * Predefined sources: {@link defaultRandom}, {@link gaussianSkewed}, {@link weightedSkewed}\r\n */\r\nexport type RandomSource = () => number;\r\n\r\n/***\r\n * Returns a random number, 0..1, weighted by a given easing function. \r\n * Default easing is `quadIn`, which skews towards zero.\r\n * \r\n * ```js\r\n * weighted();          // quadIn easing by default, which skews toward low values\r\n * weighted(`quadOut`); // quadOut favours high values\r\n * ```\r\n * \r\n * Use {@link weightedSkewed} for a curried version that can be used as a {@link RandomSource}:\r\n * \r\n * ```js\r\n * const w = weightedSkewed(`quadIn`);\r\n * w(); // Produce a random number\r\n * ```\r\n * @param easingName Easing name. `quadIn` by default.\r\n * @param rand Source random generator. `Math.random` by default.\r\n * @returns Random number (0-1)\r\n */\r\nexport const weighted = (easingName:Easings.EasingName = `quadIn`, rand:RandomSource = defaultRandom):number => {\r\n  const r = rand();\r\n  const easingFn = Easings.get(easingName as Easings.EasingName);\r\n  if (easingFn === undefined) throw new Error(`Easing function '${easingName}' not found.`);\r\n  return easingFn(r);\r\n};\r\n\r\n/**\r\n * Returns a curried version of {@link weighted}.\r\n * \r\n * ```js\r\n * const w = weightedSkewed(`quadIn`);   // Returns a function\r\n * w(); // Produce a random number\r\n * ```\r\n * @param easingName \r\n * @param rand \r\n * @returns \r\n */\r\nexport const weightedSkewed = (easingName:Easings.EasingName = `quadIn`, rand:RandomSource = defaultRandom):RandomSource => () => weighted(easingName, rand);\r\n\r\n/**\r\n * Random integer, weighted according to an easing function.\r\n * Number will be inclusive of `min` and below `max`.\r\n * \r\n * ```js\r\n * // If only one parameter is provided, it's assumed to be the max:\r\n * // Random number that might be 0 through to 99\r\n * const r = weightedInteger(100);\r\n * \r\n * // If two numbers are given, it's assumed to be min, max\r\n * // Random number that might be 20 through to 29\r\n * const r = weightedInteger(20,30);\r\n * \r\n * // One number and string. First param is assumed to be\r\n * // the max, second parameter the easing function\r\n * const r = weightedInteger(100, `quadIn`)\r\n * ```\r\n * \r\n * Useful for accessing a random array element:\r\n * ```js\r\n * const list = [`mango`, `kiwi`, `grape`];\r\n * // Yields random item from list\r\n * list[weightedInteger(list.length)];\r\n * ```\r\n * \r\n * Note: result from easing function will be clamped to\r\n * the min/max (by default 0-1);\r\n * \r\n * @param max Maximum (exclusive)\r\n * @param min Minimum number (inclusive), 0 by default\r\n * @param rand Source random generator. `Math.random` by default.\r\n * @param easing Easing to use, uses `quadIn` by default\r\n * @returns \r\n */\r\nexport const weightedInteger = (minOrMax:number, maxOrEasing?:number|Easings.EasingName, easing?:Easings.EasingName, rand:RandomSource = defaultRandom) => {\r\n  // Unit tested - for ranges and params types. Haven't tested easing distribution\r\n\r\n  guardNumber(minOrMax);\r\n  //eslint-disable-next-line functional/no-let\r\n  let min, max, easingName;\r\n  easingName = `quadIn`;\r\n  min = 0;\r\n\r\n  if (maxOrEasing === undefined) {\r\n    // No second parameter\r\n    max = minOrMax;\r\n  } else {\r\n    // There is a second parameter\r\n    if (typeof maxOrEasing === `number`) {\r\n      min = minOrMax;\r\n      max = maxOrEasing;\r\n      if (easing !== undefined) easingName = easing;\r\n    } else if (typeof maxOrEasing === `string`) {\r\n      max = minOrMax;\r\n      easingName = maxOrEasing;\r\n    } else {\r\n      throw new Error(`Unexpected value type for maxOrEasing: ${maxOrEasing}`);\r\n    }\r\n  }\r\n  \r\n  if (easing !== undefined) easingName = easing;\r\n\r\n  const easingFn = Easings.get(easingName as Easings.EasingName);\r\n  if (easingFn === undefined) throw new Error(`Easing '${easingName}' not found`);\r\n\r\n  guardNumber(min);\r\n  if (max <= min) throw new Error(`Max should be greater than min`);\r\n  const r = clamp(easingFn(rand()));\r\n  return Math.floor(r * (max-min)) + min;\r\n};\r\n\r\n/**\r\n * Returns a random number with gaussian (ie bell-curved) distribution\r\n * ```js\r\n * // Yields a random number between 0..1\r\n * // with a gaussian distribution\r\n * gaussian();\r\n * ```\r\n * \r\n * Distribution can also be skewed:\r\n * ```js\r\n * // Yields a skewed random value\r\n * gaussian(10);\r\n * ```\r\n * \r\n * Use the curried version in order to pass the random number generator elsewhere:\r\n * ```js\r\n * const g = gaussianSkewed(10);\r\n * // Now it can be called without parameters\r\n * g(); // Yields skewed random\r\n * \r\n * // Eg:\r\n * shuffle(gaussianSkewed(10));\r\n * ```\r\n * @param skew Skew factor. Defaults to 1, no skewing. Above 1 will skew to left, below 1 will skew to right\r\n * @returns \r\n */\r\nexport const gaussian = (skew = 1) => {\r\n  const min = 0;\r\n  const max = 1;\r\n  // Source: https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let u = 0, v = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while(v === 0) v = Math.random();\r\n  //eslint-disable-next-line functional/no-let\r\n  let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\r\n  \r\n  num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n  if (num > 1 || num < 0) {\r\n    num = gaussian(skew);// resample between 0 and 1 if out of range\r\n  } else{\r\n    num = Math.pow(num, skew); // Skew\r\n    num *= max - min; // Stretch to fill range\r\n    num += min; // offset to min\r\n  }\r\n  return num;\r\n};\r\n\r\n/**\r\n * Returns a function of skewed gaussian values.\r\n * \r\n * This 'curried' function is useful when passing to other functions\r\n * ```js\r\n * // Curry\r\n * const g = gaussianSkewed(10);\r\n * \r\n * // Now it can be called without parameters\r\n * g(); // Returns skewed value\r\n * \r\n * // Eg:\r\n * shuffle(gaussianSkewed(10));\r\n * ```\r\n * @param skew Skew factor. Defaults to 1, no skewing. Above 1 will skew to left, below 1 will skew to right\r\n * @returns \r\n */\r\nexport const gaussianSkewed = (skew:number = 1) => () => gaussian(skew);\r\n\r\n/**\r\n * Returns a random integer between `max` (exclusive) and `min` (inclusive)\r\n * If `min` is not specified, 0 is used.\r\n * \r\n * ```js\r\n * integer(10);    // Random number 0-9\r\n * integer(5, 10); // Random number 5-9\r\n * integer(-5);       // Random number from -4 to 0\r\n * integer(-5, -10); // Random number from -10 to -6\r\n * ```\r\n * @param max \r\n * @param min \r\n * @returns \r\n */\r\nexport const integer = (max:number, min?:number) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let reverse = false;\r\n  if (min === undefined) {\r\n    if (max < 0) {\r\n      max = Math.abs(max);\r\n      reverse = true;\r\n    }\r\n    min = 0;\r\n  }\r\n  const amt = max - min;\r\n  const r = Math.floor(Math.random() * amt) + min;\r\n  if (reverse) return -r;\r\n  return r;\r\n};\r\n\r\n/**\r\n * Random a random float between `max` (exclusive) and `min` (inclusive).\r\n * 1 and 0 are used as default max and min, respectively.\r\n * \r\n * ```js\r\n * // Random number between 0..1 (but not including 1)\r\n * // (this would be identical to Math.random())\r\n * const v = float();\r\n * // Random float between 0..100 (but not including 100)\r\n * const v = float(100);\r\n * // Random float between 20..40 (possibily including 20, but always lower than 40)\r\n * const v = float(20, 40);\r\n * ```\r\n * @param max \r\n * @param min \r\n * @returns \r\n */\r\nexport const float = (max:number = 1, min:number = 0) => Math.random() * (max - min) + min;\r\n\r\n/**\r\n * Returns a string of random letters and numbers of a given `length`.\r\n * \r\n * ```js\r\n * string(4); // eg. `4afd`\r\n * ```\r\n * @param length Length of random string\r\n * @returns Random string\r\n */\r\nexport const string = (length:number) => Math.random().toString(36).substring(2, length+2);\r\n\r\nexport const shortGuid = () => {\r\n  // Via Stackoverflow...\r\n  const firstPart = (Math.random() * 46656) | 0;\r\n  const secondPart = (Math.random() * 46656) | 0;\r\n  const firstPartStr = `000${firstPart.toString(36)}`.slice(-3);\r\n  const secondPartStr = `000${secondPart.toString(36)}`.slice(-3);\r\n  return firstPartStr + secondPartStr;\r\n};\r\n","// Easings from https://easings.net/\r\nimport {interpolate} from '../data/Interpolate.js';\r\nimport {msElapsedTimer, HasCompletion, relativeTimer, ticksElapsedTimer, TimerSource} from '../flow/index.js';\r\n\r\nconst sqrt = Math.sqrt;\r\nconst pow = Math.pow;\r\nconst cos = Math.cos;\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst pi = Math.PI;\r\nconst sin = Math.sin;\r\n/*\r\ntype RelativeTimer = {\r\n  reset(): void\r\n  elapsed(): number\r\n  isDone(): boolean\r\n}\r\n\r\ntype TimerSource = (upperBound: number) => RelativeTimer;\r\n\r\nconst msRelativeTimer = function (upperBound: number): RelativeTimer {\r\n  let start = performance.now();\r\n  return {\r\n    reset: () => {\r\n      start = performance.now();\r\n    },\r\n    elapsed: () => clamp((performance.now() - start) / upperBound),\r\n    isDone: () => (performance.now() - start) >= upperBound,\r\n  };\r\n};\r\n\r\nconst tickRelativeTimer = function (upperBound: number): RelativeTimer {\r\n  let start = 0;\r\n  return {\r\n    reset: () => {\r\n      start = 0;\r\n    },\r\n    elapsed: () => clamp(start++ / upperBound),\r\n    isDone: () => start >= upperBound,\r\n  };\r\n};\r\n*/\r\n\r\nexport type EasingFn = (x: number) => number;\r\n\r\n/**\r\n * Creates an easing based on clock time\r\n * @example Time based easing\r\n * ```\r\n * const t = time(`quintIn`, 5*1000); // Will take 5 seconds to complete\r\n * ...\r\n * t.compute(); // Get current value of easing\r\n * t.reset();   // Reset to 0\r\n * t.isDone;    // _True_ if finished\r\n * ```\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param durationMs Duration in milliseconds\r\n * @returns Easing\r\n */\r\nexport const time = function (nameOrFn: EasingName|EasingFn, durationMs: number):Easing {\r\n  return create(nameOrFn, durationMs, msElapsedTimer);\r\n};\r\n\r\n/**\r\n * Creates an easing based on ticks\r\n * \r\n * @example Tick-based easing\r\n * ```\r\n * const t = tick(`sineIn`, 1000);   // Will take 1000 ticks to complete\r\n * t.compute(); // Each call to `compute` progresses the tick count\r\n * t.reset();   // Reset to 0\r\n * t.isDone;    // _True_ if finished\r\n * ```\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param durationTicks Duration in ticks\r\n * @returns Easing\r\n */\r\nexport const tick = function (nameOrFn: EasingName|EasingFn, durationTicks: number):Easing {\r\n  return create(nameOrFn, durationTicks, ticksElapsedTimer);\r\n};\r\n\r\n/**\r\n * 'Ease' from `0` to `1` over a delicious curve. Commonly used for animation\r\n * and basic modelling of phyical motion. \r\n * \r\n * Create via {@link tick} or {@link time}, call `compute` to calculate the next\r\n * value in the progression, until you reach `1` or `isDone` returns true.\r\n * \r\n */\r\nexport type Easing = HasCompletion & {\r\n/**\r\n * Computes the current value of the easing\r\n *\r\n * @returns {number}\r\n */\r\n  compute(): number\r\n\r\n/**\r\n * Reset the easing\r\n */\r\n  reset(): void\r\n/**\r\n * Returns true if the easing is complete\r\n *\r\n * @returns {boolean}\r\n */\r\n  get isDone(): boolean\r\n};\r\n\r\n/**\r\n * Creates a new easing by name\r\n *\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param duration Duration (meaning depends on timer source)\r\n * @param timerSource Timer source. Eg {@link tickRelativeTimer}, {@link msRelativeTimer}\r\n * @returns\r\n */\r\nconst create = function (nameOrFn: EasingName|EasingFn, duration: number, timerSource: TimerSource): Easing {\r\n  //eslint-disable-next-line functional/no-let\r\n  let fn:EasingFn|undefined;\r\n  if (typeof nameOrFn === `function`) fn = nameOrFn;\r\n  else fn = get(nameOrFn);\r\n  if (fn === undefined) throw new Error(`Easing function not found: ${nameOrFn}`);\r\n\r\n  // Get a relative version of timer\r\n  const timer = relativeTimer(duration, timerSource(), true);\r\n\r\n  return {\r\n    get isDone() {\r\n      return timer.isDone;\r\n    },\r\n    compute: () => {\r\n      const relative = timer.elapsed;\r\n      //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n      return fn!(relative);\r\n    },\r\n    reset: () => {\r\n      timer.reset();\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Creates an easing function using a simple cubic bezier defined by two points.\r\n * \r\n * Eg: https://cubic-bezier.com/#0,1.33,1,-1.25\r\n *  a:0, b: 1.33, c: 1, d: -1.25\r\n * \r\n * ```js\r\n * // Time-based easing using bezier\r\n * const e = Easings.time(fromCubicBezier(1.33, -1.25), 1000);\r\n * e.compute();\r\n * ```\r\n * @param b\r\n * @param d \r\n * @param t \r\n * @returns Value\r\n */\r\nexport const fromCubicBezier = (b:number, d:number):EasingFn => (t:number) => {\r\n  const s = 1-t;\r\n  const s2 = s*s;\r\n  const t2 = t*t;\r\n  const t3 = t2*t;\r\n  return (3*b*s2*t) + (3*d*s*t2) + (t3);\r\n};\r\n\r\n/**\r\n * Returns a mix of two easing functions.\r\n * \r\n * ```js\r\n * // Get a 50/50 mix of two easing functions at t=0.25\r\n * mix(0.5, 0.25, sineIn, sineOut);\r\n * \r\n * // 10% of sineIn, 90% of sineOut\r\n * mix(0.90, 0.25, sineIn, sineOut);\r\n * ```\r\n * @param amt 'Progress' value passed to the easing functions\r\n * @param balance Mix between a and b\r\n * @param easingA \r\n * @param easingB \r\n * @returns Numeric value\r\n */\r\nexport const mix = (amt:number, balance:number, easingA:EasingFn, easingB:EasingFn) => interpolate(balance, easingA(amt), easingB(amt));\r\n\r\n/**\r\n * Returns a 'crossfade' of two easing functions, synchronised with the progress through the easing. That is:\r\n * * 0.0 will yield 100% of easingA at its `easing(0)` value.\r\n * * 0.2 will yield 80% of a, 20% of b, with both at their `easing(0.2)` values\r\n * * 0.5 will yield 50% of both functions both at their `easing(0.5)` values\r\n * * 0.8 will yield 20% of a, 80% of a, with both at their `easing(0.8)` values\r\n * * 1.0 will yield 100% of easingB at its `easing(1)` value.\r\n * \r\n * So easingB will only ever kick in at higher `amt` values and `easingA` will only be present in lower valus.\r\n * @param amt\r\n * @param easingA\r\n * @param easingB \r\n * @returns Numeric value\r\n */\r\nexport const crossfade = (amt:number, easingA:EasingFn, easingB:EasingFn) => mix(amt, amt, easingA, easingB);\r\n\r\n/**\r\n * @private\r\n */\r\nexport type EasingName = keyof typeof functions;\r\n\r\n/**\r\n * Returns an easing function by name, or _undefined_ if not found.\r\n * This is a manual way of working with easing functions. If you want to\r\n * ease over time or ticks, use `Flow.Timer.msElapsedTimer` or `Flow.Timer.ticksElapsedTimer`.\r\n * \r\n * ```js\r\n * const fn = Easings.get(`sineIn`);\r\n * // Returns 'eased' transformation of 0.5\r\n * fn(0.5); \r\n * ```\r\n * @param easingName eg `sineIn`\r\n * @returns Easing function\r\n */\r\nexport const get = function (easingName: EasingName): EasingFn|undefined {\r\n  if (easingName === null) throw new Error(`easingName is null`);\r\n  if (easingName === undefined) throw new Error(`easingName is undefined`);\r\n  const name = easingName.toLocaleLowerCase();\r\n  const found = Object\r\n    .entries(functions)\r\n    .find(([k, _v]) => k.toLocaleLowerCase() === name);\r\n\r\n  if (found === undefined) return found;\r\n  return found[1];\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns Returns list of available easing names\r\n */\r\nexport const getEasings = function ():readonly string[] {\r\n  return Array.from(Object.keys(functions));\r\n};\r\n\r\n/**\r\n * Returns a roughly gaussian easing function\r\n * @param stdDev \r\n * @returns \r\n */\r\nexport const gaussian = (stdDev:number = 0.4):EasingFn => {\r\n  const a = 1/sqrt(2*pi);\r\n  const mean = 0.5;\r\n  \r\n  return (t:number) => {\r\n    const f = a / stdDev;\r\n    // p:-8 pinched\r\n    //eslint-disable-next-line functional/no-let\r\n    let p = -2.5;// -1/1.25;\r\n    //eslint-disable-next-line functional/no-let\r\n    let c = (t-mean)/stdDev;\r\n    c *= c;\r\n    p *= c;\r\n    const v = f * pow(Math.E, p);// * (2/pi);//0.62;\r\n    if (v > 1) return 1;\r\n    if (v < 0) return 0;\r\n\r\n    //if (v >1) console.log(v);\r\n    //if (v < 0) console.log(v);\r\n    return v;\r\n  };\r\n};\r\n\r\nconst bounceOut = function (x:number): number {\r\n  const n1 = 7.5625;\r\n  const d1 = 2.75;\r\n\r\n  if (x < 1 / d1) {\r\n    return n1 * x * x;\r\n  } else if (x < 2 / d1) {\r\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\r\n  } else if (x < 2.5 / d1) {\r\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\r\n  } else {\r\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\r\n  }\r\n};\r\n\r\nconst quintIn = (x:number):number => x * x * x * x * x;\r\nconst quintOut = (x:number):number => 1 - pow(1 - x, 5);\r\nconst arch = (x:number):number => (x * (1-x) * 4);\r\n\r\nexport const functions = {\r\n  arch,\r\n  bell: gaussian(),\r\n  sineIn: (x: number): number => 1 - cos((x * pi) / 2),\r\n  sineOut: (x: number): number => sin((x * pi) / 2),\r\n  quadIn: (x: number): number => x * x,\r\n  quadOut: (x: number): number => 1 - (1 - x) * (1 - x),\r\n  sineInOut: (x: number): number => -(cos(pi * x) - 1) / 2,\r\n  quadInOut: (x: number): number => (x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2),\r\n  cubicIn: (x: number): number => x * x * x,\r\n  cubicOut: (x: number): number => 1 - pow(1 - x, 3),\r\n  quartIn: (x: number): number => x * x * x * x,\r\n  quartOut: (x: number): number => 1 - pow(1 - x, 4),\r\n  quintIn,\r\n  quintOut, //: (x: number): number => 1 - pow(1 - x, 5),\r\n  expoIn: (x: number): number => (x === 0 ? 0 : pow(2, 10 * x - 10)),\r\n  expoOut: (x: number): number => (x === 1 ? 1 : 1 - pow(2, -10 * x)),\r\n  quintInOut: (x: number): number => (x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2),\r\n  expoInOut: (x: number): number => (x === 0\r\n    ? 0\r\n    : x === 1\r\n      ? 1\r\n      : x < 0.5 ? pow(2, 20 * x - 10) / 2\r\n        : (2 - pow(2, -20 * x + 10)) / 2),\r\n  circIn: (x: number): number => 1 - sqrt(1 - pow(x, 2)),\r\n  circOut: (x: number): number => sqrt(1 - pow(x - 1, 2)),\r\n  backIn: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c3 = c1 + 1;\r\n\r\n    return c3 * x * x * x - c1 * x * x;\r\n  },\r\n  backOut: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c3 = c1 + 1;\r\n\r\n    return 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\r\n  },\r\n  circInOut: (x: number): number => (x < 0.5\r\n    ? (1 - sqrt(1 - pow(2 * x, 2))) / 2\r\n    : (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2),\r\n  backInOut: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c2 = c1 * 1.525;\r\n\r\n    return x < 0.5\r\n      ? (pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\r\n      : (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\r\n  },\r\n  elasticIn: (x: number): number => {\r\n    const c4 = (2 * pi) / 3;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4);\r\n  },\r\n  elasticOut: (x: number): number => {\r\n    const c4 = (2 * pi) / 3;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\r\n  },\r\n  bounceIn: (x: number): number => 1 - bounceOut(1 - x),\r\n  bounceOut: bounceOut,\r\n  elasticInOut: (x: number): number => {\r\n    const c5 = (2 * pi) / 4.5;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : x < 0.5\r\n          ? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2\r\n          : (pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5)) / 2 + 1;\r\n  },\r\n  bounceInOut: (x: number): number => (x < 0.5\r\n    ? (1 - bounceOut(1 - 2 * x)) / 2\r\n    : (1 + bounceOut(2 * x - 1)) / 2)\r\n};","export * as Normalise from './Normalise.js';\r\nexport * from './FrequencyMutable.js';\r\nexport * from './MovingAverage.js';\r\nexport * from './NumberTracker.js';\r\nexport * from './IntervalTracker.js';\r\nexport * from './PointTracker.js';\r\nexport * from './TrackedValue.js';\r\n\r\nexport * from './Clamp.js';\r\nexport * from './Scale.js';\r\nexport * from './Flip.js';\r\nexport * from './Interpolate.js';\r\nexport * from './Wrap.js';\r\n\r\nexport const piPi = Math.PI*2;\r\nexport type NumberFunction = () => number;","import {minMaxAvg} from \"../collections/NumericArrays.js\";\r\nimport {clamp} from \"./Clamp.js\";\r\nimport {scale} from \"./Scale.js\";\r\n\r\n/**\r\n * Normalises numbers, adjusting min/max as new values are processed.\r\n * Normalised return values will be in the range of 0-1 (inclusive).\r\n * \r\n * [Read more in the docs](https://clinth.github.io/ixfx-docs/temporal/normalising/)\r\n * \r\n * @example\r\n * ```js\r\n * import {Normalise} from 'https://unpkg.com/ixfx/dist/temporal.js'\r\n * const s = Normalise.stream();\r\n * s(2);    // 1 (because 2 is highest seen)\r\n * s(1);    // 0 (because 1 is the lowest so far)\r\n * s(1.5);  // 0.5 (50% of range 1-2)\r\n * s(0.5);  // 0 (because it's the new lowest)\r\n * ```\r\n * \r\n * Since normalisation is being adjusted as new min/max are encountered, it might\r\n * be that value normalised to 1 at one time is different to what normalises to 1\r\n * at a later time.\r\n * \r\n * If you already know what to expect of the number range, passingin `minDefault` \r\n * and `maxDefault` primes the normalisation.\r\n * ```js\r\n * const s = Normalise.stream();\r\n * s(5); // 1, because it's the highest seen\r\n * \r\n * // With priming:\r\n * const s = Normalise.stream(0, 10);\r\n * s(5); // 0.5, because we're expecting range 0-10\r\n * ```\r\n * \r\n * Note that if a value exceeds the default range, normalisation adjusts.\r\n * @returns \r\n */\r\nexport const stream = (minDefault?:number, maxDefault?:number) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let min = minDefault ?? Number.MAX_SAFE_INTEGER;\r\n  //eslint-disable-next-line functional/no-let\r\n  let max = maxDefault ?? Number.MIN_SAFE_INTEGER;\r\n\r\n  return (v:number):number => {\r\n    min = Math.min(min, v);\r\n    max = Math.max(max, v);\r\n    return scale(v, min, max);\r\n  };\r\n};\r\n\r\n/**\r\n * Normalises an array. By default uses the actual min/max of the array\r\n * as the normalisation range. [Read more in the docs](https://clinth.github.io/ixfx-docs/temporal/normalising/)\r\n * \r\n * ```js\r\n * import {Normalise} from 'https://unpkg.com/ixfx/dist/temporal.js'\r\n * // Yields: [0.5, 0.1, 0.0, 0.9, 1]\r\n * Normalise.array([5,1,0,9,10]);\r\n * ```\r\n * \r\n * `minForced` and/or `maxForced` can\r\n * be provided to use an arbitrary range. \r\n * ```js\r\n * // Forced range 0-100\r\n * // Yields: [0.05, 0.01, 0.0, 0.09, 0.10]\r\n * Normalise.array([5,1,0,9,10], 0, 100);\r\n * ```\r\n * \r\n * Return values are clamped to always be 0-1, inclusive.\r\n * \r\n * @param values Values\r\n * @param minForced If provided, this will be min value used\r\n * @param maxForced If provided, this will be the max value used\r\n */\r\nexport const array = (values:readonly number[], minForced?:number, maxForced?:number) => {\r\n  if (!Array.isArray(values)) throw new Error(`values param should be an array`);\r\n  const mma = minMaxAvg(values);\r\n\r\n  const min = minForced ?? mma.min;\r\n  const max = maxForced ?? mma.max;\r\n\r\n  return values.map(v => clamp(scale(v, min, max)));\r\n};","import {zip, filterBetween} from './Arrays.js';\r\nimport * as Easings from \"../modulation/Easing.js\";\r\n\r\n/**\r\n * Applies a function `fn` to the elements of an array, weighting them based on their relative position.\r\n * \r\n * ```js\r\n * // Six items\r\n * weight([1,1,1,1,1,1], Easings.gaussian());\r\n * \r\n * // Yields:\r\n * // [0.02, 0.244, 0.85, 0.85, 0.244, 0.02]\r\n * ```\r\n * \r\n * `fn` is expected to map (0..1) => (0..1), such as an {@link Modulation.Easings.EasingFn}. The input to the\r\n * `fn` is the relative position of an element. Thus the first element will be 0, the middle 0.5 and so on.\r\n * The output of `fn` is then multiplied by the original value.\r\n * \r\n * In the below example (which is also the default if `fn` is not specified), the relative position is\r\n * how values are weighted:\r\n * \r\n * ```js\r\n * weight([1,1,1,1,1,1], (relativePos) => relativePos);\r\n * // Yields:\r\n * // [0, 0.2, 0.4, 0.6, 0.8, 1]\r\n * ```\r\n * \r\n * Non-numbers in `data` will be silently ignored (this filtering happens first, so relative index values are sane still).\r\n * \r\n * @param data Array of numbers\r\n * @param fn Returns a weighting based on the given relative position. If unspecified, `(x) => x` is used.\r\n */\r\nexport const weight = (data:readonly number[], fn?:(relativePos:number)=>number):readonly number[] => {\r\n  const f = (fn === undefined) ? (x:number) => x : fn;\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return validNumbers.map((v:number, index:number) => v*f(index/(validNumbers.length-1)));\r\n};\r\n\r\n/**\r\n * Returns the dot product of two arbitrary-sized arrays. Assumed they are of the same length.\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const dotProduct = (values:ReadonlyArray<readonly number[]>):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let r = 0;\r\n  const len = values[0].length;\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<len;i++) {\r\n    //eslint-disable-next-line functional/no-let\r\n    let t = 0;\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let p=0;p<values.length;p++) {\r\n      if (p === 0) t = values[p][i];\r\n      else {\r\n        t *= values[p][i];\r\n      }\r\n    }\r\n    r += t;\r\n  }\r\n  return r;\r\n};\r\n\r\n/**\r\n * Calculates the average of all numbers in an array.\r\n * Array items which aren't a valid number are ignored and do not factor into averaging.\r\n *\r\n * Use {@link minMaxAvg} if you want min, max and total as well.\r\n * \r\n * @example\r\n * ```\r\n * // Average of a list\r\n * const avg = average(1, 1.4, 0.9, 0.1);\r\n * \r\n * // Average of a variable\r\n * let data = [100,200];\r\n * average(...data);\r\n * ```\r\n * @param data Data to average.\r\n * @returns Average of array\r\n */\r\nexport const average = (...data: readonly number[]): number => {\r\n  // ✔ UNIT TESTED\r\n  if (data === undefined) throw new Error(`data parameter is undefined`);\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  const total = validNumbers.reduce((acc, v) => acc + v, 0);\r\n  return total / validNumbers.length;\r\n};\r\n\r\n/**\r\n * Computes an average of an array with a set of weights applied.\r\n * \r\n * Weights can be provided as an array, expected to be on 0..1 scale, with indexes\r\n * matched up to input data. Ie. data at index 2 will be weighed by index 2 in the weightings array.\r\n * \r\n * ```js\r\n * // All items weighted evenly\r\n * averageWeighted([1,2,3], [1,1,1]); // 2\r\n * \r\n * // First item has full weight, second half, third quarter\r\n * averageWeighted([1,2,3], [1, 0.5, 0.25]); // 1.57\r\n * \r\n * // With reversed weighting of [0.25,0.5,1] value is 2.42\r\n * ```\r\n * \r\n * A function can alternatively be provided to compute the weighting based on array index, via {@link weight}.\r\n * \r\n * ```js\r\n * averageWeighted[1,2,3], Easings.gaussian()); // 2.0\r\n * ```\r\n * \r\n * This is the same as:\r\n * ```js\r\n * const data = [1,2,3];\r\n * const w = weight(data, Easings.gaussian());\r\n * const avg = averageWeighted(data, w); // 2.0\r\n * ```\r\n * @param data Data to average\r\n * @param weightings Array of weightings that match up to data array, or an easing function \r\n */\r\nexport const averageWeighted = (data:readonly number[], weightings:(readonly number[])|Easings.EasingFn):number => {\r\n  if (typeof weightings === `function`) weightings = weight(data, weightings);\r\n\r\n  const ww = zip(data, weightings);\r\n  const [totalV, totalW] = ww.reduce((acc, v:number[]) => [acc[0] + (v[0]*v[1]), acc[1] + v[1]], [0, 0]);\r\n  return totalV/totalW;\r\n};\r\n\r\n/**\r\n * Returns the minimum number out of `data`.\r\n * Undefined and non-numbers are silently ignored.\r\n * @param data\r\n * @returns Minimum number\r\n */\r\nexport const min = (...data:readonly number[]):number => {\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return Math.min(...validNumbers);\r\n};\r\n\r\n/**\r\n * Returns the index of the largest value.\r\n * ```js\r\n * const v = [ 10, 40, 5 ];\r\n * maxIndex(v); // Yields 1\r\n * ```\r\n * @param data Array of numbers \r\n * @returns Index of largest value\r\n */\r\nexport const maxIndex = (...data:readonly number[]):number => data.reduce((bestIndex, value, index, arr) => (value > arr[bestIndex] ? index : bestIndex), 0);\r\n\r\n/**\r\n * Returns the index of the smallest value.\r\n * \r\n * ```js\r\n * const v = [ 10, 40, 5 ];\r\n * minIndex(v); // Yields 2\r\n * ```\r\n * @param data Array of numbers \r\n * @returns Index of smallest value\r\n */\r\nexport const minIndex = (...data:readonly number[]):number => data.reduce((bestIndex, value, index, arr) => (value < arr[bestIndex] ? index : bestIndex), 0);\r\n\r\n/**\r\n * Returns the maximum number out of `data`.\r\n * Undefined and non-numbers are silently ignored.\r\n * @param data List of numbers\r\n * @returns Maximum number\r\n */\r\nexport const max = (...data:readonly number[]):number => {\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return Math.max(...validNumbers);\r\n};\r\n\r\n/**\r\n * Returns the total of `data`.\r\n * Undefined and non-numbers are silently ignored\r\n * @param data Array of numbers\r\n * @returns Total\r\n */\r\nexport const total = (...data:readonly number[]):number => data.reduce((prev, curr) => {\r\n  if (typeof curr !== `number`) return prev;\r\n  if (Number.isNaN(curr)) return prev;\r\n  if (Number.isFinite(curr)) return prev;\r\n  return prev + curr;\r\n}, 0);\r\n\r\n/**\r\n * Returns the maximum out of `data` without pre-filtering for speed.\r\n * \r\n * For most uses, {@link max} should suffice.\r\n * @param data \r\n * @returns Maximum\r\n */\r\nexport const maxFast = (data:readonly number[]|Float32Array):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let m = Number.MIN_SAFE_INTEGER;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<data.length;i++) {\r\n    m = Math.max(m, data[i]);\r\n  }\r\n  return m;\r\n};\r\n\r\n\r\n/**\r\n * Returns the maximum out of `data` without pre-filtering for speed.\r\n * \r\n * For most uses, {@link max} should suffice.\r\n * @param data \r\n * @returns Maximum\r\n */\r\nexport const minFast = (data:readonly number[]|Float32Array):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let m = Number.MIN_SAFE_INTEGER;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<data.length;i++) {\r\n    m = Math.min(m, data[i]);\r\n  }\r\n  return m;\r\n};\r\n\r\nexport type MinMaxAvgTotal = {\r\n  /**\r\n   * Smallest value in array\r\n   */\r\n  readonly min: number \r\n  /**\r\n   * Total of all items\r\n   */\r\n  readonly total: number \r\n  /**\r\n   * Largest value in array\r\n   */\r\n  readonly max: number\r\n  /**\r\n   * Average value in array\r\n   */\r\n  readonly avg: number\r\n};\r\n\r\n/**\r\n * Returns the min, max, avg and total of the array.\r\n * Any values that are invalid are silently skipped over.\r\n * \r\n * ```js\r\n * const v = [10, 2, 4.2, 99];\r\n * const mma = minMaxAvg(v);\r\n * Yields: { min: 2, max: 99, total: 115.2, avg: 28.8 }\r\n * ```\r\n * \r\n * Use {@link average}, {@link max}, {@link min} or {@link total} if you only need one of these. \r\n * \r\n * A start and end range can be provided if the calculation should be restricted to a part\r\n * of the input array. By default the whole array is used.\r\n * \r\n * @param data\r\n * @param startIndex If provided, starting index to do calculations (defaults full range)\r\n * @param endIndex If provided, the end index to do calculations (defaults full range)\r\n * @returns `{min, max, avg, total}`\r\n */\r\nexport const minMaxAvg = (data: readonly number[], startIndex?:number, endIndex?:number):MinMaxAvgTotal  => {\r\n  if (data === undefined) throw new Error(`'data' is undefined`);\r\n  if (!Array.isArray(data)) throw new Error(`'data' parameter is not an array`);\r\n  \r\n  if (data.length === 0) {\r\n    return {\r\n      total: 0,\r\n      min: 0,\r\n      max: 0,\r\n      avg: 0\r\n    };\r\n  }\r\n  if (startIndex === undefined) startIndex = 0;\r\n  if (endIndex === undefined) endIndex = data.length - 1;\r\n\r\n  const validNumbers = filterBetween<number>(data, d => typeof d === `number` && !Number.isNaN(d), startIndex, endIndex);\r\n  const total = validNumbers.reduce((acc, v) => acc + v, 0);\r\n  return {\r\n    total: total,\r\n    max: Math.max(...validNumbers),\r\n    min: Math.min(...validNumbers),\r\n    avg: total / validNumbers.length\r\n  };\r\n};","import { number as guardNumber} from \"../Guards.js\";\r\n\r\n/**\r\n * Scales `v` from an input range to an output range (aka `map`)\r\n * \r\n * For example, if a sensor's useful range is 100-500, scale it to a percentage:\r\n * ```js\r\n * scale(sensorReading, 100, 500, 0, 1);\r\n * ```\r\n * \r\n * `scale` defaults to a percentage-range output, so you can get away with:\r\n * ```js\r\n * scale(sensorReading, 100, 500);\r\n * ```\r\n * \r\n * If `v` is outside of the input range, it will likewise be outside of the output range.\r\n * Use {@link clamp} to ensure output range is maintained.\r\n * \r\n * If inMin and inMax are equal, outMax will be returned.\r\n * \r\n * An easing function can be provided for non-linear scaling. In this case\r\n * the input value is 'pre scaled' using the function before it is applied to the\r\n * output range.\r\n * ```js\r\n * scale(sensorReading, 100, 500, 0, 1, Easings.gaussian());\r\n * ```\r\n * @param v Value to scale\r\n * @param inMin Input minimum\r\n * @param inMax Input maximum\r\n * @param outMin Output minimum. If not specified, 0\r\n * @param outMax Output maximum. If not specified, 1\r\n * @param easing Easing function\r\n * @returns Scaled value\r\n */\r\nexport const scale = (\r\n  v:number, \r\n  inMin:number, inMax:number, \r\n  outMin?:number, outMax?:number,\r\n  easing?:(v:number)=>number\r\n):number => {\r\n  if (outMax === undefined) outMax = 1;\r\n  if (outMin === undefined) outMin = 0;\r\n  if (inMin === inMax) return outMax;\r\n  //console.log(`v: ${v} in: ${inMin}-${inMax} out: ${outMin}-${outMax}`);\r\n  //eslint-disable-next-line functional/no-let\r\n  let a = (v - inMin) / (inMax - inMin);\r\n  if (easing !== undefined) a = easing(a);\r\n  return a * (outMax - outMin) + outMin;\r\n  //return (v - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\r\n};\r\n\r\n/**\r\n * Scales an input percentage to a new percentage range.\r\n * \r\n * If you have an input percentage (0-1), `scalePercentageOutput` maps it to an\r\n * _output_ percentage of `outMin`-`outMax`.\r\n * \r\n * ```js\r\n * // Scales 50% to a range of 0-10%\r\n * scalePercentages(0.5, 0, 0.10); // 0.05 - 5%\r\n * ```\r\n * \r\n * An error is thrown if any parameter is outside of percentage range. This added\r\n * safety is useful for catching bugs. Otherwise, you could just as well call\r\n * `scale(percentage, 0, 1, outMin, outMax)`.\r\n * \r\n * If you want to scale some input range to percentage output range, just use `scale`:\r\n * ```js\r\n * // Yields 0.5\r\n * scale(2.5, 0, 5);\r\n * ```\r\n * @param percentage Input value, within percentage range\r\n * @param outMin Output minimum, between 0-1\r\n * @param outMax Output maximum, between 0-1\r\n * @returns Scaled value between outMin-outMax.\r\n */\r\nexport const scalePercentages = (percentage:number, outMin:number, outMax:number = 1):number => {\r\n  guardNumber(percentage, `percentage`, `v`);\r\n  guardNumber(outMin, `percentage`, `outMin`);\r\n  guardNumber(outMax, `percentage`, `outMax`);\r\n  return scale(percentage, 0, 1, outMin, outMax);\r\n};\r\n\r\n\r\n/**\r\n * Scales an input percentage value to an output range\r\n * If you have an input percentage (0-1), `scalePercent` maps it to an output range of `outMin`-`outMax`.\r\n * ```js\r\n * scalePercent(0.5, 10, 20); // 15\r\n * ```\r\n * \r\n * @param v Value to scale\r\n * @param outMin Minimum for output\r\n * @param outMax Maximum for output\r\n * @returns \r\n */\r\nexport const scalePercent = (v:number, outMin:number, outMax:number):number => {\r\n  guardNumber(v, `percentage`, `v`);\r\n  return scale(v, 0, 1, outMin, outMax);\r\n};\r\n","import * as Arcs from './Arc.js';\r\nimport * as Beziers from './Bezier.js';\r\nimport * as Circles from './Circle.js';\r\nimport * as Compound from './CompoundPath.js';\r\nimport * as Grids from './Grid.js';\r\nimport * as Lines from './Line.js';\r\nimport * as Paths from './Path.js';\r\nimport * as Points from './Point.js';\r\nimport * as Rects from './Rect.js';\r\nimport * as Ellipses from './Ellipse.js';\r\nimport * as Polar from './Polar.js';\r\nimport * as Shapes from './Shape.js';\r\n\r\nexport {Circles, Arcs, Lines, Rects, Points, Paths, Grids, Beziers, Compound, Ellipses, Polar, Shapes};\r\n\r\n\r\n/**\r\n * Triangle processing.\r\n * \r\n * Helpers for creating:\r\n * - {@link Triangles.fromFlatArray}: Create from `[ x1, y1, x2, y2, x3, y3 ]`\r\n * - {@link Triangles.fromPoints}: Create from three `{ x, y }` sets\r\n * - {@link Triangles.fromRadius}: Equilateral triangle of a given radius and center\r\n * \r\n * There are two sub-modules for dealing with particular triangles:\r\n * - {@link Triangles.Equilateral}: Equilateral triangls\r\n * - {@link Triangles.Right}: Right-angled triangles\r\n */\r\nexport * as Triangles from './Triangle.js';\r\n\r\n/**\r\n * Convert angle in degrees to angle in radians.\r\n * @param angleInDegrees \r\n * @returns \r\n */\r\nexport function degreeToRadian(angleInDegrees:number):number;\r\n\r\n/**\r\n * Convert angles in degrees to angles in radians\r\n * @param angleInDegrees \r\n */\r\nexport function degreeToRadian(angleInDegrees:readonly number[]):readonly number[];\r\n\r\n//eslint-disable-next-line func-style\r\nexport function degreeToRadian(angleInDegrees:number|readonly number[]):number|readonly number[] {\r\n  if (Array.isArray(angleInDegrees)) {\r\n    return angleInDegrees.map(v => v * (Math.PI / 180.0));\r\n  } else {\r\n    return (angleInDegrees as number) * (Math.PI / 180.0);\r\n  }\r\n}\r\n\r\n/**\r\n * Convert angle in radians to angle in degrees\r\n * @param angleInRadians\r\n * @returns \r\n */\r\nexport function radianToDegree(angleInRadians:number):number;\r\n\r\n/**\r\n * Convert angles in radians to angles in degrees\r\n * @param angleInRadians \r\n */\r\nexport function radianToDegree(angleInRadians:readonly number[]):readonly number[];\r\n\r\n//eslint-disable-next-line func-style\r\nexport function radianToDegree(angleInRadians:number|readonly number[]):number| readonly number[] {\r\n  if (Array.isArray(angleInRadians)) {\r\n    return angleInRadians.map(v => v * 180 / Math.PI);\r\n  } else {\r\n    return (angleInRadians as number) * 180 / Math.PI;\r\n  }\r\n}\r\n\r\n/**\r\n * Angle from x-axis to point (ie. `Math.atan2`)\r\n * @param point \r\n * @returns \r\n */\r\nexport const radiansFromAxisX = (point:Points.Point):number => Math.atan2(point.x, point.y);\r\n\r\ntry {\r\n  if (typeof window !== `undefined`) {\r\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\r\n    (window as any).ixfx = {...(window as any).ixfx, Geometry: {Circles, Arcs, Lines, Rects, Points, Paths, Grids, Beziers, Compound, Ellipses, Polar, Shapes, radiansFromAxisX, radianToDegree, degreeToRadian}};\r\n  }\r\n} catch { /* no-op */ }","import {degreeToRadian, Polar} from './index.js';\r\nimport {guard as guardPoint, isPoint} from './Point.js';\r\nimport {Path} from './Path.js';\r\nimport {Lines, Points, Rects} from './index.js';\r\n\r\n/**\r\n * Returns true if parameter is an arc\r\n * @param p Arc or number\r\n * @returns \r\n */\r\nexport const isArc = (p: Arc|number|unknown): p is Arc => (p as Arc).startRadian !== undefined && (p as Arc).endRadian !== undefined;\r\n\r\n/**\r\n * Returns true if parameter has a positioned (x,y) \r\n * @param p Point, Arc or ArcPositiond\r\n * @returns \r\n */\r\nexport const isPositioned = (p: Points.Point | Arc| ArcPositioned): p is Points.Point => (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\r\n\r\n/**\r\n * Arc, defined by radius, start and end point in radians, and whether it is counter-clockwise.\r\n */\r\nexport type Arc = {\r\n/**\r\n * Radius of arc\r\n */\r\n  readonly radius:number\r\n/**\r\n * Start radian\r\n */\r\n  readonly startRadian:number\r\n/**\r\n * End radian\r\n */\r\n  readonly endRadian:number\r\n/**\r\n * If true, arc is counter-clockwise\r\n */\r\n  readonly counterClockwise?:boolean\r\n}\r\n\r\n/**\r\n * An {@link Geometry.Arcs.Arc} that also has a position, given in x, y\r\n */\r\nexport type ArcPositioned = Points.Point & Arc;\r\n\r\nconst piPi = Math.PI *2;\r\n\r\n/**\r\n * Returns an arc from degrees, rather than radians\r\n * @param radius Radius of arc\r\n * @param startDegrees Start angle in degrees\r\n * @param endDegrees End angle in degrees\r\n * @param origin Optional center of arc\r\n * @returns Arc\r\n */\r\nexport function fromDegrees(radius:number, startDegrees:number, endDegrees:number):Arc;\r\nexport function fromDegrees(radius:number, startDegrees:number, endDegrees:number, origin:Points.Point):ArcPositioned\r\n\r\n//eslint-disable-next-line func-style\r\nexport function fromDegrees(radius:number, startDegrees:number, endDegrees:number, origin?:Points.Point):Arc|ArcPositioned  {\r\n  const a:Arc = {\r\n    radius,\r\n    startRadian:degreeToRadian(startDegrees),\r\n    endRadian:degreeToRadian(endDegrees)\r\n  };\r\n  if (isPoint(origin)) {\r\n    guardPoint(origin);\r\n    const ap:ArcPositioned = {\r\n      ...a,\r\n      x: origin.x,\r\n      y: origin.y\r\n    };\r\n    return Object.freeze(ap);\r\n  } else {\r\n    return Object.freeze(a);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a {@link Geometry.Lines.Line} linking the start and end points of an {@link ArcPositioned}.\r\n *\r\n * @param arc\r\n * @returns Line from start to end of arc\r\n */\r\nexport const toLine = (arc:ArcPositioned):Lines.Line => Lines.fromPoints(\r\n  point(arc, arc.startRadian),\r\n  point(arc, arc.endRadian)\r\n);\r\n\r\n/**\r\n * Calculates a coordinate on an arc, based on an angle\r\n * @param arc Arc\r\n * @param angleRadian Angle of desired coordinate \r\n * @param origin Origin of arc (0,0 used by default)\r\n * @returns Coordinate\r\n */\r\nexport const point = (arc:Arc|ArcPositioned, angleRadian:number, origin?:Points.Point): Points.Point => {\r\n  if (angleRadian > arc.endRadian) throw new Error(`angleRadian beyond end angle of arc`);\r\n  if (angleRadian < arc.startRadian) throw new Error(`angleRadian beyond start angle of arc`);\r\n\r\n  if (origin === undefined) {\r\n    if (isPositioned(arc)) {\r\n      origin = arc;\r\n    } else {\r\n      origin = {x:0, y:0};\r\n    }\r\n  }\r\n  return {\r\n    x: (Math.cos(angleRadian) * arc.radius) + origin.x,\r\n    y: (Math.sin(angleRadian) * arc.radius) + origin.y\r\n  };\r\n};\r\n\r\n/**\r\n * Throws an error if arc instance is invalid\r\n * @param arc \r\n */\r\nexport const guard = (arc:Arc|ArcPositioned) => {\r\n  if (arc === undefined) throw new Error(`Arc is undefined`);\r\n  if (isPositioned(arc)) {\r\n    guardPoint(arc, `arc`);\r\n  }\r\n  if (arc.radius === undefined) throw new Error(`Arc radius is undefined (${JSON.stringify(arc)})`);\r\n  if (typeof arc.radius !== `number`) throw new Error(`Radius must be a number`);\r\n  if (Number.isNaN(arc.radius)) throw new Error(`Radius is NaN`);\r\n  if (arc.radius <= 0) throw new Error(`Radius must be greater than zero`);\r\n\r\n  if (arc.startRadian === undefined) throw new Error(`Arc is missing 'startRadian' field`);\r\n  if (arc.endRadian === undefined) throw new Error(`Arc is missing 'startRadian' field`);\r\n  if (Number.isNaN(arc.endRadian)) throw new Error(`Arc endRadian is NaN`);\r\n  if (Number.isNaN(arc.startRadian)) throw new Error(`Arc endRadian is NaN`);\r\n\r\n  if (arc.startRadian >= arc.endRadian) throw new Error(`startRadian is expected to be les than endRadian`);  \r\n};\r\n\r\n\r\ntype Interpolate = {\r\n  (amount:number, arc:Arc, origin:Points.Point):Points.Point;\r\n  (amount:number, arc:ArcPositioned):Points.Point;\r\n};\r\n\r\n/**\r\n * Compute relative position on arc\r\n * @param arc Arc\r\n * @param amount Relative position 0-1\r\n * @param origin If arc is not positioned, pass in an origin\r\n * @returns \r\n */\r\nexport const interpolate:Interpolate = (amount:number, arc:ArcPositioned|Arc, origin?:Points.Point):Points.Point => {\r\n  guard(arc);\r\n  return point(arc, arc.startRadian + ((arc.endRadian-arc.startRadian)*amount), origin);\r\n};\r\n\r\n/**\r\n * Creates a {@link Geometry.Paths.Path} instance from the arc. This wraps up some functions for convienence.\r\n * @param arc \r\n * @returns Path\r\n */\r\nexport const toPath = (arc:ArcPositioned): Path => {\r\n  guard(arc);\r\n\r\n  return Object.freeze({\r\n    ...arc,\r\n    interpolate:(amount:number) => interpolate(amount, arc),\r\n    bbox:() => bbox(arc) as Rects.RectPositioned,\r\n    length: () => length(arc),\r\n    toSvgString:() => toSvg(arc),\r\n    kind: `arc`\r\n  });\r\n};\r\n\r\n/**\r\n * Calculates the length of the arc\r\n * @param arc \r\n * @returns Length\r\n */\r\nexport const length = (arc:Arc):number =>  piPi*arc.radius*((arc.startRadian-arc.endRadian)/piPi);\r\n\r\n/**\r\n * Calculates a {@link Geometry.Rects.Rect | Rect} bounding box for arc.\r\n * @param arc \r\n * @returns Rectangle encompassing arc.\r\n */\r\nexport const bbox = (arc:ArcPositioned|Arc):Rects.RectPositioned|Rects.Rect => {\r\n  if (isPositioned(arc)) {\r\n    const middle = interpolate(0.5, arc);\r\n    const asLine = toLine(arc);\r\n    return Points.bbox(middle, asLine.a, asLine.b);\r\n  } else {\r\n    return {\r\n      width: arc.radius*2,\r\n      height: arc.radius*2\r\n    };\r\n  }\r\n};\r\n\r\n\r\ntype ToSvg = {\r\n  /**\r\n   * SVG path for arc description\r\n   * @param origin Origin of arc\r\n   * @param radius Radius\r\n   * @param startRadian Start\r\n   * @param endRadian End\r\n   */\r\n  (origin:Points.Point, radius:number, startRadian:number, endRadian:number, opts?:SvgOpts): readonly string[];\r\n  /**\r\n   * SVG path for non-positioned arc\r\n   */\r\n  (arc:Arc, origin:Points.Point, opts?:SvgOpts): readonly string[];\r\n/**\r\n * SVG path for positioned arc\r\n */\r\n  (arc:ArcPositioned, opts?:SvgOpts): readonly string[];\r\n};\r\n\r\n\r\n/**\r\n * Creates an SV path snippet for arc\r\n * @returns \r\n */\r\nexport const toSvg:ToSvg = (a:Points.Point|Arc|ArcPositioned, b?:number|Points.Point|SvgOpts, c?:number|SvgOpts, d?:number, e?:SvgOpts) => {\r\n  if (isArc(a)) {\r\n    if (isPositioned(a)) {\r\n      return toSvgFull(a, a.radius, a.startRadian, a.endRadian, b as SvgOpts);\r\n    } else {\r\n      if (isPoint(b)) {\r\n        return toSvgFull(b, a.radius, a.startRadian, a.endRadian, c as SvgOpts);\r\n      } else {\r\n        return toSvgFull({x: 0, y: 0 }, a.radius, a.startRadian, a.endRadian);\r\n      }\r\n    }\r\n  } else {\r\n    if (c === undefined) throw new Error(`startAngle undefined`);\r\n    if (d === undefined) throw new Error(`endAngle undefined`);\r\n   \r\n    if (isPoint(a)) {\r\n      if (typeof b === `number` && typeof c ===  `number` && typeof d === `number`) {\r\n        return toSvgFull(a, b, c, d, e);\r\n      } else {\r\n        throw new Error(`Expected (point, number, number, number). Missing a number param.`);\r\n      }\r\n    } else {\r\n      throw new Error(`Expected (point, number, number, number). Missing first point.`);\r\n    }\r\n  } \r\n};\r\n\r\nexport type SvgOpts = {\r\n  \r\n  /**\r\n   * \"If the arc should be greater or less than 180 degrees\"\r\n   * ie. tries to maximise arc length\r\n   */\r\n  readonly largeArc?:boolean\r\n  \r\n  /**\r\n   * \"If the arc should begin moving at positive angles\"\r\n   * ie. the kind of bend it makes to reach end point\r\n   */\r\n  readonly sweep?:boolean\r\n}\r\n\r\nconst toSvgFull = (origin:Points.Point, radius:number, startRadian:number, endRadian:number, opts?:SvgOpts):readonly string[] => {\r\n  // https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\r\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n  // a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy\r\n\r\n  if (opts === undefined || typeof opts !== `object`) opts = {};\r\n\r\n  const isFullCircle = endRadian - startRadian === 360;\r\n  const start = Polar.toCartesian(radius, endRadian - 0.01, origin);\r\n  const end = Polar.toCartesian(radius, startRadian, origin);\r\n  \r\n  const {largeArc = false, sweep = false} = opts;\r\n\r\n  const d = [`\r\n    M ${start.x} ${start.y}\r\n    A ${radius} ${radius} 0 ${largeArc ? `1` : `0`} ${sweep ? `1` : `0`} ${end.x} ${end.y},\r\n  `];\r\n\r\n  //eslint-disable-next-line functional/immutable-data\r\n  if (isFullCircle) d.push(`z`);\r\n\r\n  return d;\r\n};\r\n\r\n/**\r\n * Calculates the distance between the centers of two arcs\r\n * @param a\r\n * @param b \r\n * @returns Distance \r\n */\r\nexport const distanceCenter = (a:ArcPositioned, b:ArcPositioned):number => Points.distance(a, b);\r\n\r\n/**\r\n * Returns true if the two arcs have the same values\r\n *\r\n * @param a\r\n * @param b\r\n * @returns {boolean}\r\n */\r\nexport const isEquals = (a:Arc|ArcPositioned, b:Arc|ArcPositioned):boolean => {\r\n  if (a.radius !== b.radius) return false;\r\n\r\n  if (isPositioned(a) && isPositioned(b)) {\r\n    if (a.x !== b.x) return false;\r\n    if (a.y !== b.y) return false;\r\n    if (a.z !== b.z) return false;\r\n    return true;\r\n  } else if (!isPositioned(a) && !isPositioned(b)) {\r\n    // no-op\r\n  } else return false; // one is positioned one not\r\n\r\n  if (a.endRadian !== b.endRadian) return false;\r\n  if (a.startRadian !== b.startRadian) return false;\r\n  return true;\r\n};","import { Circles, Lines, Points, Polar, Rects} from \"./index.js\";\r\nimport {interpolate as lineInterpolate} from './Line.js';\r\nimport { number as guardNumber} from '../Guards.js';\r\nimport {clamp as clampNumber, wrap as wrapNumber} from '../data/index.js';\r\nimport {Arrays} from \"../collections/index.js\";\r\nimport { RandomSource, defaultRandom } from \"../Random.js\";\r\nimport {isRect} from \"./Rect.js\";\r\n/**\r\n * A point, consisting of x, y and maybe z fields.\r\n */\r\nexport type Point = {\r\n  readonly x: number\r\n  readonly y: number\r\n  readonly z?: number\r\n};\r\n\r\nexport type Point3d = Point & {\r\n  readonly z:number\r\n};\r\n\r\n/**\r\n * \r\n * @ignore\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const getPointParam = (a?:Point|number, b?:number):Point => {\r\n  if (a === undefined) return {x:0, y:0};\r\n\r\n  if (Points.isPoint(a)) {\r\n    return a;\r\n  } else if (typeof a !== `number` || typeof b !== `number`) {\r\n    throw new Error(`Expected point or x,y as parameters. Got: a: ${JSON.stringify(a)} b: ${JSON.stringify(b)}`);\r\n  } else {\r\n    return {x: a, y: b};\r\n  }\r\n};\r\n\r\nexport const dotProduct = (...pts:readonly Point[]):number => {\r\n  const a = pts.map(p => Points.toArray(p));\r\n  return Arrays.dotProduct(a);\r\n};\r\n\r\n/**\r\n * An empty point of `{x:0, y:0}`\r\n */\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const Empty = Object.freeze({ x:0, y: 0});\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const Placeholder = Object.freeze({x:NaN, y:NaN});\r\n\r\nexport const isEmpty = (p:Point) => p.x === 0 && p.y === 0;\r\n\r\nexport const isPlaceholder = (p:Point) => Number.isNaN(p.x) && Number.isNaN(p.y);\r\n\r\n\r\nexport const center = (shape?:Rects.Rect):Point => {\r\n  if (shape === undefined) {\r\n    return Object.freeze({x:0.5, y:0.5});\r\n  } else if (Rects.isRect(shape)) {\r\n    return Rects.center(shape as Rects.Rect);\r\n  } else {\r\n    throw new Error(`Unknown shape: ${JSON.stringify(shape)}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the 'minimum' point from an array of points, using a comparison function.\r\n * \r\n * @example Find point closest to a coordinate\r\n * ```js\r\n * const points = [...];\r\n * const center = {x: 100, y: 100};\r\n * \r\n * const closestToCenter = findMinimum((a, b) => {\r\n *  const aDist = distance(a, center);\r\n *  const bDist = distance(b, center);\r\n *  if (aDistance < bDistance) return a;\r\n *  return b;\r\n * }, points);\r\n * ```\r\n * @param compareFn Compare function returns the smallest of `a` or `b`\r\n * @param points \r\n * @returns \r\n */\r\nexport const findMinimum = (compareFn:(a:Point, b:Point)=>Point, ...points:readonly Point[]):Point => {\r\n  if (points.length === 0) throw new Error(`No points provided`);\r\n  //eslint-disable-next-line functional/no-let\r\n  let min = points[0];\r\n  points.forEach(p => {\r\n    min = compareFn(min, p);\r\n  });\r\n  return min;\r\n};\r\n\r\nexport function distance(a:Point, b:Point):number;\r\nexport function distance(a:Point, x:number, y:number):number;\r\nexport function distance(a:Point):number;\r\n\r\n/**\r\n * Calculate distance between two points\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function distance(a:Point, xOrB?:Point|number, y?:number):number {\r\n  const pt = getPointParam(xOrB, y);\r\n  guard(pt);\r\n  \r\n  return Math.hypot(pt.x-a.x, pt.y-a.y);\r\n}\r\n\r\n/**\r\n * Returns the distance from point `a` to the exterior of `shape`.\r\n * \r\n * @example Distance from point to rectangle\r\n * ```\r\n * const distance = distanceToExterior(\r\n *  {x: 50, y: 50},\r\n *  {x: 100, y: 100, width: 20, height: 20}\r\n * );\r\n * ```\r\n * \r\n * @example Find closest shape to point\r\n * ```\r\n * import {minIndex} from '../collections/arrays.js';\r\n * const shapes = [ some shapes... ]; // Shapes to compare against\r\n * const pt = { x: 10, y: 10 };       // Comparison point\r\n * const distances = shapes.map(v => distanceToExterior(pt, v));\r\n * const closest = shapes[minIndex(...distances)];\r\n * ```\r\n * @param a Point\r\n * @param shape Point, or a positioned Rect or Circle.\r\n * @returns \r\n */\r\nexport const distanceToExterior = (a:Point, shape:PointCalculableShape):number => {\r\n  if (Rects.isRectPositioned(shape)) {\r\n    return Rects.distanceFromExterior(shape, a);\r\n  }\r\n  if (Circles.isCirclePositioned(shape)) {\r\n    return Circles.distanceFromExterior(shape, a);\r\n  }\r\n  if (isPoint(shape)) return distance(a, shape);\r\n  throw new Error(`Unknown shape`);\r\n};\r\n\r\n/**\r\n * Returns the distance from point `a` to the center of `shape`.\r\n * @param a Point\r\n * @param shape Point, or a positioned Rect or Circle.\r\n * @returns \r\n */\r\nexport const distanceToCenter = (a:Point, shape:PointCalculableShape):number => {\r\n  if (Rects.isRectPositioned(shape)) {\r\n    return Rects.distanceFromExterior(shape, a);\r\n  }\r\n  if (Circles.isCirclePositioned(shape)) {\r\n    return Circles.distanceFromExterior(shape, a);\r\n  }\r\n  if (isPoint(shape)) return distance(a, shape);\r\n  throw new Error(`Unknown shape`);\r\n};\r\n\r\nexport type PointCalculableShape =  Lines.PolyLine | Lines.Line | Rects.RectPositioned | Point | Circles.CirclePositioned\r\n\r\n/**\r\n * Throws an error if point is invalid\r\n * @param p \r\n * @param name \r\n */\r\nexport const guard = (p: Point, name = `Point`) => {\r\n  if (p === undefined) throw new Error(`'${name}' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\r\n  if (p === null) throw new Error(`'${name}' is null. Expected {x,y} got ${JSON.stringify(p)}`);\r\n  if (p.x === undefined) throw new Error(`'${name}.x' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\r\n  if (p.y === undefined) throw new Error(`'${name}.y' is undefined. Expected {x,y} got ${JSON.stringify(p)}`);\r\n  if (typeof p.x !== `number`) throw new Error(`'${name}.x' must be a number. Got ${p.x}`);\r\n  if (typeof p.y !== `number`) throw new Error(`'${name}.y' must be a number. Got ${p.y}`);\r\n \r\n  if (Number.isNaN(p.x)) throw new Error(`'${name}.x' is NaN`);\r\n  if (Number.isNaN(p.y)) throw new Error(`'${name}.y' is NaN`);\r\n};\r\n\r\n/**\r\n * Throws if parameter is not a valid point, or either x or y is 0\r\n * @param pt\r\n * @returns \r\n */\r\nexport const guardNonZeroPoint = (pt: Point, name = `pt`) => {\r\n  guard(pt, name);\r\n  guardNumber(pt.x, `nonZero`, `${name}.x`);\r\n  guardNumber(pt.y, `nonZero`, `${name}.y`);\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * Returns the angle in radians between `a` and `b`.\r\n * Eg if `a` is the origin, and `b` is another point,\r\n * in degrees one would get 0 to -180 when `b` was above `a`.\r\n *  -180 would be `b` in line with `a`.\r\n * Same for under `a`.\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const angle = (a: Point, b?: Point) => {\r\n  if (b === undefined) {\r\n    return Math.atan2(a.y, a.x);\r\n  }\r\n  return Math.atan2(b.y - a.y, b.x - a.x);\r\n};\r\n\r\n/**\r\n * Calculates the [centroid](https://en.wikipedia.org/wiki/Centroid#Of_a_finite_set_of_points) of a set of points\r\n * \r\n * ```js\r\n * // Find centroid of a list of points\r\n * const c1 = centroid(p1, p2, p3, ...);\r\n * \r\n * // Find centroid of an array of points\r\n * const c2 = centroid(...pointsArray);\r\n * ```\r\n * @param points \r\n * @returns A single point\r\n */\r\nexport const centroid = (...points:readonly Point[]):Point => {\r\n  if (!Array.isArray(points)) throw new Error(`Expected list of points`); \r\n  const sum = points.reduce((prev, p) => {\r\n    if (Array.isArray(p)) throw new Error(`'points' list contains an array. Did you mean: centroid(...myPoints)?`);\r\n    if (!isPoint(p)) throw new Error(`'points' contains something which is not a point: ${JSON.stringify(p)}`);\r\n    return {\r\n      x: prev.x + p.x,\r\n      y: prev.y + p.y\r\n    };\r\n  }, {x:0, y:0});\r\n\r\n  return Object.freeze({\r\n    x: sum.x / points.length,\r\n    y: sum.y / points.length\r\n  });\r\n};\r\n\r\n/**\r\n * Returns the minimum rectangle that can enclose all provided points\r\n * @param points\r\n * @returns \r\n */\r\nexport const bbox = (...points:readonly Point[]):Rects.RectPositioned => {\r\n  const leftMost = findMinimum((a, b) => {\r\n    if (a.x < b.x) return a;\r\n    else return b;\r\n  }, ...points);\r\n  const rightMost = findMinimum((a, b) => {\r\n    if (a.x > b.x) return a;\r\n    else return b;\r\n  }, ...points);\r\n  const topMost = findMinimum((a, b) => {\r\n    if (a.y < b.y) return a;\r\n    else return b;\r\n  }, ...points);\r\n  const bottomMost = findMinimum((a, b) => {\r\n    if (a.y > b.y) return a;\r\n    else return b;\r\n  }, ...points);\r\n\r\n  const topLeft = {x:leftMost.x, y:topMost.y};\r\n  const topRight = {x:rightMost.x, y:topMost.y};\r\n  const bottomRight = {x:rightMost.x, y:bottomMost.y};\r\n  const bottomLeft = {x:leftMost.x, y:bottomMost.y};\r\n  return Rects.maxFromCorners(topLeft, topRight, bottomRight, bottomLeft);\r\n};\r\n\r\n/**\r\n * Returns _true_ if the parameter has x and y fields\r\n * @param p \r\n * @returns \r\n */\r\nexport const isPoint = (p: number|unknown): p is Point => {\r\n  if (p === undefined) return false;\r\n  if (p === null) return false;\r\n  if ((p as Point).x === undefined) return false;\r\n  if ((p as Point).y === undefined) return false;\r\n  return true;\r\n};\r\n\r\nexport const isPoint3d = (p:Point|unknown): p is Point3d => {\r\n  if (p === undefined) return false;\r\n  if (p === null) return false;\r\n  if ((p as Point3d).x === undefined) return false;\r\n  if ((p as Point3d).y === undefined) return false;\r\n  if ((p as Point3d).z === undefined) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns point as an array in the form [x,y]. This can be useful for some libraries\r\n * that expect points in array form.\r\n * \r\n * ```\r\n * const p = {x: 10, y:5};\r\n * const p2 = toArray(p); // yields [10,5]\r\n * ```\r\n * @param p\r\n * @returns\r\n */\r\nexport const toArray = (p: Point): readonly number[] => ([p.x, p.y]);\r\n\r\n/**\r\n * Returns a human-friendly string representation `(x, y)`\r\n * @param p\r\n * @returns \r\n */\r\nexport const toString = (p: Point): string => {\r\n  if (p === undefined) return `(undefined)`;\r\n  if (p === null) return `(null)`;\r\n  if (p.z !== undefined) {\r\n    return `(${p.x},${p.y},${p.z})`;\r\n  } else {\r\n    return `(${p.x},${p.y})`;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns _true_ if the points have identical values\r\n * \r\n * ```js\r\n * const a = {x: 10, y: 10};\r\n * const b = {x: 10, y: 10;};\r\n * a === b        // False, because a and be are different objects\r\n * isEqual(a, b)   // True, because a and b are same value\r\n * ```\r\n * @param a\r\n * @param b\r\n * @returns _True_ if points are equal\r\n */\r\nexport const isEqual = (...p:readonly Point[]):boolean => {\r\n  if (p === undefined) throw new Error(`parameter 'p' is undefined`);\r\n  if (p.length < 2) return true;\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=1;i<p.length;i++) {\r\n    if (p[i].x !== p[0].x) return false;\r\n    if (p[i].y !== p[0].y) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns true if two points are within a specified range.\r\n * Provide a point for the range to set different x/y range, or pass a number\r\n * to use the same range for both axis.\r\n * \r\n * Note this simply compares x,y values it does not calcuate distance.\r\n *\r\n * @example\r\n * ```js\r\n * withinRange({x:100,y:100}, {x:101, y:101}, 1); // True\r\n * withinRange({x:100,y:100}, {x:105, y:101}, {x:5, y:1}); // True \r\n * withinRange({x:100,y:100}, {x:105, y:105}, {x:5, y:1}); // False - y axis too far \r\n * ```\r\n * @param a\r\n * @param b\r\n * @param maxRange\r\n * @returns \r\n */\r\nexport const withinRange = (a:Point, b:Point, maxRange:Point|number):boolean =>  {\r\n  if (typeof maxRange === `number`) {\r\n    maxRange = {x:maxRange, y:maxRange};\r\n  }\r\n  const x = Math.abs(b.x - a.x);\r\n  const y = Math.abs(b.y - a.y);\r\n  return (x <= maxRange.x && y<= maxRange.y);\r\n};\r\n\r\n/**\r\n * Returns a relative point between two points\r\n * ```js\r\n * interpolate(0.5, a, b); // Halfway point between a and b\r\n * ```\r\n * \r\n * Alias for Lines.interpolate(amount, a, b);\r\n * \r\n * @param amount Relative amount, 0-1\r\n * @param a \r\n * @param b \r\n * @returns {@link Point}\r\n */\r\nexport const interpolate =(amount:number, a:Point, b:Point):Point => lineInterpolate(amount, a, b); //({x: (1-amt) * a.x + amt * b.x, y:(1-amt) * a.y + amt * b.y });\r\n\r\n/**\r\n * Returns a point from two coordinates or an array of [x,y]\r\n * @example\r\n * ```js\r\n * let p = from([10, 5]); // yields {x:10, y:5}\r\n * let p = from(10, 5);   // yields {x:10, y:5}\r\n * let p = from(10);      // yields {x:10, y:0} 0 is used for default y\r\n * let p = from();        // yields {x:0, y:0}  0 used for default x & y\r\n * ```\r\n * @param xOrArray\r\n * @param [y]\r\n * @returns Point\r\n */\r\nexport const from = (xOrArray?: number | readonly number[], y?: number): Point => {\r\n  if (Array.isArray(xOrArray)) {\r\n    if (xOrArray.length !== 2) throw new Error(`Expected array of length two, got ` + xOrArray.length);\r\n    return Object.freeze({\r\n      x: xOrArray[0],\r\n      y: xOrArray[1]\r\n    });\r\n  } else {\r\n    if (xOrArray === undefined) xOrArray = 0;\r\n    else if (Number.isNaN(xOrArray)) throw new Error(`x is NaN`);\r\n    if (y === undefined) y = 0;\r\n    else if (Number.isNaN(y)) throw new  Error(`y is NaN`);\r\n    return Object.freeze({x: xOrArray as number, y: y});\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an array of points from an array of numbers. \r\n * \r\n * Array can be a continuous series of x, y values:\r\n * ```\r\n * [1,2,3,4] would yield: [{x:1, y:2}, {x:3, y:4}]\r\n * ```\r\n * \r\n * Or it can be an array of arrays:\r\n * ```\r\n * [[1,2], [3,4]] would yield: [{x:1, y:2}, {x:3, y:4}]\r\n * ```\r\n * @param coords \r\n * @returns \r\n */\r\nexport const fromNumbers = (...coords:readonly ReadonlyArray<number>[]|readonly number[]): readonly Point[] => {\r\n  const pts:Point[] = [];\r\n\r\n  if (Array.isArray(coords[0])) {\r\n    // [[x,y],[x,y]...]\r\n    (coords as number[][]).forEach(coord => {\r\n      if (!(coord.length % 2 === 0)) throw new Error(`coords array should be even-numbered`);\r\n      //eslint-disable-next-line  functional/immutable-data\r\n      pts.push(Object.freeze({x: coord[0], y: coord[1]}));    \r\n    });\r\n  } else {\r\n    // [x,y,x,y,x,y]\r\n    if (coords.length % 2 !== 0) throw new Error(`Expected even number of elements: [x,y,x,y...]`);\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i=0;i<coords.length;i+=2) {\r\n      //eslint-disable-next-line  functional/immutable-data\r\n      pts.push(Object.freeze({x: coords[i] as number, y: coords[i+1] as number}));\r\n    }\r\n  }\r\n  return pts;\r\n};\r\n\r\n/**\r\n * Returns `a` minus `b`\r\n * \r\n * ie.\r\n * ```js\r\n * return {\r\n *   x: a.x - b.x,\r\n *   y: a.y - b.y\r\n * };\r\n * ```\r\n * @param a Point a\r\n * @param b Point b\r\n * @returns Point\r\n */\r\nexport function subtract(a: Point, b: Point): Point;\r\n\r\n/**\r\n * Returns `a` minus the given coordinates.\r\n * \r\n * ie:\r\n * ```js\r\n * return {\r\n *  x: a.x - x,\r\n *  y: a.y - y\r\n * }\r\n * ```\r\n * @param a Point\r\n * @param x X coordinate\r\n * @param y Y coordinate (if omitted, x is used as well)\r\n */\r\nexport function subtract (a:Point, x:number, y?:number):Point;\r\n\r\n/**\r\n * Subtracts two sets of x,y pairs\r\n * @param x1 \r\n * @param y1 \r\n * @param x2 \r\n * @param y2 \r\n */\r\nexport function subtract (x1:number, y1:number, x2:number, y2:number):Point;\r\n\r\n//eslint-disable-next-line func-style\r\nexport function subtract(a:Point|number, b:Point|number, c?:number, d?:number):Point {\r\n  if (isPoint(a)) {\r\n    guard(a, `a`);\r\n    if (isPoint(b)) {\r\n      guard(b, `b`);\r\n      return Object.freeze({\r\n        x: a.x - b.x,\r\n        y: a.y - b.y\r\n      });\r\n    } else {\r\n      if (c === undefined) c = b;\r\n      return Object.freeze({\r\n        x: a.x - b,\r\n        y: a.y - c\r\n      });\r\n    }\r\n  } else {\r\n    guardNumber(a, ``, `a`);\r\n    if (typeof b !== `number`) throw new Error(`Second parameter is expected to by y value`);\r\n    guardNumber(b, ``, `b`);\r\n\r\n    if (Number.isNaN(c)) throw new Error(`Third parameter is NaN`);\r\n    if (Number.isNaN(d)) throw new Error(`Fourth parameter is NaN`);\r\n\r\n    if (c === undefined) c = 0;\r\n    if (d === undefined) d = 0;\r\n    return Object.freeze({\r\n      x: a - c,\r\n      y: b - d\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Applies `fn` on `x` and `y` fields, returning all other fields as well\r\n * ```js\r\n * const p = {x:1.234, y:4.9};\r\n * const p2 = apply(p, Math.round);\r\n * // Yields: {x:1, y:5}\r\n * ```\r\n * \r\n * The name of the field is provided as well. Here we only round the `x` field:\r\n * \r\n * ```js\r\n * const p = {x:1.234, y:4.9};\r\n * const p2 = apply(p, (v, field) => {\r\n *  if (field === `x`) return Math.round(v);\r\n *  return v;\r\n * });\r\n * ```\r\n * @param pt \r\n * @param fn \r\n * @returns \r\n */\r\nexport const apply = (pt:Point, fn:(v:number, field?:string)=>number):Point => (Object.freeze<Point>({\r\n  ...pt,\r\n  x: fn(pt.x, `x`),\r\n  y: fn(pt.y, `y`)\r\n}));\r\n\r\n\r\n/**\r\n * Runs a sequential series of functions on `pt`. The output from one feeding into the next.\r\n * ```js\r\n * const p = transform(somePoint, Points.normalise, Points.invert);\r\n * ```\r\n * @param pt \r\n * @param pipeline \r\n * @returns \r\n */\r\nexport const pipelineApply = (pt:Point, ...pipelineFns:readonly ((pt:Point)=>Point)[]):Point => pipeline(...pipelineFns)(pt); // pipeline.reduce((prev, curr) => curr(prev), pt);\r\n\r\n/**\r\n * Returns a pipeline function that takes a point to be transformed through a series of functions\r\n * ```js\r\n * const p = pipeline(Points.normalise, Points.invert);\r\n * p(somePoint); // run `somePoint` through normalise and then invert\r\n * ```\r\n * @param pipeline Pipeline of functions\r\n * @returns\r\n */\r\nexport const pipeline = (...pipeline:readonly ((pt:Point)=>Point)[]) => (pt:Point) => pipeline.reduce((prev, curr) => curr(prev), pt);\r\n\r\n/**\r\n * Reduces over points, treating x,y separately.\r\n * \r\n * ```\r\n * // Sum x and y valuse\r\n * const total = reduce(points, (p, acc) => {\r\n *  return {x: p.x + acc.x, y: p.y + acc.y}\r\n * });\r\n * ```\r\n * @param pts Points to reduce\r\n * @param fn Reducer\r\n * @param initial Initial value, uses `{ x:0, y:0 }` by default\r\n * @returns \r\n */\r\nexport const reduce = (pts:readonly Point[], fn:(p:Point, accumulated:Point) => Point, initial:Point = {x:0, y:0}):Point => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let acc = initial;\r\n  pts.forEach(p => {\r\n    acc = fn(p, acc);\r\n  });\r\n  return acc;\r\n};\r\n\r\ntype Sum = {\r\n  /**\r\n   * Adds two sets of coordinates. If y is omitted, the parameter for x is added to both x and y\r\n   */\r\n  (aX:number, aY:number, bX:number, bY:number):Point;\r\n  /**\r\n   * Add x,y to a\r\n   */\r\n  (a:Point, x:number, y?:number):Point;\r\n  /**\r\n   * Add two points\r\n   */\r\n  (a:Point, b?:Point):Point;\r\n};\r\n\r\n/**\r\n * Returns a Point of `a` plus `b`. ie:\r\n * \r\n * ```js\r\n * return {\r\n *   x: a.x + b.x,\r\n *   y: a.y + b.y\r\n * };\r\n * ```\r\n * \r\n * Usage:\r\n * \r\n * ```js\r\n * sum(ptA, ptB);\r\n * sum(x1, y1, x2, y2);\r\n * sum(ptA, x2, y2);\r\n * sum(ptA, xAndY);\r\n * ```\r\n */\r\nexport const sum:Sum = function (a: Point|number, b: Point|number|undefined, c?:number, d?:number): Point {\r\n  // ✔️ Unit tested\r\n  if (a === undefined) throw new Error(`a missing. a: ${a}`);\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let ptA:Point|undefined;\r\n  //eslint-disable-next-line functional/no-let\r\n  let ptB:Point|undefined;\r\n  if (isPoint(a)) {\r\n    ptA = a;\r\n    if (b === undefined) b = Empty;\r\n    if (isPoint(b)) {\r\n      ptB = b;\r\n    } else {\r\n      if (b === undefined) throw new Error(`Expects x coordinate`);\r\n      ptB = {x: b, y: (c === undefined ? b : c)};    \r\n    }\r\n  } else if (!isPoint(b)) {\r\n    // Neither of first two params are points\r\n    if (b === undefined) throw new Error(`Expected number as second param`);\r\n    ptA = {x: a, y: b};\r\n    if (c === undefined) throw new Error(`Expects x coordiante`);\r\n    ptB = {x: c, y: (d === undefined ? 0 : d)};    \r\n  }\r\n\r\n  if (ptA === undefined) throw new Error(`ptA missing. a: ${a}`);\r\n  if (ptB === undefined) throw new Error(`ptB missing. b: ${b}`);\r\n  guard(ptA, `a`);\r\n  guard(ptB, `b`);\r\n  return Object.freeze({\r\n    x: ptA.x + ptB.x,\r\n    y: ptA.y + ptB.y\r\n  });\r\n};\r\n\r\n/**\r\n * Returns `a` multiplied by `b`\r\n * \r\n * ie.\r\n * ```js\r\n * return {\r\n *  x: a.x * b.x,\r\n*   y: a.y * b.y\r\n * }\r\n * ```\r\n * @param a\r\n * @param b\r\n * @returns\r\n */\r\nexport function multiply(a: Point, b: Point): Point;\r\n\r\n/**\r\n * Multiply by a width,height:\r\n * ```\r\n * return { \r\n *  x: a.x * rect.width,\r\n *  y: a.y * rect.height\r\n * };\r\n * ```\r\n * @param a \r\n * @param rect \r\n */\r\nexport function multiply(a: Point, rect: Rects.Rect): Point;\r\n\r\n/**\r\n * Returns `a` multipled by some x and/or y scaling factor\r\n * \r\n * ie.\r\n * ```js\r\n * return {\r\n *  x: a.x * x\r\n*   y: a.y * y\r\n * }\r\n * ```\r\n * \r\n * Usage:\r\n * ```js\r\n * multiply(pt, 10, 100); // Scale pt by x:10, y:100\r\n * multiply(pt, Math.min(window.innerWidth, window.innerHeight)); // Scale both x,y by viewport with or height, whichever is smaller\r\n * ```\r\n * @export\r\n * @parama Point to scale\r\n * @param x Scale factor for x axis\r\n * @param [y] Scale factor for y axis (if not specified, the x value is used)\r\n * @returns Scaled point\r\n */\r\nexport function multiply(a: Point, x: number, y?: number): Point;\r\n\r\n/**\r\n * Returns `a` multiplied by `b` point, or given x and y.\r\n * ie.\r\n * ```js\r\n * return {\r\n *   x: a.x * b.x,\r\n *   y: a.y * b.y\r\n * };\r\n * ```\r\n * @param a \r\n * @param bOrX \r\n * @param y \r\n * @returns \r\n */\r\n/* eslint-disable func-style */\r\nexport function multiply(a: Point, bOrX: Rects.Rect| Point | number, y?: number):Point {\r\n  // ✔️ Unit tested\r\n\r\n  guard(a, `a`);\r\n  if (typeof bOrX === `number`) {\r\n    if (typeof y === `undefined`) y = bOrX;\r\n    guardNumber(y, ``, `y`);\r\n    guardNumber(bOrX, ``, `x`);\r\n    return Object.freeze({x: a.x * bOrX, y: a.y * y});\r\n  } else if (isPoint(bOrX)) {\r\n    guard(bOrX, `b`);\r\n    return Object.freeze({\r\n      x: a.x * bOrX.x,\r\n      y: a.y * bOrX.y\r\n    });\r\n  } else if (Rects.isRect(bOrX)) {\r\n    Rects.guard(bOrX, `rect`);\r\n    return Object.freeze({\r\n      x: a.x * bOrX.width,\r\n      y: a.y * bOrX.height\r\n    });\r\n  } else throw new Error(`Invalid arguments. a: ${JSON.stringify(a)} b: ${JSON.stringify(bOrX)}`);\r\n}\r\n\r\n/**\r\n * Divides a / b:\r\n * ```js\r\n * return {\r\n *  x: a.x / b.x,\r\n *  y: a.y / b.y\r\n * }\r\n * ```\r\n * @param a \r\n * @param b \r\n */\r\nexport function divide(a: Point, b:Point):Point;\r\n\r\n/**\r\n * Divides point a by rectangle:\r\n * ```js\r\n * return {\r\n *  x: a.x / rect.width,\r\n *  y: a.y / rect.hight\r\n * };\r\n * ```\r\n * @param a \r\n * @param Rect \r\n */\r\nexport function divide(a: Point, rect:Rects.Rect):Point;\r\n\r\n/**\r\n * Divides a point by x,y.\r\n * ```js\r\n * return {\r\n *  x: a.x / x,\r\n *  y: b.y / y\r\n * };\r\n * ```\r\n * @param a Point\r\n * @param x X divisor\r\n * @param y Y divisor. If unspecified, x divisor is used.\r\n */\r\nexport function divide(a:Point, x:number, y?:number):Point;\r\n\r\n/**\r\n * Divides two sets of points:\r\n * ```js\r\n * return {\r\n *  x: x1 / x2,\r\n *  y: y1 / y2\r\n * };\r\n * ```\r\n * @param x1 \r\n * @param y1 \r\n * @param x2 \r\n * @param y2 \r\n */\r\nexport function divide(x1:number, y1:number, x2?:number, y2?:number):Point;\r\n\r\n/**\r\n * Devides a from b. If a contains a zero, that axis will be returned as zero\r\n * @param a\r\n * @param b\r\n * @param c \r\n * @param d \r\n * @returns \r\n */\r\nexport function divide(a: Point|number, b: Rects.Rect|Point | number, c?: number, d?:number):Point {\r\n  // ✔️ Unit tested\r\n\r\n  if (isPoint(a)) {\r\n    guard(a, `a`);\r\n    if (isPoint(b)) {\r\n      guardNonZeroPoint(b);\r\n      return Object.freeze({\r\n        x: a.x / b.x,\r\n        y: a.y / b.y\r\n      });\r\n    } else if (isRect(b)) {\r\n      Rects.guard(b, `rect`);\r\n      return Object.freeze({\r\n        x: a.x / b.width,\r\n        y: a.y / b.height\r\n      });\r\n    }else {\r\n      if (c === undefined) c = b;\r\n      guard(a);\r\n      guardNumber(b, `nonZero`, `x`);\r\n      guardNumber(c, `nonZero`, `y`);\r\n      return Object.freeze({\r\n        x: a.x / b,\r\n        y: a.y / c\r\n      });\r\n    }\r\n  } else {\r\n    if (typeof b !== `number`) throw new Error(`expected second parameter to be y1 coord`);\r\n    guardNumber(a, `positive`, `x1`);\r\n    guardNumber(b, `positive`, `y1`);\r\n    if (c === undefined) c = 1;\r\n    if (d === undefined) d = c;\r\n    guardNumber(c, `nonZero`, `x2`);\r\n    guardNumber(d, `nonZero`, `y2`);\r\n\r\n    return Object.freeze({\r\n      x: a / c,\r\n      y: b / d\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Simple convex hull impementation. Returns a set of points which\r\n * enclose `pts`.\r\n * \r\n * For more power, see something like [Hull.js](https://github.com/AndriiHeonia/hull)\r\n * @param pts \r\n * @returns \r\n */\r\nexport const convexHull = (...pts:readonly Point[]):readonly Point[] => {\r\n  const sorted = [...pts].sort(compareByX);\r\n  if (sorted.length === 1) return sorted;\r\n\r\n  const x = (points:Point[]) => {\r\n    const v:Point[] = [];\r\n    points.forEach(p => {\r\n      //eslint-disable-next-line functional/no-loop-statement\r\n      while (v.length >= 2) {\r\n        const q = v[v.length-1];\r\n        const r = v[v.length-2];\r\n        if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) {\r\n          //eslint-disable-next-line functional/immutable-data\r\n          v.pop();\r\n        } else break;\r\n      }\r\n      //eslint-disable-next-line functional/immutable-data\r\n      v.push(p);\r\n    });\r\n    //eslint-disable-next-line functional/immutable-data\r\n    v.pop();\r\n    return v;\r\n  };\r\n\r\n  const upper = x(sorted);\r\n  //eslint-disable-next-line functional/immutable-data\r\n  const lower = x(sorted.reverse());\r\n\r\n  if (upper.length === 1 && lower.length === 1 && isEqual(lower[0], upper[0])) return upper;\r\n  return upper.concat(lower);\r\n};\r\n\r\n/**\r\n * Returns -1 if either x/y of a is less than b's x/y\r\n * Returns 1 if either x/y of a is greater than b's x/y\r\n * Returns 0 if x/y of a and b are equal\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const compare = (a: Point, b:Point):number => {\r\n  if (a.x < b.x || a.y < b.y) return -1;\r\n  if (a.x > b.x || a.y > b.y) return 1;\r\n  return 0;\r\n};\r\n\r\n\r\nexport const compareByX = (a:Point, b:Point):number =>  a.x - b.x || a.y - b.y;\r\n\r\n/**\r\n * Project `origin` by `distance` and `angle` (radians).\r\n * \r\n * To figure out rotation, imagine a horizontal line running through `origin`.\r\n * * Rotation = 0 deg puts the point on the irhgt of origin, on same y-axis\r\n * * Rotation = 90 deg/3:00 puts the point below origin, on the same x-axis\r\n * * Rotation = 180 deg/6:00 puts the point on the left of origin on the same y-axis\r\n * * Rotation = 270 deg/12:00 puts the point above the origin, on the same x-axis\r\n * \r\n * ```js\r\n * // Yields a point 100 units away from 10,20 with 10 degrees rotation (ie slightlydown) \r\n * const a = Points.project({x:10, y:20}, 100, degreeToRadian(10));\r\n * ```\r\n * @param origin \r\n * @param distance \r\n * @param angle \r\n * @returns \r\n */\r\nexport const project = (origin:Point, distance:number, angle:number) => {\r\n  const x = (Math.cos(angle) * distance) + origin.x;\r\n  const y =  (Math.sin(angle) * distance) + origin.y;\r\n  return {x, y};\r\n};\r\n\r\n/**\r\n * Rotate a single point by a given amount in radians\r\n * @param pt \r\n * @param amountRadian \r\n * @param origin \r\n */\r\nexport function rotate(pt:Point, amountRadian:number, origin?:Point):Point;\r\n\r\n/**\r\n * Rotate several points by a given amount in radians\r\n * @param pt Points\r\n * @param amountRadian Amount to rotate in radians. If 0 is given, a copy of the input array is returned\r\n * @param origin Origin to rotate around. Defaults to 0,0\r\n */\r\nexport function rotate(pt:ReadonlyArray<Point>, amountRadian:number, origin?:Point):ReadonlyArray<Point>;\r\n\r\nexport function rotate(pt:Point|ReadonlyArray<Point>, amountRadian:number, origin?:Point):Point|ReadonlyArray<Point> {\r\n  if (origin === undefined) origin = {x:0, y:0};\r\n  guard(origin, `origin`);\r\n  guardNumber(amountRadian, ``, `amountRadian`);\r\n  const arrayInput = Array.isArray(pt);\r\n\r\n  // no-op\r\n  if (amountRadian === 0)  return pt;\r\n    \r\n  if (!arrayInput) {\r\n    pt = [pt as Point];\r\n  }\r\n\r\n  const ptAr = pt as ReadonlyArray<Point>;\r\n  ptAr.forEach((p, index) => guard(p, `pt[${index}]`));\r\n  \r\n  //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n  const asPolar = ptAr.map(p => Polar.fromCartesian(p, origin!));\r\n  const rotated = asPolar.map(p => Polar.rotate(p, amountRadian));\r\n  const asCartesisan = rotated.map(p => Polar.toCartesian(p, origin));\r\n  if (arrayInput) return asCartesisan;\r\n  else return asCartesisan[0];\r\n\r\n  //const p = Polar.fromCartesian(pt, origin);\r\n  //const pp = Polar.rotate(p, amountRadian);\r\n  //return Polar.toCartesian(pp, origin);\r\n}\r\n\r\n//eslint-disable-next-line functional/prefer-readonly-type\r\nexport const rotatePointArray = (v:ReadonlyArray<readonly number[]>, amountRadian:number): number[][] => {\r\n  const mat = [[Math.cos(amountRadian), -Math.sin(amountRadian)], [Math.sin(amountRadian), Math.cos(amountRadian)]];\r\n  const result = [];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0; i < v.length; ++i) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    result[i] = [mat[0][0]*v[i][0] + mat[0][1]*v[i][1], mat[1][0]*v[i][0] + mat[1][1]*v[i][1]];\r\n  }\r\n  return result;\r\n};\r\n\r\nconst length = (ptOrX:Point|number, y?:number): number => {\r\n  if (isPoint(ptOrX)) {\r\n    y = ptOrX.y;\r\n    ptOrX = ptOrX.x;\r\n  }\r\n  if (y === undefined) throw new Error(`Expected y`);\r\n  return Math.sqrt(ptOrX*ptOrX + y*y);\r\n};\r\n\r\n/**\r\n * Normalise point as a unit vector.\r\n * \r\n * ```js\r\n * normalise({x:10, y:20});\r\n * normalise(10, 20);\r\n * ```\r\n * @param ptOrX Point, or x value\r\n * @param y y value if first param is x\r\n * @returns \r\n */\r\nexport const normalise = (ptOrX:Point|number, y?:number): Point => {\r\n  const pt = getPointParam(ptOrX, y);\r\n  const l = length(pt);\r\n  if (l === 0) return Points.Empty;\r\n  return Object.freeze({\r\n    x: pt.x / l,\r\n    y: pt.y / l\r\n  });\r\n};\r\n\r\n/**\r\n * Normalises a point by a given width and height\r\n * @param pt Point\r\n * @param width Width\r\n * @param height Height\r\n */\r\nexport function normaliseByRect(pt:Point, width:number, height:number):Point;\r\n\r\nexport function normaliseByRect(pt:Point, rect:Rects.Rect):Point;\r\n\r\n/**\r\n * Normalises x,y by width and height so it is on a 0..1 scale\r\n * @param x \r\n * @param y \r\n * @param width \r\n * @param height \r\n */\r\nexport function normaliseByRect(x:number, y:number, width:number, height:number):Point;\r\n\r\n/**\r\n * Normalises a point so it is on a 0..1 scale\r\n * @param a Point, or x\r\n * @param b y coord or width\r\n * @param c height or width\r\n * @param d height\r\n * @returns Point\r\n */\r\nexport function normaliseByRect(a:Point|number, b:number|Rects.Rect, c?:number, d?:number):Point {\r\n  // ✔️ Unit tested\r\n  if (isPoint(a)) {\r\n    if (typeof b === `number` && c !== undefined) {\r\n      guardNumber(b, `positive`, `width`);\r\n      guardNumber(c, `positive`, `height`);\r\n    } else {\r\n      if (!Rects.isRect(b)) throw new Error(`Expected second parameter to be a rect`);\r\n      c = b.height;\r\n      b = b.width;\r\n    }\r\n    return Object.freeze({\r\n      x: a.x / b,\r\n      y: a.y / c\r\n    });\r\n  } else {\r\n    guardNumber(a, `positive`, `x`);\r\n    if (typeof b !== `number`) throw new Error(`Expecting second parameter to be a number (width)`);\r\n    if (typeof c !== `number`) throw new Error(`Expecting third parameter to be a number (height)`);\r\n\r\n    guardNumber(b, `positive`, `y`);\r\n    guardNumber(c, `positive`, `width`);\r\n    if (d === undefined) throw new Error(`Expected height parameter`);\r\n    guardNumber(d, `positive`, `height`);\r\n    return Object.freeze({\r\n      x: a / c,\r\n      y: b / d\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a random point on a 0..1 scale.\r\n * ```js\r\n * const pt = random(); // eg {x: 0.2549012, y:0.859301}\r\n * ```\r\n * \r\n * A custom source of randomness can be provided:\r\n * ```js\r\n * const pt = random(weightedSkewed(`quadIn`));\r\n * ```\r\n * @param rando \r\n * @returns \r\n */\r\nexport const random = (rando?:RandomSource):Point => {\r\n  if (rando === undefined) rando = defaultRandom;\r\n\r\n  return {\r\n    x: rando(),\r\n    y: rando()\r\n  };\r\n};\r\n\r\n/**\r\n * Wraps a point to be within `ptMin` and `ptMax`.\r\n * Note that max values are _exclusive_, meaning the return value will always be one less.\r\n * \r\n * Eg, if a view port is 100x100 pixels, wrapping the point 150,100 yields 50,99.\r\n * \r\n * ```js\r\n * // Wraps 150,100 to on 0,0 -100,100 range\r\n * wrap({x:150,y:100}, {x:100,y:100});\r\n * ```\r\n * \r\n * Wrap normalised point:\r\n * ```js\r\n * wrap({x:1.2, y:1.5}); // Yields: {x:0.2, y:0.5}\r\n * ```\r\n * @param pt Point to wrap\r\n * @param ptMax Maximum value, or `{ x:1, y:1 }` by default\r\n * @param ptMin Minimum value, or `{ x:0, y:0 }` by default\r\n * @returns Wrapped point\r\n */\r\nexport const wrap = (pt:Point, ptMax:Point = {x:1, y:1}, ptMin:Point = {x:0, y:0}):Point => {\r\n  // ✔️ Unit tested\r\n  guard(pt, `pt`);\r\n  guard(ptMax, `ptMax`);\r\n  guard(ptMin, `ptMin`);\r\n  \r\n  return Object.freeze({\r\n    x: wrapNumber(pt.x, ptMin.x, ptMax.x),\r\n    y: wrapNumber(pt.y, ptMin.y, ptMax.y)\r\n  });\r\n};\r\n\r\n/**\r\n * Inverts one or more axis of a point\r\n * ```js\r\n * invert({x:10, y:10}); // Yields: {x:-10, y:-10}\r\n * invert({x:10, y:10}, `x`); // Yields: {x:-10, y:10}\r\n * ``` \r\n * @param pt Point to invert\r\n * @param what Which axis. If unspecified, both axies are inverted\r\n * @returns \r\n */\r\nexport const invert = (pt:Point|Point3d, what:`both`|`x`|`y`|`z` = `both`):Point => {\r\n  switch (what) {\r\n  case `both`:\r\n    if (isPoint3d(pt)) {\r\n      return Object.freeze({\r\n        ...pt,\r\n        x: pt.x * -1,\r\n        y: pt.y * -1,\r\n        z: pt.z * -1\r\n      });\r\n    } else {\r\n      return Object.freeze({\r\n        ...pt,\r\n        x: pt.x * -1,\r\n        y: pt.y * -1,\r\n      });\r\n    }\r\n  case `x`:\r\n    return Object.freeze({\r\n      ...pt,\r\n      x: pt.x * -1\r\n    });\r\n  case `y`:\r\n    return Object.freeze({\r\n      ...pt,\r\n      y: pt.y * -1\r\n    });\r\n  case `z`:\r\n    if (isPoint3d(pt)) {\r\n      return Object.freeze({\r\n        ...pt,\r\n        z: pt.z * -1\r\n      });\r\n    } else throw new Error(`pt parameter is missing z`);\r\n  default:\r\n    throw new Error(`Unknown what parameter. Expecting 'both', 'x' or 'y'`);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a point with rounded x,y coordinates. By default uses `Math.round` to round.\r\n * ```js\r\n * toIntegerValues({x:1.234, y:5.567}); // Yields: {x:1, y:6}\r\n * ```\r\n * \r\n * ```js\r\n * toIntegerValues(pt, Math.ceil); // Use Math.ceil to round x,y of `pt`.\r\n * ```\r\n * @param pt Point to round\r\n * @param rounder Rounding function, or Math.round by default\r\n * @returns \r\n */\r\nexport const toIntegerValues = (pt:Point, rounder: (x:number) => number = Math.round):Point => {\r\n  guard(pt, `pt`);\r\n  return Object.freeze({\r\n    x: rounder(pt.x),\r\n    y: rounder(pt.y)\r\n  });\r\n};\r\n\r\n/**\r\n * Clamps the magnitude of a point.\r\n * This is useful when using a Point as a vector, to limit forces.\r\n * @param pt \r\n * @param m \r\n * @returns \r\n */\r\nexport const clampMagnitude = (pt:Point, m:number):Point => {\r\n  const length = distance(pt);\r\n  if (length > m) {\r\n    const ratio =  m / length;\r\n    return multiply(pt, ratio, ratio);\r\n  }\r\n  return pt;\r\n};\r\n\r\n\r\n/**\r\n * Clamps a point to be between `min` and `max` (0 & 1 by default)\r\n * @param pt Point\r\n * @param min Minimum value (0 by default)\r\n * @param max Maximum value (1 by default)\r\n */\r\nexport function clamp(pt:Point, min?:number, max?:number):Point;\r\n\r\n/**\r\n * Clamps an x,y pair to be between `min` and `max` (0 & 1 by default)\r\n * @param x X coordinate\r\n * @param y Y coordinate\r\n * @param min Minimum value (0 by default)\r\n * @param max Maximum value (1 by default)\r\n */\r\nexport function clamp(x:number, y:number, min?:number, max?:number):Point;\r\nexport function clamp(a:Point|number, b?:number, c?:number, d?:number):Point {\r\n  // ✔️ Unit tested\r\n\r\n  if (isPoint(a)) {\r\n    if (b === undefined) b = 0;\r\n    if (c === undefined) c = 1;\r\n    guardNumber(b, ``, `min`);\r\n    guardNumber(c, ``, `max`);\r\n    return Object.freeze({\r\n      x: clampNumber(a.x, b, c),\r\n      y: clampNumber(a.y, b, c)\r\n    });\r\n  } else {\r\n    if (b === undefined) throw new Error(`Expected y coordinate`);\r\n    if (c === undefined) c = 0;\r\n    if (d === undefined) d = 1;\r\n    guardNumber(a, ``, `x`);\r\n    guardNumber(b, ``, `y`);\r\n    guardNumber(c, ``, `min`);\r\n    guardNumber(d, ``, `max`);\r\n\r\n    return Object.freeze({\r\n      x: clampNumber(a, c, d),\r\n      y: clampNumber(b, c, d)\r\n    });\r\n  }\r\n}\r\n\r\nexport type PointRelation = (a:Point|number, b?:number) => {\r\n  /**\r\n   * Angle from start\r\n   */\r\n  readonly angle:number\r\n  /**\r\n   * Distance from start\r\n   */\r\n  readonly distance:number\r\n  /**\r\n   * Center point from start\r\n   */\r\n  readonly centroid:Point\r\n  /**\r\n   * Average of all points seen\r\n   * This is calculated by summing x,y and dividing by total points\r\n   */\r\n  readonly average:Point\r\n}\r\n\r\n/**\r\n * Tracks the relation between two points\r\n * \r\n * ```js\r\n * // Start point: 50,50\r\n * const t = track({x:50,y:50});\r\n * \r\n * // Compare to a 0,0\r\n * const {angle, distance, centroid} = t({x:0,y:0});\r\n * ```\r\n * \r\n * X,y coordinates can also be used as parameters:\r\n * ```js\r\n * const t = track(50, 50);\r\n * const {angle, distance, centroid} = t(0, 0);\r\n * ```\r\n * @param start \r\n * @returns \r\n */\r\nexport const relation = (a:Point|number, b?:number):PointRelation => {\r\n  const start = getPointParam(a, b);\r\n  //eslint-disable-next-line functional/no-let\r\n  let totalX = 0;\r\n  //eslint-disable-next-line functional/no-let\r\n  let totalY = 0;\r\n  //eslint-disable-next-line functional/no-let\r\n  let count = 0;\r\n\r\n  const update = (aa:Point|number, bb?:number) => {\r\n    const p = getPointParam(aa, bb);\r\n    totalX += p.x;\r\n    totalY += p.y;\r\n    count++;\r\n    return Object.freeze({\r\n      angle: angle(p, start),\r\n      distance: distance(p, start),\r\n      centroid: centroid(p, start),\r\n      average: {\r\n        x: totalX/count,\r\n        y: totalY/count\r\n      }\r\n    });\r\n  };\r\n\r\n  return update;\r\n};","import {guard as guardPoint, Point} from './Point.js';\r\nimport {percent as guardPercent} from '../Guards.js';\r\nimport {Path} from './Path.js';\r\nimport { Rects, Points} from './index.js';\r\nimport {minFast} from '../collections/NumericArrays.js';\r\nimport {Arrays} from '../collections/index.js';\r\n\r\n/**\r\n * A line, which consists of an `a` and `b` {@link Points.Point}.\r\n */\r\nexport type Line = {\r\n  readonly a: Points.Point\r\n  readonly b: Points.Point\r\n}\r\n\r\n/**\r\n * A PolyLine, consisting of more than one line.\r\n */\r\nexport type PolyLine = ReadonlyArray<Line>;\r\n\r\n/**\r\n * Returns true if `p` is a valid line, containing `a` and `b` Points.\r\n * @param p Value to check\r\n * @returns True if a valid line.\r\n */\r\nexport const isLine = (p: Path | Line | Points.Point): p is Line => {\r\n  if (p === undefined) return false;\r\n  if ((p as Line).a === undefined) return false;\r\n  if ((p as Line).b === undefined) return false;\r\n  if (!Points.isPoint((p as Line).a)) return false;\r\n  if (!Points.isPoint((p as Line).b)) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns true if `p` is a {@link PolyLine}, ie. an array of {@link Line}s.\r\n * Validates all items in array.\r\n * @param p \r\n * @returns\r\n */\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const isPolyLine = (p: any): p is PolyLine => {\r\n  if (!Array.isArray(p)) return false;\r\n\r\n  const valid = !p.some(v => !isLine(v));\r\n  return valid;\r\n};\r\n\r\n/**\r\n * Returns true if the lines have the same value\r\n *\r\n * @param {Line} a\r\n * @param {Line} b\r\n * @returns {boolean}\r\n */\r\nexport const equals = (a:Line, b:Line):boolean =>  a.a === b.a && a.b === b.b;\r\n\r\n/**\r\n * Applies `fn` to both start and end points.\r\n * \r\n * ```js\r\n * // Line 10,10 -> 20,20\r\n * const line = Lines.fromNumbers(10,10, 20,20);\r\n * \r\n * // Applies randomisation to both x and y.\r\n * const rand = (p) => ({\r\n *  x: p.x * Math.random(),\r\n *  y: p.y * Math.random()\r\n * });\r\n * \r\n * // Applies our randomisation function\r\n * const line2 = apply(line, rand);\r\n * ```\r\n * @param line Line\r\n * @param fn Function that takes a point and returns a point\r\n * @returns \r\n */\r\nexport const apply = (line:Line, fn:(p:Points.Point) => Points.Point) => Object.freeze<Line>(\r\n  {\r\n    ...line,\r\n    a: fn(line.a),\r\n    b: fn(line.b)\r\n  }\r\n);\r\n\r\n\r\n/**\r\n * Throws an exception if:\r\n * * line is undefined\r\n * * a or b parameters are missing\r\n * \r\n * Does not validate points\r\n * @param line \r\n * @param paramName \r\n */\r\nexport const guard = (line:Line, paramName:string = `line`) => {\r\n  if (line === undefined) throw new Error(`${paramName} undefined`);\r\n  if (line.a === undefined) throw new Error(`${paramName}.a undefined. Expected {a:Point, b:Point}`);\r\n  if (line.b === undefined) throw new Error(`${paramName}.b undefined. Expected {a:Point, b:Point}`);\r\n};\r\n\r\n/**\r\n * Returns the angle in radians of a line, or two points\r\n * ```js\r\n * angleRadian(line);\r\n * angleRadian(ptA, ptB);\r\n * ```\r\n * @param lineOrPoint \r\n * @param b \r\n * @returns \r\n */\r\nexport const angleRadian = (lineOrPoint:Line|Points.Point, b?:Points.Point):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let a:Points.Point;\r\n  if (isLine(lineOrPoint)) {\r\n    a = lineOrPoint.a;\r\n    b = lineOrPoint.b;\r\n  } else {\r\n    a = lineOrPoint;\r\n    if (b === undefined) throw new Error(`b point must be provided`);\r\n  }\r\n  return Math.atan2(b.y - a.y, b.x - a.x);\r\n};\r\n\r\n/**\r\n * Multiplies start and end of line by point.x, point.y.\r\n * \r\n * ```js\r\n * // Line 1,1 -> 10,10\r\n * const l = fromNumbers(1, 1, 10, 10);\r\n * const ll = multiply(l, {x:2, y:3});\r\n * // Yields: 2,20 -> 3,30\r\n * ```\r\n * @param line \r\n * @param point \r\n * @returns \r\n */\r\nexport const multiply = (line:Line, point:Points.Point):Line => (Object.freeze({\r\n  ...line,\r\n  a: Points.multiply(line.a, point),\r\n  b: Points.multiply(line.b, point)\r\n}));\r\n\r\n/**\r\n * Divides both start and end points by given x,y\r\n * ```js\r\n * // Line 1,1 -> 10,10\r\n * const l = fromNumbers(1,1,10,10);\r\n * const ll = divide(l, {x:2, y:4});\r\n * // Yields: 0.5,0.25 -> 5,2.5\r\n * ```\r\n * @param line \r\n * @param point \r\n * @returns \r\n */\r\nexport const divide = (line:Line, point:Points.Point):Line => Object.freeze({\r\n  ...line,\r\n  a: Points.divide(line.a, point),\r\n  b: Points.divide(line.b, point)\r\n});\r\n\r\n/**\r\n * Adds both start and end points by given x,y\r\n * ```js\r\n * // Line 1,1 -> 10,10\r\n * const l = fromNumbers(1,1,10,10);\r\n * const ll = sum(l, {x:2, y:4});\r\n * // Yields: 3,5 -> 12,14\r\n * ```\r\n * @param line \r\n * @param point \r\n * @returns \r\n */\r\nexport const sum = (line:Line, point:Points.Point):Line => Object.freeze({\r\n  ...line,\r\n  a: Points.sum(line.a, point),\r\n  b: Points.sum(line.b, point)\r\n});\r\n\r\n/**\r\n * Subtracts both start and end points by given x,y\r\n * ```js\r\n * // Line 1,1 -> 10,10\r\n * const l = fromNumbers(1,1,10,10);\r\n * const ll = subtract(l, {x:2, y:4});\r\n * // Yields: -1,-3 -> 8,6\r\n * ```\r\n * @param line \r\n * @param point \r\n * @returns \r\n */\r\nexport const subtract = (line:Line, point:Points.Point):Line => Object.freeze({\r\n  ...line,\r\n  a: Points.subtract(line.a, point),\r\n  b: Points.subtract(line.b, point)\r\n});\r\n\r\n/**\r\n * Normalises start and end points by given width and height. Useful\r\n * for converting an absolutely-defined line to a relative one.\r\n * ```js\r\n * // Line 1,1 -> 10,10\r\n * const l = fromNumbers(1,1,10,10);\r\n * const ll = normaliseByRect(l, 10, 10);\r\n * // Yields: 0.1,0.1 -> 1,1\r\n * ```\r\n * @param line \r\n * @param width\r\n * @param height \r\n * @returns \r\n */\r\nexport const normaliseByRect = (line:Line, width:number, height:number):Line => Object.freeze({\r\n  ...line,\r\n  a: Points.normaliseByRect(line.a, width, height),\r\n  b: Points.normaliseByRect(line.b, width, height)\r\n});\r\n\r\n\r\n/**\r\n * Returns true if `point` is within `maxRange` of `line`.\r\n * ```js\r\n * const line = Lines.fromNumbers(0,20,20,20);\r\n * Lines.withinRange(line, {x:0,y:21}, 1); // True\r\n * ```\r\n * @param line\r\n * @param point\r\n * @param maxRange \r\n * @returns True if point is within range\r\n */\r\nexport const withinRange = (line:Line, point:Points.Point, maxRange:number):boolean =>  {\r\n  const dist = distance(line, point);\r\n  return dist <= maxRange;\r\n};\r\n\r\n/**\r\n * Returns the length between two points\r\n * ```js\r\n * length(ptA, ptB);\r\n * ```\r\n * @param a First point\r\n * @param b Second point\r\n * @returns \r\n */\r\nexport function length(a: Points.Point, b: Points.Point): number;\r\n\r\n/**\r\n * Returns length of line. If a polyline (array of lines) is provided,\r\n * it is the sum total that is returned.\r\n * \r\n * ```js\r\n * length(a: {x:0, y:0}, b: {x: 100, y:100});\r\n * length(lines);\r\n * ```\r\n * @param line Line\r\n */\r\nexport function length(line: Line|PolyLine): number;\r\n\r\n/**\r\n * Returns length of line, polyline or between two points\r\n * @param aOrLine Point A, line or polyline (array of lines)\r\n * @param pointB Point B, if first parameter is a point\r\n * @returns Length (total accumulated length for arrays)\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function length(aOrLine: Points.Point|Line|PolyLine, pointB?: Points.Point): number  {\r\n  if (isPolyLine(aOrLine)) {\r\n    const sum = aOrLine.reduce((acc, v) => length(v) + acc, 0);\r\n    return sum;\r\n  }\r\n\r\n  const [a, b] = getPointsParam(aOrLine, pointB);\r\n  const x = b.x - a.x;\r\n  const y = b.y - a.y;\r\n  if (a.z !== undefined && b.z !== undefined) {\r\n    const z = b.z - a.z;\r\n    return Math.hypot(x, y, z);\r\n  } else {\r\n    return Math.hypot(x, y);\r\n  }\r\n}\r\n\r\nexport const midpoint =(aOrLine: Points.Point|Line, pointB?: Points.Point):Points.Point => {\r\n  const [a, b] = getPointsParam(aOrLine, pointB);\r\n  return interpolate(0.5, a, b);\r\n};\r\n\r\n/**\r\n * Returns [a,b] points from either a line parameter, or two points.\r\n * It additionally applies the guardPoint function to ensure validity.\r\n * This supports function overloading.\r\n * @ignore\r\n * @param aOrLine \r\n * @param b \r\n * @returns \r\n */\r\nexport const getPointsParam = (aOrLine: Points.Point|Line, b?: Points.Point): readonly [Points.Point, Points.Point] => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let a;\r\n  if (isLine(aOrLine)) {\r\n    b = aOrLine.b;\r\n    a = aOrLine.a;\r\n  } else {\r\n    a = aOrLine;\r\n    if (b === undefined) throw new Error(`Since first parameter is not a line, two points are expected. Got a: ${JSON.stringify(a)} b: ${JSON.stringify(b)}`);\r\n  }\r\n  guardPoint(a, `a`);\r\n  guardPoint(a, `b`);\r\n\r\n  return [a, b];\r\n};\r\n\r\n/**\r\n * Returns the nearest point on `line` closest to `point`.\r\n * \r\n * ```js\r\n * const pt = nearest(line, {x:10,y:10});\r\n * ```\r\n * \r\n * If an array of lines is provided, it will be the closest point amongst all the lines\r\n * @param line Line or array of lines\r\n * @param point\r\n * @returns Point `{ x, y }`\r\n */\r\nexport const nearest = (line:Line|readonly Line[], point:Points.Point): Points.Point => {\r\n  \r\n  const n = (line:Line):Points.Point => {\r\n    const {a, b} = line;\r\n    const atob = { x: b.x - a.x, y: b.y - a.y };\r\n    const atop = { x: point.x - a.x, y: point.y - a.y };\r\n    const len = atob.x * atob.x + atob.y * atob.y;\r\n\r\n    //eslint-disable-next-line functional/no-let\r\n    let dot = atop.x * atob.x + atop.y * atob.y;\r\n    const t = Math.min(1, Math.max(0, dot / len));\r\n    dot = (b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x);\r\n    return {x: a.x + atob.x * t, y: a.y + atob.y * t};\r\n  };\r\n\r\n  if (Array.isArray(line)) {\r\n    const pts = line.map(l => n(l));\r\n    const dists = pts.map(p => Points.distance(p, point));\r\n    return Object.freeze<Points.Point>(pts[Arrays.minIndex(...dists)]);\r\n  } else {\r\n    return Object.freeze<Points.Point>(n(line as Line));\r\n  }\r\n};\r\n\r\n/**\r\n * Calculates [slope](https://en.wikipedia.org/wiki/Slope) of line.\r\n * \r\n * @example\r\n * ```js\r\n * slope(line);\r\n * slope(ptA, ptB)\r\n * ```\r\n * @param lineOrPoint Line or point. If point is provided, second point must be given too\r\n * @param b Second point if needed\r\n * @returns \r\n */\r\nexport const slope = (lineOrPoint:Line|Points.Point, b?:Points.Point):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let a:Points.Point;\r\n  if (isLine(lineOrPoint)) {\r\n    //eslint-disable-next-line functional/no-let\r\n    a = lineOrPoint.a;\r\n    b = lineOrPoint.b;\r\n  } else {\r\n    a = lineOrPoint;\r\n    if (b === undefined) throw new Error(`b parameter required`);\r\n  }\r\n  if (b !== undefined) {\r\n    return (b.y - a.y) / (b.x - a.x);\r\n  } else throw Error(`Second point missing`);\r\n};\r\n\r\nconst directionVector = (line:Line):Points.Point => ({\r\n  x: line.b.x-line.a.x,\r\n  y: line.b.y-line.a.y\r\n});\r\n\r\nconst directionVectorNormalised = (line:Line):Points.Point => {\r\n  const l = length(line);\r\n  const v = directionVector(line);\r\n  return {\r\n    x: v.x / l,\r\n    y: v.y / l\r\n  };\r\n};\r\n\r\n/**\r\n * Returns a point perpendicular to `line` at a specified `distance`. Use negative\r\n * distances for the other side of line.\r\n * ```\r\n * // Project a point 100 units away from line, at its midpoint.\r\n * const pt = perpendicularPoint(line, 100, 0.5);\r\n * ```\r\n * @param line Line\r\n * @param distance Distance from line. Use negatives to flip side\r\n * @param amount Relative place on line to project point from. 0 projects from A, 0.5 from the middle, 1 from B.\r\n */\r\nexport const perpendicularPoint = (line:Line, distance:number, amount:number = 0) => {\r\n  const origin = interpolate(amount, line);\r\n  const dvn = directionVectorNormalised(line);\r\n  return {\r\n    x: origin.x  - dvn.y * distance,\r\n    y: origin.y  + dvn.x * distance\r\n  };\r\n};\r\n\r\n/**\r\n * Returns a parallel line to `line` at `distance`.\r\n * @param line\r\n * @param distance \r\n */\r\nexport const parallel = (line:Line, distance:number):Line => {\r\n  const dv = directionVector(line);\r\n  const dvn = directionVectorNormalised(line);\r\n  const a = {\r\n    x: line.a.x - dvn.y * distance,\r\n    y: line.a.y + dvn.x * distance\r\n  };\r\n  return {\r\n    a,\r\n    b: {\r\n      x: a.x + dv.x,\r\n      y: a.y + dv.y \r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Scales a line from its midpoint\r\n * \r\n * @example Shorten by 50%, anchored at the midpoint\r\n * ```js\r\n * const l = {\r\n *  a: {x:50, y:50}, b: {x: 100, y: 90}\r\n * }\r\n * const l2 = scaleFromMidpoint(l, 0.5);\r\n * ```\r\n * @param line\r\n * @param factor \r\n */\r\nexport const scaleFromMidpoint = (line:Line, factor:number):Line => {\r\n  const a = interpolate(factor/2, line);\r\n  const b = interpolate(0.5 + factor/2, line);\r\n  return {a, b};\r\n};\r\n\r\n/**\r\n * Extends a line to intersection the x-axis at a specified location\r\n * @param line Line to extend\r\n * @param xIntersection Intersection of x-axis.\r\n */\r\nexport const extendX = (line:Line, xIntersection:number):Points.Point => {\r\n  const y = line.a.y + (xIntersection - line.a.x) * slope(line);\r\n  return Object.freeze({x: xIntersection, y});\r\n};\r\n\r\n/**\r\n * Returns a line extended from its `a` point by a specified distance\r\n *\r\n * ```js\r\n * const line = {a: {x: 0, y:0}, b: {x:10, y:10} }\r\n * const extended = extendFromStart(line, 2);\r\n * ```\r\n * @param ine\r\n * @param distance\r\n * @return Newly extended line\r\n */\r\nexport const extendFromA = (line:Line, distance:number):Line => {\r\n  const len = length(line);\r\n  return Object.freeze({\r\n    ...line,\r\n    a: line.a,\r\n    b: Object.freeze({\r\n      x: line.b.x + (line.b.x - line.a.x) / len * distance,\r\n      y: line.b.y + (line.b.y - line.a.y) / len * distance,\r\n    })\r\n  })\r\n  ;\r\n};\r\n\r\n/**\r\n * Yields every integer point along `line`. \r\n * \r\n * @example Basic usage\r\n * ```js\r\n * const l = { a: {x: 0, y: 0}, b: {x: 100, y: 100} };\r\n * for (const p of pointsOf(l)) {\r\n *  // Do something with point `p`...\r\n * }\r\n * ```\r\n * \r\n * Some precision is lost as start and end\r\n * point is also returned as an integer.\r\n * \r\n * Uses [Bresenham's line algorithm](https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm)\r\n * @param line Line\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* pointsOf(line:Line):Generator<Points.Point>  {\r\n  // Via https://play.ertdfgcvb.xyz/#/src/demos/dyna\r\n  const {a, b} = line;\r\n  //eslint-disable-next-line functional/no-let\r\n  let x0 = Math.floor(a.x);\r\n  //eslint-disable-next-line functional/no-let\r\n  let y0 = Math.floor(a.y);\r\n  const x1 = Math.floor(b.x);\r\n  const y1 = Math.floor(b.y);\r\n  const dx = Math.abs(x1 - x0);\r\n  const dy = -Math.abs(y1 - y0);\r\n  const sx = x0 < x1 ? 1 : -1;\r\n  const sy = y0 < y1 ? 1 : -1;\r\n  //eslint-disable-next-line functional/no-let\r\n  let err = dx + dy;\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    yield {x:x0, y:y0};\r\n    if (x0 === x1 && y0 === y1) break;\r\n    const e2 = 2 * err;\r\n    if (e2 >= dy) {\r\n      err += dy;\r\n      x0 += sx;\r\n    }\r\n    if (e2 <= dx) {\r\n      err += dx;\r\n      y0 += sy;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the distance of `point` to the \r\n * nearest point on `line`.\r\n * \r\n * ```js\r\n * const d = distance(line, {x:10,y:10});\r\n * ```\r\n * \r\n * If an array of lines is provided, the shortest distance is returned.\r\n * @param line Line (or array of lines)\r\n * @param point Point to check against\r\n * @returns Distance\r\n */\r\nexport const distance = (line:Line|ReadonlyArray<Line>, point:Points.Point):number => {\r\n  if (Array.isArray(line)) {\r\n    const distances = line.map(l => distanceSingleLine(l, point));\r\n    return minFast(distances);\r\n  } else {\r\n    return distanceSingleLine(line as Line, point);\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the distance of `point` to the nearest point on `line`\r\n * @param line Line\r\n * @param point Target point\r\n * @returns \r\n */\r\nconst distanceSingleLine = (line:Line, point:Points.Point):number => {\r\n  guard(line, `line`);\r\n  guardPoint(point, `point`);\r\n\r\n  if (length(line) === 0) {\r\n    // Line is really a point\r\n    return length(line.a, point);\r\n  }\r\n\r\n  const near = nearest(line, point);\r\n  return length(near, point);\r\n};\r\n\r\n/**\r\n * Calculates a point in-between `a` and `b`.\r\n * \r\n * ```js\r\n * // Get {x,y} at 50% along line\r\n * interpolate(0.5, line);\r\n * \r\n * // Get {x,y} at 80% between point A and B\r\n * interpolate(0.8, ptA, ptB);\r\n * ```\r\n * @param amount Relative position, 0 being at a, 0.5 being halfway, 1 being at b\r\n * @param a Start\r\n * @param b End\r\n * @returns Point between a and b\r\n */\r\nexport function interpolate(amount: number, a: Points.Point, pointB: Points.Point): Points.Point;\r\n\r\n/**\r\n * Calculates a point in-between `line`'s start and end points.\r\n * \r\n * ```js\r\n * // Get {x, y } at 50% along line\r\n * interpolate(0.5, line);\r\n * ```\r\n * @param amount 0..1 \r\n * @param line Line\r\n */\r\nexport function interpolate(amount: number, line:Line): Points.Point;\r\n\r\n//eslint-disable-next-line func-style\r\nexport function interpolate(amount:number, aOrLine:Points.Point|Line, pointB?:Points.Point): Points.Point {\r\n  guardPercent(amount, `amount`);\r\n\r\n  const [a, b] = getPointsParam(aOrLine, pointB);\r\n\r\n  const d = length(a, b);\r\n  const d2 = d * (1 - amount);\r\n\r\n  const x = b.x - (d2 * (b.x - a.x) / d);\r\n  const y = b.y - (d2 * (b.y - a.y) / d);\r\n\r\n  return Object.freeze({x: x, y: y});\r\n}\r\n\r\n/**\r\n * Returns a string representation of two points\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport function toString (a: Points.Point, b: Points.Point): string;\r\n\r\n/**\r\n * Returns a string representation of a line \r\n * @param line \r\n */\r\nexport function toString(line:Line):string;\r\n\r\n/**\r\n * Returns a string representation of a line or two points.\r\n * @param a\r\n * @param b \r\n * @returns \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function toString(a:Points.Point|Line, b?:Points.Point):string {\r\n  if (isLine(a)) {\r\n    guard(a, `a`);\r\n    b = a.b;\r\n    a = a.a;\r\n  } else if (b === undefined) throw new Error(`Expect second point if first is a point`);\r\n  return Points.toString(a) + `-` + Points.toString(b);\r\n}\r\n\r\n/**\r\n * Returns a line from a basis of coordinates\r\n * ```js\r\n * // Line from 0,1 -> 10,15\r\n * fromNumbers(0,1,10,15);\r\n * ```\r\n * @param x1 \r\n * @param y1 \r\n * @param x2 \r\n * @param y2 \r\n * @returns \r\n */\r\nexport const fromNumbers = (x1: number, y1: number, x2: number, y2: number): Line => {\r\n  if (Number.isNaN(x1)) throw new Error(`x1 is NaN`);\r\n  if (Number.isNaN(x2)) throw new Error(`x2 is NaN`);\r\n  if (Number.isNaN(y1)) throw new Error(`y1 is NaN`);\r\n  if (Number.isNaN(y2)) throw new Error(`y2 is NaN`);\r\n\r\n  const a = {x: x1, y: y1};\r\n  const b = {x: x2, y: y2};\r\n  return fromPoints(a, b);\r\n};\r\n\r\n/**\r\n * Returns an array representation of line: [a.x, a.y, b.x, b.y]\r\n * \r\n * See {@link fromFlatArray} to create a line _from_ this representation.\r\n *\r\n * @export\r\n * @param {Point} a\r\n * @param {Point} b\r\n * @returns {number[]}\r\n */\r\nexport const toFlatArray = (a: Points.Point, b: Points.Point): readonly number[] =>  [a.x, a.y, b.x, b.y];\r\n\r\n/**\r\n * Returns an SVG description of line\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const toSvgString = (a: Points.Point, b: Points.Point): readonly string[] => [`M${a.x} ${a.y} L ${b.x} ${b.y}`];\r\n\r\n/**\r\n * Returns a line from four numbers [x1,y1,x2,y2].\r\n * \r\n * See {@link toFlatArray} to create an array from a line.\r\n * \r\n * @param arr Array in the form [x1,y1,x2,y2]\r\n * @returns Line\r\n */\r\nexport const fromFlatArray = (arr: readonly number[]): Line => {\r\n  if (!Array.isArray(arr)) throw new Error(`arr parameter is not an array`);\r\n  if (arr.length !== 4) throw new Error(`array is expected to have length four`);\r\n  return fromNumbers(arr[0], arr[1], arr[2], arr[3]);\r\n};\r\n\r\n/**\r\n * Returns a line from two points\r\n * ```js\r\n * // Line from 0,1 to 10,15\r\n * fromPoints({x:0,y:1}, {x:10,y:15});\r\n * ```\r\n * @param a Start point\r\n * @param b End point\r\n * @returns \r\n */\r\nexport const fromPoints = (a: Points.Point, b: Points.Point): Line => {\r\n  guardPoint(a, `a`);\r\n  guardPoint(b, `b`);\r\n  a = Object.freeze({...a});\r\n  b = Object.freeze({...b});\r\n  return Object.freeze({\r\n    a: a,\r\n    b: b\r\n  });\r\n};\r\n\r\n/**\r\n * Returns an array of lines that connects provided points. Note that line is not closed.\r\n * \r\n * Eg, if points a,b,c are provided, two lines are provided: a->b and b->c.\r\n * @param points \r\n * @returns \r\n */\r\nexport const joinPointsToLines = (...points:readonly Points.Point[]): PolyLine => {\r\n  \r\n  const lines = [];\r\n  //eslint-disable-next-line functional/no-let\r\n  let start = points[0];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=1;i<points.length;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    lines.push(fromPoints(start, points[i]));\r\n    start = points[i];\r\n  }\r\n  return lines;\r\n};\r\n\r\n/**\r\n * Returns a {@link LinePath} from two points\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const fromPointsToPath = (a:Points.Point, b:Points.Point): LinePath => toPath(fromPoints(a, b));\r\n\r\n/**\r\n * Returns a rectangle that encompasses dimension of line\r\n */\r\nexport const bbox = (line:Line):Rects.RectPositioned =>  Points.bbox(line.a, line.b);\r\n\r\n/**\r\n * Returns a path wrapper around a line instance. This is useful if there are a series\r\n * of operations you want to do with the same line because you don't have to pass it\r\n * in as an argument to each function.\r\n * \r\n * Note that the line is immutable, so a function like `sum` returns a new LinePath,\r\n * wrapping the result of `sum`.\r\n * \r\n * ```js\r\n * // Create a path\r\n * const l = toPath(fromNumbers(0,0,10,10));\r\n * l.length();\r\n * \r\n * // Mutate functions return a new path\r\n * const ll = l.sum({x:10,y:10});\r\n * ll.length();\r\n * ```\r\n * @param line \r\n * @returns \r\n */\r\nexport const toPath = (line:Line): LinePath => {\r\n  const {a, b} = line;\r\n  return Object.freeze({\r\n    ...line,\r\n    length: () => length(a, b),\r\n    interpolate: (amount: number) => interpolate(amount, a, b),\r\n    bbox: () => bbox(line),\r\n    toString: () => toString(a, b),\r\n    toFlatArray: () => toFlatArray(a, b),\r\n    toSvgString: () => toSvgString(a, b),\r\n    toPoints: () => [a, b],\r\n    rotate: (amountRadian:number, origin:Points.Point) => toPath(rotate(line, amountRadian, origin)),\r\n    sum:(point:Points.Point) => toPath(sum(line, point)),\r\n    divide:(point:Points.Point) => toPath(divide(line, point)),\r\n    multiply:(point:Point) => toPath(multiply(line, point)),\r\n    subtract:(point:Point) => toPath(subtract(line, point)),\r\n    apply:(fn:(point:Points.Point) => Points.Point) => toPath(apply(line, fn)),\r\n    kind: `line`\r\n  });\r\n};\r\n\r\nexport type LinePath = Line & Path & {\r\n  toFlatArray():readonly number[]\r\n  toPoints():readonly Points.Point[]\r\n  rotate(amountRadian:number, origin:Points.Point):LinePath\r\n  sum(point:Points.Point):LinePath\r\n  divide(point:Points.Point):LinePath\r\n  multiply(point:Points.Point):LinePath\r\n  subtract(point:Points.Point):LinePath\r\n  apply(fn:(point:Points.Point) => Points.Point):LinePath\r\n}\r\n\r\n/**\r\n * Returns a line that is rotated by `angleRad`. By default it rotates\r\n * around its center, but an arbitrary `origin` point can be provided.\r\n * If `origin` is a number, it's presumed to be a 0..1 percentage of the line.\r\n * \r\n * ```js\r\n * // Rotates line by 0.1 radians around point 10,10\r\n * rotate(line, 0.1, {x:10,y:10});\r\n * \r\n * // Rotate line by 5 degrees around its center\r\n * rotate(line, degreeToRadian(5));\r\n * \r\n * // Rotate line by 5 degres around its end point\r\n * rotate(line, degreeToRadian(5), line.b);\r\n * \r\n * // Rotate by 90 degrees at the 80% position\r\n * rotated = rotate(line, Math.PI / 2, 0.8);\r\n * ```\r\n * @param line Line to rotate\r\n * @param amountRadian Angle in radians to rotate by\r\n * @param origin Point to rotate around. If undefined, middle of line will be used\r\n * @returns \r\n */\r\nexport const rotate = (line:Line, amountRadian?:number, origin?:Points.Point|number):Line => {\r\n  if (amountRadian === undefined || amountRadian === 0) return line;\r\n  if (origin === undefined) origin = 0.5;\r\n  if (typeof origin === `number`) {\r\n    origin = interpolate(origin, line.a, line.b);\r\n  }\r\n  return Object.freeze({\r\n    ...line,\r\n    a: Points.rotate(line.a, amountRadian, origin),\r\n    b: Points.rotate(line.b, amountRadian, origin)\r\n  });\r\n};","export * from  './Interfaces.js';\r\n\r\nexport {mapSet, mapCircularMutable, mapArray} from './MapMultiMutable.js';\r\nexport {circularArray} from './CircularArray.js';\r\nexport {simpleMapArrayMutable} from './SimpleMapArray.js';\r\nexport {setMutable} from './Set.js';\r\nexport {stack, stackMutable} from './Stack.js';\r\nexport {queue, queueMutable} from './Queue.js';\r\nexport {map} from './MapImmutable.js';\r\nexport {mapMutable} from './MapMutable.js';\r\nexport {MapOfMutableImpl} from './MapMultiMutable.js';\r\n\r\n/**\r\n * Stacks store items in order. \r\n * \r\n * Stacks and queues can be helpful when it's necessary to process data in order, but each one has slightly different behaviour.\r\n * \r\n * Like a stack of plates, the newest item (on top) is removed\r\n * before the oldest items (at the bottom). {@link Queues} operate differently, with\r\n * the oldest items (at the front of the queue) removed before the newest items (at the end of the queue).\r\n * \r\n * Create stacks with {@link stack} or {@link stackMutable}. These return a {@link Stack} or {@link StackMutable} respectively.\r\n * \r\n * The ixfx implementation allow you to set a capacity limit with three {@link DiscardPolicy |policies} for\r\n * how items are evicted.\r\n * \r\n */\r\nexport * as Stacks from './Stack.js';\r\n\r\n/** \r\n * Arrays are a list of data. ixfx provides a number of functions for working with arrays in an immutable manner.\r\n * This means that the input array is not changed.\r\n * \r\n * For arrays of numbers:\r\n * * {@link average}, {@link max}, {@link min}, {@link total}: Calculate average/max/min/total\r\n * * {@link averageWeighted}: Calculate average, but applies a weighting function, eg to favour items at beginning of array\r\n * * {@link minMaxAvg}: Find smallest, largest and average\r\n * * {@link maxIndex}, {@link minIndex}: Return index of largest/smallest value\r\n * * {@link dotProduct}: Returns the dot-product between two arrays\r\n * * {@link weight}: Applies a weighting function to all values based on their index\r\n * \r\n * Randomisation\r\n * * {@link randomIndex}: Return a random array index\r\n * * {@link randomElement}: Return a random value\r\n * * {@link randomPluck}: Remove a random element from an array, returning it and the new array\r\n * * {@link shuffle}: Returns a randomly-sorted copy of arra\r\n * \r\n * Finding/accessing\r\n * * {@link filterBetween}: Same as `Array.filter` but only looks within a specified index range\r\n * * {@link sample}: Returns a new array with a random sampling of input\r\n * * {@link areValuesIdentical}: Returns true if all the values in the array are identical\r\n * \r\n * Changing the shape\r\n * * {@link ensureLength}: Returns a copy of array with designated length, either padding it out or truncating as necessary\r\n * * {@link groupBy}: Groups data into a new Map\r\n * * {@link remove}: Remove an item by index\r\n * * {@link without}: Returns an array with specified value omitted\r\n * * {@link zip}: Groups together elements from several arrays based on their index\r\n */\r\nexport * as Arrays from './Arrays.js';\r\n\r\n/**\r\n * Sets store unique items. \r\n * \r\n * ixfx's {@link SetMutable} compares items by value rather than reference, unlike the default JS implementation.\r\n * \r\n * Create using {@link setMutable}\r\n */\r\nexport * as Sets from './Set.js';\r\n\r\n/**\r\n * Queues store items in the order in which they are added.\r\n * \r\n * Stacks and queues can be helpful when it's necessary to process data in order, but each one has slightly different behaviour.\r\n * \r\n * Like lining up at a bakery, the oldest items (at the front of the queue) are removed \r\n * before the newest items (at the end of the queue). This is different to {@link Stacks},\r\n * where the newest item (on top) is removed before the oldest items (at the bottom).\r\n * \r\n * The ixfx implementations allow you to set a capacity limit with three {@link DiscardPolicy |policies} for\r\n * how items are evicted.\r\n * \r\n * Create queues with {@link queue} or {@link queueMutable}. These return a {@link Queue} or {@link QueueMutable} respectively.\r\n */\r\nexport * as Queues from './Queue.js';\r\n\r\n/**\r\n * Maps associate keys with values. Several helper functions are provided\r\n * for working with the standard JS Map class.\r\n * \r\n * ixfx also includes {@link MapMutable}, {@link MapImmutable}\r\n * \r\n * Overview:\r\n * * {@link getOrGenerate}: Solves a common scenario of wanting a value by a particular key, or generating it if it doesn't exist\r\n * * {@link filter}: Yields values in map that match a predicate\r\n * * {@link find}: Finds the first value that matches a predicate, or _undefined_ if nothing found\r\n * * {@link hasAnyValue}: Searches through all keys, returning true if any occurence of _value_ was found\r\n * \r\n * Transformations:\r\n * * {@link toArray}: Returns the values of the map as an array\r\n * * {@link mapToArray}: Applies a function to convert a map's values to an array\r\n * * {@link mapToObj}: Coverts a Map to a plain object, useful for JSON serialising.\r\n * * {@link mapToObjTransform}: Converts a map to a plain object, but applying a function to values\r\n * * {@link transformMap}: Like `Array.map`, but for Maps. Useful for generating a map as a transform of an input map.\r\n * * {@link zipKeyValue}: Given an array of keys and values, combines them together into a map\r\n */\r\nexport * as Maps from './Map.js';\r\n","import {CircularArray} from \"./Interfaces.js\";\r\nimport { integer as guardInteger } from \"../Guards.js\";\r\n\r\nclass CircularArrayImpl<V> extends Array {\r\n  // ✔ Class is unit tested!\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  #capacity: number;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  #pointer: number;\r\n\r\n  constructor(capacity: number = 0) {\r\n    super();\r\n    // Allowed to create with capacity zero\r\n    guardInteger(capacity, `positive`, `capacity`);\r\n\r\n    // Can't throw because .filter won't use ctor proprly\r\n    this.#capacity = capacity;\r\n    this.#pointer = 0;\r\n  }\r\n\r\n  add(thing: V): CircularArrayImpl<V> {\r\n    const ca = CircularArrayImpl.from(this) as CircularArrayImpl<V>;\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    ca[this.#pointer] = thing;\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    ca.#capacity = this.#capacity;\r\n    if (this.#capacity > 0) {\r\n      /* eslint-disable-next-line functional/immutable-data */\r\n      ca.#pointer = this.#pointer + 1 === this.#capacity ? 0 : this.#pointer + 1;\r\n    } else {\r\n      /* eslint-disable-next-line functional/immutable-data */\r\n      ca.#pointer = this.#pointer + 1;\r\n    }\r\n    return ca;\r\n  }\r\n\r\n  get pointer(): number {\r\n    return this.#pointer;\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    if (this.#capacity === 0) return false;\r\n    return this.length === this.#capacity;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Returns a new circular array. Immutable. A circular array only keeps up to `capacity` items.\r\n * Old items are overridden with new items.\r\n * \r\n * `CircularArray` extends the regular JS array. Only use `add` to change the array if you want\r\n * to keep the `CircularArray` behaviour.\r\n * \r\n * @example Basic functions\r\n * ```js\r\n * let a = circularArray(10);\r\n * a = a.add(`hello`);  // Because it's immutable, capture the return result of `add`\r\n * a.isFull;            // True if circular array is full\r\n * a.pointer;           // The current position in array it will write to\r\n * ```\r\n * \r\n * Since it extends the regular JS array, you can access items as usual:\r\n * @example Accessing\r\n * ```js\r\n * let a = circularArray(10);\r\n * ... add some stuff ..\r\n * a.forEach(item => console.log(item)); \r\n * ```\r\n * @param capacity Maximum capacity before recycling array entries\r\n * @return Circular array\r\n */\r\nexport const circularArray = <V>(capacity:number): CircularArray<V> => new CircularArrayImpl<V>(capacity);\r\n","// ✔ UNIT TESTED\r\nimport { SimpleEventEmitter } from \"../Events.js\";\r\nimport { ToString, toStringDefault, isEqualDefault } from \"../Util.js\";\r\nimport { hasAnyValue as mapHasAnyValue,  toArray as mapToArray, find as mapFind, filter as mapFilter, addUniqueByHash} from './Map.js';\r\nimport { without } from './Arrays.js';\r\nimport { circularArray } from './CircularArray.js';\r\nimport {CircularArray, MapArrayEvents, MapArrayOpts, MapCircularOpts, MapMultiOpts,  MapOfMutable, MapSetOpts, MultiValue} from \"./Interfaces.js\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class MapOfMutableImpl<V, M> extends SimpleEventEmitter<MapArrayEvents<V>> {\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #map: Map<string, M> = new Map();\r\n  readonly groupBy: ToString<V>;\r\n  readonly type: MultiValue<V, M>;\r\n\r\n  constructor(type:MultiValue<V, M>, opts:MapMultiOpts<V> = {}) {\r\n    super();\r\n    this.type = type;\r\n    this.groupBy = opts.groupBy ?? toStringDefault;\r\n  }\r\n\r\n  /**\r\n   * Returns the type name. For in-built implementations, it will be one of: array, set or circular\r\n   */\r\n  get typeName() {\r\n    return this.type.name;\r\n  }\r\n\r\n  /**\r\n   * Returns the length of the longest child list\r\n   */\r\n  get lengthMax() {\r\n    //eslint-disable-next-line functional/no-let\r\n    let m = 0;\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const v of this.#map.values()) {\r\n      m = Math.max(m, this.type.count(v));\r\n    }\r\n    return m;\r\n  }\r\n\r\n  debugString(): string {\r\n    const keys = Array.from(this.#map.keys());\r\n    // eslint-disable-next-line functional/no-let\r\n    let r = `Keys: ${keys.join(`, `)}\\r\\n`;\r\n    keys.forEach(k => {\r\n      const v = this.#map.get(k);\r\n      if (v !== undefined) {\r\n        const asArray = this.type.toArray(v);\r\n        if (asArray !== undefined) {\r\n          r += ` - ${k} (${this.type.count(v)}) = ${JSON.stringify(asArray)}\\r\\n`;\r\n        }\r\n      } else r += ` - ${k} (undefined)\\r\\n`;\r\n    });\r\n    return r;\r\n  }\r\n\r\n  get isEmpty():boolean {\r\n    return (this.#map.size === 0);\r\n  }\r\n\r\n  clear() {\r\n    this.#map.clear();\r\n    super.fireEvent(`clear`, true);\r\n  }\r\n\r\n  addKeyedValues(key: string, ...values: ReadonlyArray<V>) {\r\n    const set = this.#map.get(key);\r\n    //console.log(`addKeyedValues: key: ${key} values: ${JSON.stringify(values)}`);\r\n    if (set === undefined) {\r\n      this.#map.set(key, this.type.add(undefined, values));\r\n      super.fireEvent(`addedKey`, {key:key});\r\n      super.fireEvent(`addedValues`, {values: values});\r\n    } else {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      this.#map.set(key, this.type.add(set, values));\r\n      super.fireEvent(`addedValues`, {values: values});\r\n    }\r\n  }\r\n\r\n  addValue(...values:ReadonlyArray<V>) {\r\n    values.forEach(v => this.addKeyedValues(this.groupBy(v), v));\r\n  }\r\n\r\n  hasKeyValue(key:string, value:V):boolean {    \r\n    const m = this.#map.get(key);\r\n    if (m === undefined) return false;    \r\n    return this.type.has(m, value);\r\n  }\r\n\r\n  has(key:string):boolean {\r\n    return this.#map.has(key);\r\n  }\r\n\r\n  deleteKeyValue(key: string, value: V):boolean {\r\n    const a = this.#map.get(key);\r\n    if (a === undefined) return false;\r\n    const preCount = this.type.count(a);\r\n\r\n    const filtered = this.type.without(a, value);// this.type.filter(a, v => !this.valueComparer(v, value));\r\n    const postCount = filtered.length;\r\n    this.#map.set(key, this.type.add(undefined, filtered));\r\n    return preCount > postCount;\r\n  }\r\n\r\n  delete(key:string): boolean {\r\n    const a = this.#map.get(key);\r\n    if (a === undefined) return false;\r\n    this.#map.delete(key);\r\n    this.fireEvent(`deleteKey`, {key: key});\r\n    return true;\r\n  }\r\n\r\n  findKeyForValue(value: V): string | undefined {\r\n    const keys = Array.from(this.#map.keys());\r\n    const found = keys.find(key => {\r\n      const a = this.#map.get(key);\r\n      if (a === undefined) throw Error(`Bug: map could not be accessed`);\r\n      if (this.type.has(a, value)) return true;\r\n      return false;\r\n    });\r\n    return found;\r\n  }\r\n\r\n  count(key: string): number {\r\n    const e = this.#map.get(key);\r\n    if (e === undefined) return 0;\r\n    return this.type.count(e);\r\n  }\r\n\r\n  /**\r\n   * Returns the array of values stored under `key`\r\n   * or undefined if key does not exist\r\n   */\r\n  get(key: string): readonly V[] | undefined {\r\n    const m = this.#map.get(key);\r\n    if (m === undefined) return undefined;\r\n    return this.type.toArray(m);\r\n  }\r\n\r\n  getSource(key:string): M|undefined {\r\n    return this.#map.get(key);\r\n  }\r\n\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  keys(): string[] {\r\n    return Array.from(this.#map.keys());\r\n  }\r\n\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  keysAndCounts(): Array<[string, number]> {\r\n    const keys = this.keys();\r\n    /* eslint-disable-next-line functional/prefer-readonly-type */\r\n    const r = keys.map(k => [k, this.count(k)]) as Array<[string, number]>;\r\n    return r;\r\n  }\r\n\r\n  merge(other: MapOfMutable<V, M>) {\r\n    const keys = other.keys();\r\n    keys.forEach(key => {\r\n      const data = other.get(key);\r\n      if (data !== undefined) this.addKeyedValues(key, ...data);\r\n    });\r\n  }\r\n}\r\n\r\n// ✔ UNIT TESTED\r\n/**\r\n * Returns a {@link MapOfMutable} to allow storing multiple values under a key, unlike a regular Map.\r\n * @example\r\n * ```js\r\n * const map = mapArray();\r\n * map.add(`hello`, [1,2,3,4]); // Adds series of numbers under key `hello`\r\n * \r\n * const hello = map.get(`hello`); // Get back values\r\n * ```\r\n * \r\n * Takes options:\r\n * * `comparer`: {@link Util.IsEqual}\r\n * * `toString`: {@link Util.ToString}\r\n * \r\n * A custom {@link Util.ToString} function can be provided which is used when checking value equality (`has`, `without`)\r\n * ```js\r\n * const map = mapArray({toString:(v) => v.name}); // Compare values based on their `name` field;\r\n * ``` \r\n * \r\n * Alternatively, a {@link Util.IsEqual} function can be used:\r\n * ```js\r\n * const map = mapArray({comparer: (a, b) => a.name === b.name });\r\n * ```\r\n * @param opts \r\n * @template V Data type of items \r\n * @returns {@link MapOfMutable}\r\n */\r\nexport const mapArray = <V>(opts:MapArrayOpts<V> = {}):MapOfMutable<V, ReadonlyArray<V>> => {\r\n  const comparer = opts.comparer === undefined ?\r\n    opts.toString === undefined ? (a:V, b:V) => opts.toString(a) === opts.toString(b) :\r\n      isEqualDefault\r\n    : opts.comparer;\r\n    \r\n  const t:MultiValue<V, ReadonlyArray<V>> = {\r\n    get name()  {\r\n      return `array`;\r\n    },\r\n    add:(dest, values) => {\r\n      if (dest === undefined) return [...values];\r\n      return [...dest, ...values];\r\n    },\r\n    count: (source) => source.length,\r\n    find: (source, predicate) => source.find(predicate),\r\n    filter: (source, predicate) => source.filter(predicate),\r\n    toArray: (source) => source,\r\n    has: (source, value) => source.find(v => comparer(v, value)) !== undefined,\r\n    without: (source, value) => source.filter(v => !comparer(v, value))\r\n  };\r\n  const m = new MapOfMutableImpl<V, ReadonlyArray<V>>(t, opts);\r\n  return m;\r\n};\r\n\r\n/**\r\n * Returns a {@link MapOfMutable} that uses a set to hold values.\r\n * This means that only unique values are stored under each key. By default it\r\n * uses the JSON representation to compare items. \r\n * \r\n * Options: `{ hash: toStringFn } }`\r\n * \r\n * `hash` is a {@link Util.ToString} function: `(object) => string`. By default it uses\r\n * `JSON.stringify`.\r\n * \r\n * @example Only storing the newest three items per key\r\n * ```js\r\n * const map = mapSetMutable();\r\n * map.add(`hello`, [1, 2, 3, 1, 2, 3]);\r\n * const hello = map.get(`hello`); // [1, 2, 3]\r\n * ```\r\n * \r\n * @example\r\n * ```js\r\n * const hash = (v) => v.name; // Use name as the key\r\n * const map = mapSetMutable(hash);\r\n * map.add(`hello`, {age:40, name: `Mary`});\r\n * map.add(`hello`, {age:29, name: `Mary`}); // Value ignored as same name exists\r\n * ```\r\n * @param opts \r\n * @returns\r\n */\r\nexport const mapSet = <V>(opts?:MapSetOpts<V>):MapOfMutable<V, ReadonlyMap<string, V>> => {\r\n  const hash = opts?.hash ?? toStringDefault;\r\n  const comparer = (a:V, b:V) => hash(a) === hash(b);\r\n\r\n  const t:MultiValue<V, ReadonlyMap<string, V>> = {\r\n    get name()  {\r\n      return `set`;\r\n    },\r\n    add:(dest, values) => addUniqueByHash(dest, hash, ...values),\r\n    count: (source) => source.size,\r\n    find: (source, predicate) => mapFind(source, predicate),\r\n    filter: (source, predicate) => mapFilter(source, predicate),\r\n    toArray: (source) => mapToArray(source),\r\n    has: (source, value) => mapHasAnyValue(source, value, comparer),\r\n    without: (source, value) => without(mapToArray(source), value, comparer)\r\n  };\r\n  const m = new MapOfMutableImpl<V, ReadonlyMap<string, V>>(t, opts);\r\n  return m;\r\n};\r\n\r\n/**\r\n * Returns a {@link MapOfMutable} that uses a {@link CircularArray} to hold values. Mutable.\r\n * This means that the number of values stored under each key will be limited to the defined\r\n * capacity.\r\n * \r\n * Required option:\r\n * * `capacity`: how many items to hold\r\n * \r\n * @example Only store the most recent three items per key\r\n * ```js\r\n * const map = mapCircularMutable({capacity: 3});\r\n * map.add(`hello`, [1, 2, 3, 4, 5]);\r\n * const hello = map.get(`hello`); // [3, 4, 5]\r\n * ```\r\n * \r\n * \r\n * @param opts \r\n * @returns\r\n */\r\nexport const mapCircularMutable = <V>(opts:MapCircularOpts<V>):MapOfMutable<V, CircularArray<V>> => {\r\n  const comparer = isEqualDefault;\r\n  \r\n  const t:MultiValue<V, CircularArray<V>> = {\r\n    get name()  {\r\n      return `circular`;\r\n    },\r\n    add:(dest, values) => {\r\n      if (dest === undefined) dest = circularArray<V>(opts.capacity);\r\n      values.forEach(v => dest = dest?.add(v));\r\n      return dest;\r\n    },\r\n    count: (source) => source.length,\r\n    find: (source, predicate) => source.find(predicate),\r\n    filter: (source, predicate) => source.filter(predicate),\r\n    toArray: (source) => source,\r\n    has: (source, value) => source.find(v => comparer(v, value)) !== undefined,\r\n    without: (source, value) => source.filter(v => !comparer(v, value))\r\n  };\r\n  return new MapOfMutableImpl<V, CircularArray<V>>(t, opts);\r\n};\r\n","// ✔ Unit tested!\r\nimport {DiscardPolicy, Stack} from \"./Interfaces.js\";\r\nimport {StackMutable} from './Interfaces.js';\r\n\r\nexport type StackOpts = {\r\n  readonly debug?:boolean\r\n  readonly capacity?: number\r\n  readonly discardPolicy?: DiscardPolicy\r\n}\r\n\r\nconst trimStack = <V>(opts: StackOpts, stack: ReadonlyArray<V>, toAdd: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  const potentialLength = stack.length + toAdd.length;\r\n  const policy = opts.discardPolicy ?? `additions`;\r\n  const capacity = opts.capacity ?? potentialLength;\r\n  const toRemove = potentialLength - capacity;\r\n  if (opts.debug) console.log(`Stack.push: stackLen: ${stack.length} potentialLen: ${potentialLength} toRemove: ${toRemove} policy: ${policy}`);\r\n\r\n  switch (policy) {\r\n  case `additions`:\r\n    if (opts.debug) console.log(`Stack.push:DiscardAdditions: stackLen: ${stack.length} slice: ${potentialLength-capacity} toAddLen: ${toAdd.length}`);\r\n    if (stack.length === opts.capacity) {\r\n      return stack; // Completely full\r\n    } else {\r\n      // Only add some from the new array\r\n      return [...stack, ...toAdd.slice(0, toAdd.length-toRemove)];\r\n    }\r\n  case `newer`:\r\n    if (toRemove >= stack.length) {\r\n      // New items will completely flush out old\r\n      return toAdd.slice(Math.max(0, toAdd.length-capacity), Math.min(toAdd.length, capacity)+1);\r\n    } else {\r\n      // Keep some of the old (from 0)\r\n      //if (opts.debug) console.log(` orig: ${JSON.stringify(stack)}`);\r\n      if (opts.debug) console.log(` from orig: ${stack.slice(0, stack.length-toRemove)}`);\r\n      return [...stack.slice(0, stack.length-toRemove), ...toAdd.slice(0, Math.min(toAdd.length, capacity-toRemove+1))];    \r\n    }\r\n  case `older`:\r\n    // Oldest item in stack is position 0\r\n    return [...stack, ...toAdd].slice(toRemove);\r\n  default:\r\n    throw new Error(`Unknown discard policy ${policy}`);\r\n  }\r\n};\r\n\r\n// Add to top (last index)\r\nconst push = <V>(opts: StackOpts, stack: ReadonlyArray<V>, ...toAdd: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  // If stack is A, B and toAdd is C, D this yields A, B, C, D\r\n  //const mutated = [...stack, ...toAdd];\r\n  const potentialLength = stack.length + toAdd.length;\r\n\r\n  const overSize = (opts.capacity && potentialLength > opts.capacity);\r\n  const toReturn  = overSize ? trimStack(opts, stack, toAdd) : [...stack, ...toAdd];\r\n  return toReturn;\r\n};\r\n\r\n// Remove from top (last index)\r\nconst pop = <V>(opts: StackOpts, stack: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  if (stack.length === 0) throw new Error(`Stack is empty`);\r\n  return stack.slice(0, stack.length - 1);\r\n};\r\n\r\n/**\r\n * Peek at the top of the stack (end of array)\r\n *\r\n * @template V\r\n * @param {StackOpts} opts\r\n * @param {V[]} stack\r\n * @returns {(V | undefined)}\r\n */\r\nconst peek = <V>(opts: StackOpts, stack: ReadonlyArray<V>): V | undefined => stack[stack.length - 1];\r\n\r\nconst isEmpty = <V>(opts: StackOpts, stack: ReadonlyArray<V>): boolean => stack.length === 0;\r\n\r\nconst isFull = <V>(opts: StackOpts, stack: ReadonlyArray<V>): boolean => {\r\n  if (opts.capacity) {\r\n    return stack.length >= opts.capacity;\r\n  }\r\n  return false;\r\n};\r\n\r\n// -------------------------\r\n// Immutable\r\n// -------------------------\r\nclass StackImpl<V> {\r\n  readonly opts: StackOpts;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly data: ReadonlyArray<V>;\r\n\r\n  constructor(opts: StackOpts, data: ReadonlyArray<V>) {\r\n    this.opts = opts;\r\n    this.data = data;\r\n  }\r\n\r\n  push(...toAdd: ReadonlyArray<V>): Stack<V> {\r\n    return new StackImpl<V>(this.opts, push(this.opts, this.data, ...toAdd));\r\n  }\r\n\r\n  pop(): Stack<V> {\r\n    return new StackImpl<V>(this.opts, pop(this.opts, this.data));\r\n  }\r\n\r\n  forEach(fn:(v:V) => void): void {\r\n    this.data.forEach(fn);\r\n  }\r\n\r\n  forEachFromTop(fn:(v:V) => void): void {\r\n    [...this.data].reverse().forEach(fn);\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.opts, this.data);\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    return isFull(this.opts, this.data);\r\n  }\r\n\r\n  get peek(): V | undefined {\r\n    return peek(this.opts, this.data);\r\n  }\r\n\r\n  get length():number {\r\n    return this.data.length;\r\n  }\r\n}\r\n\r\n// -------------------------\r\n// Mutable\r\n// -------------------------\r\nclass StackMutableImpl<V> {\r\n  readonly opts: StackOpts;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  data: ReadonlyArray<V>;\r\n\r\n  constructor(opts: StackOpts, data: ReadonlyArray<V>) {\r\n    this.opts = opts;\r\n    this.data = data;\r\n  }\r\n\r\n  push(...toAdd: ReadonlyArray<V>): number {\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    this.data = push(this.opts, this.data, ...toAdd);\r\n    return this.data.length;\r\n  }\r\n\r\n  forEach(fn:(v:V) => void): void {\r\n    this.data.forEach(fn);\r\n  }\r\n\r\n  forEachFromTop(fn:(v:V) => void): void {\r\n    [...this.data].reverse().forEach(fn);\r\n  }\r\n\r\n  pop(): V|undefined {\r\n    const v = peek(this.opts, this.data);\r\n    pop(this.opts, this.data);\r\n    return v;\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.opts, this.data);\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    return isFull(this.opts, this.data);\r\n  }\r\n\r\n  get peek(): V | undefined {\r\n    return peek(this.opts, this.data);\r\n  }\r\n\r\n  get length():number {\r\n    return this.data.length;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a stack. Immutable. Use {@link stackMutable} for a mutable alternative.\r\n * \r\n * The basic usage is `push`/`pop` to add/remove, returning the modified stack. Use the\r\n * property `peek` to see what's on top.\r\n * \r\n * @example Basic usage\r\n * ```js\r\n * // Create\r\n * let s = stack();\r\n * // Add one or more items\r\n * s = s.push(1, 2, 3, 4);\r\n * // See what's at the top of the stack\r\n * s.peek;      // 4\r\n * \r\n * // Remove from the top of the stack, returning\r\n * // a new stack without item\r\n * s = s.pop();\r\n * s.peek;        // 3\r\n * ```\r\n * @param opts Options\r\n * @param startingItems List of items to add to stack. Items will be pushed 'left to right', ie array index 0 will be bottom of the stack.\r\n */\r\nexport const stack = <V>(opts: StackOpts = {}, ...startingItems: ReadonlyArray<V>): Stack<V> => new StackImpl({...opts}, [...startingItems]);\r\n\r\n/**\r\n * Creates a stack. Mutable. Use {@link stack} for an immutable alternative.\r\n * \r\n * @example Basic usage\r\n * ```js\r\n * // Create\r\n * const s = stackMutable();\r\n * // Add one or more items\r\n * s.push(1, 2, 3, 4);\r\n * \r\n * // See what's on top\r\n * s.peek;  // 4\r\n * \r\n * // Remove the top-most, and return it\r\n * s.pop();   // 4\r\n * \r\n * // Now there's a new top-most element\r\n * s.peek;  // 3\r\n * ```\r\n */\r\nexport const stackMutable = <V>(opts: StackOpts = {}, ...startingItems: ReadonlyArray<V>):StackMutable<V> =>  new StackMutableImpl({...opts}, [...startingItems]);","// ✔ UNIT TESTED\r\n\r\nimport {QueueMutable, Queue, DiscardPolicy} from \"./Interfaces.js\";\r\n\r\n/**\r\n * Queue options.\r\n * \r\n * @example Cap size to 5 items, throwing away newest items already in queue.\r\n * ```js\r\n * const q = queue({capacity: 5, discardPolicy: `newer`});\r\n * ```\r\n */\r\nexport type QueueOpts =  {\r\n  /**\r\n   * @private\r\n   */\r\n  readonly debug?:boolean\r\n  /**\r\n   * Capcity limit\r\n   */\r\n  readonly capacity?: number\r\n  /**\r\n   * Default is `additions`, meaning new items are discarded.\r\n   * \r\n   * `older`: Removes items front of the queue (ie older items are discarded)\r\n   * \r\n   * `newer`: Remove from rear of queue to make space for new items (ie newer items are discarded)\r\n   * \r\n   * `additions`: Only adds new items that there are room for (ie. brand new items are discarded)\r\n   *\r\n   */\r\n  readonly discardPolicy?: DiscardPolicy\r\n}\r\n\r\nconst debug = (opts: QueueOpts, msg:string):void => {\r\n  /* eslint-disable-next-line functional/no-expression-statement */\r\n  opts.debug ? console.log(`queue:${msg}`) : null;\r\n};\r\n\r\nconst trimQueue = <V>(opts: QueueOpts, queue: ReadonlyArray<V>, toAdd: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  const potentialLength = queue.length + toAdd.length;\r\n  const capacity = opts.capacity ?? potentialLength;\r\n  const toRemove = potentialLength - capacity;\r\n  const policy = opts.discardPolicy ?? `additions`;\r\n  debug(opts, `queueLen: ${queue.length} potentialLen: ${potentialLength} toRemove: ${toRemove} policy: ${policy}`);\r\n \r\n  switch (policy) {\r\n  // Only add what we can from toAdd\r\n  case `additions`:\r\n    debug(opts, `trimQueue:DiscardAdditions: queueLen: ${queue.length} slice: ${potentialLength-capacity} toAddLen: ${toAdd.length}`);\r\n    if (queue.length === opts.capacity) {\r\n      return queue; // Completely full\r\n    } else {\r\n      // Only add some from the new array (from the front)  \r\n      return [...queue, ...toAdd.slice(0, toRemove-1)];\r\n    }\r\n  // Remove from rear of queue (last index) before adding new things\r\n  case `newer`:\r\n    if (toRemove >= queue.length) {\r\n      // New items will completely flush out old\r\n      return toAdd.slice(Math.max(0, toAdd.length-capacity), Math.min(toAdd.length, capacity)+1);\r\n    } else {\r\n      // Keep some of the old\r\n      const toAddFinal = toAdd.slice(0, Math.min(toAdd.length, capacity-toRemove+1));\r\n      const toKeep =  queue.slice(0, queue.length-toRemove);\r\n      debug(opts, `trimQueue: toRemove: ${toRemove} keeping: ${JSON.stringify(toKeep)} from orig: ${JSON.stringify(queue)} toAddFinal: ${JSON.stringify(toAddFinal)}`);\r\n      const t=  [...toKeep, ...toAddFinal];    \r\n      debug(opts, `final: ${JSON.stringify(t)}`);\r\n      return t;\r\n    }\r\n  // Remove from the front of the queue (0 index). ie. older items are discarded\r\n  case `older`:\r\n    // If queue is A, B and toAdd is C, D this yields A, B, C, D\r\n    return [...queue, ...toAdd].slice(toRemove);\r\n  default:\r\n    throw new Error(`Unknown overflow policy ${policy}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Adds to the back of the queue (last array index)\r\n * Last item of `toAdd` will potentially be the new end of the queue (depending on capacity limit and overflow policy)\r\n * @template V\r\n * @param {QueueOpts} opts\r\n * @param {V[]} queue\r\n * @param {...V[]} toAdd\r\n * @returns {V[]}\r\n */\r\nconst enqueue = <V>(opts: QueueOpts, queue: ReadonlyArray<V>, ...toAdd: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  if (opts === undefined) throw new Error(`opts parameter undefined`);\r\n\r\n  const potentialLength = queue.length + toAdd.length;\r\n  const overSize = opts.capacity && potentialLength > opts.capacity;\r\n\r\n  const toReturn = overSize ? trimQueue(opts, queue, toAdd) : [...queue, ...toAdd];\r\n  if (opts.capacity && toReturn.length !== opts.capacity && overSize) throw new Error(`Bug! Expected return to be at capacity. Return len: ${toReturn.length} capacity: ${opts.capacity} opts: ${JSON.stringify(opts)}`);\r\n  if (!opts.capacity && toReturn.length !== potentialLength) throw new Error(`Bug! Return length not expected. Return len: ${toReturn.length} expected: ${potentialLength} opts: ${JSON.stringify(opts)}`);\r\n  \r\n  return toReturn;\r\n};\r\n\r\n// Remove from front of queue (0 index)\r\nconst dequeue = <V>(opts: QueueOpts, queue: ReadonlyArray<V>): ReadonlyArray<V> => {\r\n  if (queue.length === 0) throw new Error(`Queue is empty`);\r\n  return queue.slice(1);\r\n};\r\n\r\n/**\r\n * Returns front of queue (oldest item), or undefined if queue is empty\r\n *\r\n * @template V\r\n * @param {QueueOpts} opts\r\n * @param {V[]} queue\r\n * @returns {(V | undefined)}\r\n */\r\nconst peek = <V>(opts: QueueOpts, queue: ReadonlyArray<V>): V | undefined => queue[0];\r\n\r\nconst isEmpty = <V>(opts: QueueOpts, queue: ReadonlyArray<V>): boolean => queue.length === 0;\r\n\r\nconst isFull = <V>(opts: QueueOpts, queue: ReadonlyArray<V>): boolean => {\r\n  if (opts.capacity) {\r\n    return queue.length >= opts.capacity;\r\n  }\r\n  return false;\r\n};\r\n\r\n// -------------------------------\r\n// Immutable\r\n// -------------------------------\r\nclass QueueImpl<V> {\r\n  readonly opts: QueueOpts;\r\n  readonly data: ReadonlyArray<V>;\r\n\r\n  /**\r\n   * Creates an instance of Queue.\r\n   * @param {QueueOpts} opts Options foor queue\r\n   * @param {V[]} data Initial data. Index 0 is front of queue\r\n   * @memberof Queue\r\n   */\r\n  constructor(opts: QueueOpts, data: ReadonlyArray<V>) {\r\n    if (opts === undefined) throw new Error(`opts parameter undefined`);\r\n\r\n    this.opts = opts;\r\n    this.data = data;\r\n  }\r\n\r\n  forEach(fn:(v:V) => void) {\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i=this.data.length-1; i>=0; i--) {\r\n      fn(this.data[i]);\r\n    }  \r\n  }\r\n\r\n  forEachFromFront(fn:(v:V) => void) {\r\n    // From front of queue\r\n    this.data.forEach(vv => fn(vv));\r\n  }\r\n\r\n  enqueue(...toAdd: ReadonlyArray<V>): QueueImpl<V> {\r\n    return new QueueImpl<V>(this.opts, enqueue(this.opts, this.data, ...toAdd));\r\n  }\r\n\r\n  dequeue(): QueueImpl<V> {\r\n    return new QueueImpl<V>(this.opts, dequeue(this.opts, this.data));\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.opts, this.data);\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    return isFull(this.opts, this.data);\r\n  }\r\n\r\n  get length():number {\r\n    return this.data.length;\r\n  }\r\n\r\n  get peek(): V | undefined {\r\n    return peek(this.opts, this.data);\r\n  }\r\n}\r\n\r\n// -------------------------------\r\n// Mutable\r\n// -------------------------------\r\nclass QueueMutableImpl<V> implements QueueMutable<V> {\r\n  readonly opts: QueueOpts;\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  data: ReadonlyArray<V>;\r\n\r\n  constructor(opts:QueueOpts, data:ReadonlyArray<V>) {\r\n    if (opts === undefined) throw new Error(`opts parameter undefined`);\r\n    this.opts = opts;\r\n    this.data = data;\r\n  }\r\n\r\n  enqueue(...toAdd: ReadonlyArray<V>): number {\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    this.data = enqueue(this.opts, this.data, ...toAdd);\r\n    return this.data.length;\r\n  }\r\n\r\n  dequeue(): V|undefined {\r\n    const v = peek(this.opts, this.data);\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    this.data = dequeue(this.opts, this.data);\r\n    return v;\r\n  }\r\n\r\n  get isEmpty(): boolean {\r\n    return isEmpty(this.opts, this.data);\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    return isFull(this.opts, this.data);\r\n  }\r\n\r\n  get length():number {\r\n    return this.data.length;\r\n  }\r\n\r\n  get peek(): V | undefined {\r\n    return peek(this.opts, this.data);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an immutable queue. Queues are useful if you want to treat 'older' or 'newer'\r\n * items differently. _Enqueing_ adds items at the back of the queue, while\r\n * _dequeing_ removes items from the front (ie. the oldest).\r\n *\r\n * ```js\r\n * let q = queue();           // Create\r\n * q = q.enqueue(`a`, `b`);   // Add two strings\r\n * const front = q.peek();    // `a` is at the front of queue (oldest)\r\n * q = q.dequeue();           // q now just consists of `b`  \r\n * ```\r\n * @example Cap size to 5 items, throwing away newest items already in queue.\r\n * ```js\r\n * const q = queue({capacity: 5, discardPolicy: `newer`});\r\n * ```\r\n * \r\n * @template V Data type of items\r\n * @param opts\r\n * @param startingItems Index 0 is the front of the queue\r\n * @returns A new queue\r\n */\r\nexport const queue = <V>(opts: QueueOpts = {}, ...startingItems: ReadonlyArray<V>): Queue<V> => {\r\n  opts = {...opts}; // Make a copy of options\r\n  return new QueueImpl(opts, [...startingItems]); // Make a copy of array so it can't be modified\r\n};\r\n\r\n/**\r\n * Returns a mutable queue. Queues are useful if you want to treat 'older' or 'newer'\r\n * items differently. _Enqueing_ adds items at the back of the queue, while\r\n * _dequeing_ removes items from the front (ie. the oldest).\r\n * \r\n * ```js\r\n * const q = queue();       // Create\r\n * q.enqueue(`a`, `b`);     // Add two strings\r\n * const front = q.dequeue();  // `a` is at the front of queue (oldest)\r\n * ```\r\n *\r\n * @example Cap size to 5 items, throwing away newest items already in queue.\r\n * ```js\r\n * const q = queue({capacity: 5, discardPolicy: `newer`});\r\n * ```\r\n * \r\n * @template V Data type of items\r\n * @param opts\r\n * @param startingItems Items are added in array order. So first item will be at the front of the queue.\r\n */\r\nexport const queueMutable = <V>(opts: QueueOpts = {}, ...startingItems: ReadonlyArray<V>): QueueMutable<V> => new QueueMutableImpl({...opts}, [...startingItems]);","\r\nimport {ArrayKeys, EitherKey, ObjKeys, MapImmutable } from \"./Interfaces\";\r\n\r\n/**\r\n * Adds an array o [k,v] to the map, returning a new instance\r\n * @param map Initial data\r\n * @param data Data to add\r\n * @returns New map with data added\r\n */\r\nconst addArray = <K, V>(map: ReadonlyMap<K, V>, data:ArrayKeys<K, V>): ReadonlyMap<K, V> => {\r\n  const x = new Map<K, V>(map.entries());\r\n  data.forEach(d => {\r\n    if (d[0] === undefined) throw new Error(`key cannot be undefined`);\r\n    if (d[1] === undefined) throw new Error(`value cannot be undefined`);\r\n    x.set(d[0], d[1]);\r\n  });\r\n  return x;\r\n};\r\n\r\n/**\r\n * Adds objects to the map, returning a new instance\r\n * @param map Initial data\r\n * @param data Data to add\r\n * @returns A new map with data added\r\n */\r\nconst addObjects = <K, V>(map: ReadonlyMap<K, V>, data:ObjKeys<K, V>): ReadonlyMap<K, V> => {\r\n  const x = new Map<K, V>(map.entries());\r\n  data.forEach(d => {\r\n    if (d.key === undefined) throw new Error(`key cannot be undefined`);\r\n    if (d.value === undefined) throw new Error(`value cannot be undefined`);\r\n\r\n    x.set(d.key, d.value);\r\n  });\r\n  return x;\r\n};\r\n\r\n/**\r\n * Returns true if map contains key\r\n * \r\n * @example\r\n * ```js\r\n * if (has(map, `London`)) ...\r\n * ```\r\n * @param map Map to search\r\n * @param key Key to find\r\n * @returns True if map contains key\r\n */\r\nexport const has = <K, V>(map: ReadonlyMap<K, V>, key: K): boolean => map.has(key);\r\n\r\n/**\r\n * Adds data to a map, returning the new map.\r\n * \r\n * Can add items in the form of [key,value] or {key, value}.\r\n * @example These all produce the same result\r\n * ```js\r\n * map.set(`hello`, `samantha`);\r\n * map.add([`hello`, `samantha`]);\r\n * map.add({key: `hello`, value: `samantha`})\r\n * ```\r\n * @param map Initial data\r\n * @param data One or more data to add in the form of [key,value] or {key, value} \r\n * @returns New map with data added\r\n */\r\nexport const add = <K, V>(map: ReadonlyMap<K, V>, ...data:EitherKey<K, V>): ReadonlyMap<K, V> => {\r\n  if (map === undefined) throw new Error(`map parameter is undefined`);\r\n  if (data === undefined) throw new Error(`data parameter i.s undefined`);\r\n  if (data.length === 0) return map;\r\n\r\n  const firstRecord = data[0];\r\n  const isObj = typeof (firstRecord as {readonly key:K, readonly value:V}).key !== `undefined` && typeof (firstRecord as {readonly key:K, readonly value:V}).value !== `undefined`;  //(typeof (data[0] as {readonly key:K}).key !== undefined && typeof (data[0] as {readonly value:V}).value !== undefined);\r\n  return isObj ? addObjects(map, data as ObjKeys<K, V>) : addArray(map, data as ArrayKeys<K, V>);\r\n};\r\n\r\n/**\r\n * Sets data in a copy of the initial map\r\n * @param map Initial map\r\n * @param key Key\r\n * @param value Value to  set\r\n * @returns New map with data set\r\n */\r\nexport const set = <K, V>(map: ReadonlyMap<K, V>, key:K, value:V) => {\r\n  const x = new Map<K, V>(map.entries());\r\n  x.set(key, value);\r\n  return x;\r\n};\r\n\r\n/**\r\n * Delete a key from the map, returning a new map\r\n * @param map Initial data\r\n * @param key \r\n * @returns New map with data deleted\r\n */\r\nexport const del = <K, V>(map: ReadonlyMap<K, V>, key: K): ReadonlyMap<K, V> => {\r\n  const x = new Map<K, V>(map.entries());\r\n  x.delete(key);\r\n  return x;\r\n};\r\n\r\n/**\r\n * Returns an {@link MapImmutable}.\r\n * Use {@link mapMutable} as a mutable alternatve.\r\n * \r\n * @example Basic usage\r\n * ```js\r\n * // Creating\r\n * let m = map();\r\n * // Add\r\n * m = m.add([\"name\", \"sally\"]);\r\n * // Recall\r\n * m.get(\"name\");\r\n * ```\r\n * \r\n * @example Enumerating\r\n * ```js\r\n * for (const [key, value] of map.entries()) {\r\n *  console.log(`${key} = ${value}`);\r\n * }\r\n * ```\r\n * \r\n * @example Overview\r\n * ```js\r\n * // Create\r\n * let m = map();\r\n * // Add\r\n * m = m.add([\"name\" , \"sally\"]);\r\n * m.get(\"name\");   // \"sally\";\r\n * m.has(\"age\");    // false\r\n * m.has(\"name\");   // true\r\n * m.isEmpty;       // false\r\n * m = m.delete(\"name\");\r\n * m.entries();     // Iterator of key value pairs\r\n * ```\r\n * \r\n * Since it is immutable, `add()`, `delete()` and `clear()` return a new version with change.\r\n * \r\n * @param dataOrMap Optional initial data in the form of an array of `{ key: value }` or `[ key, value ]`\r\n */\r\nexport const map = <K, V>(dataOrMap?: ReadonlyMap<K, V>|EitherKey<K, V>):MapImmutable<K, V> => {\r\n  if (dataOrMap === undefined) return map([]);\r\n  if (Array.isArray(dataOrMap)) return map(add(new Map(), ...dataOrMap));\r\n  const data = dataOrMap as ReadonlyMap<K, V>;\r\n  return {\r\n    add: (...itemsToAdd:EitherKey<K, V>) => {\r\n      const s = add(data, ...itemsToAdd);\r\n      return map(s);\r\n    },\r\n    get: (key:K) => data.get(key),\r\n    delete: (key:K) => map(del(data, key)),\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    clear: () => map(),\r\n    has: (key:K) => data.has(key),\r\n    entries: () => data.entries(),\r\n    isEmpty: () => data.size === 0\r\n  };\r\n};","import {add, del, set, has} from './MapImmutable.js';\r\nimport { EitherKey, MapMutable } from \"./Interfaces\";\r\n\r\n/**\r\n * Returns a {@link MapMutable} (which just wraps the in-built Map)\r\n * Use {@link map} for the immutable alternative.\r\n * \r\n * @example Basic usage\r\n * ```js\r\n * const m = mapMutable();\r\n * // Add one or more entries\r\n * m.add([\"name\", \"sally\"]);\r\n * // Alternatively:\r\n * m.set(\"name\", \"sally\");\r\n * // Recall\r\n * m.get(\"name\");           // \"sally\"\r\n * m.delete(\"name\");\r\n * m.isEmpty; // True\r\n * m.clear();\r\n * ```\r\n * @param data Optional initial data in the form of an array of `{ key: value }` or `[ key, value ]`\r\n */\r\nexport const mapMutable = <K, V>(...data: EitherKey<K, V>): MapMutable<K, V> => {\r\n  // eslint-disable-next-line functional/no-let\r\n  let m = add(new Map<K, V>(), ...data);\r\n  return {\r\n    add: (...data: EitherKey<K, V>) => {\r\n      m = add(m, ...data);\r\n    },\r\n    delete: (key: K) => {\r\n      m = del(m, key);\r\n    },\r\n    clear: () => {\r\n      m = add(new Map<K, V>());\r\n    },\r\n    set: (key: K, value: V): void => {\r\n      m = set(m, key, value);\r\n    },\r\n    get: (key: K): V | undefined => m.get(key),\r\n    entries: () => m.entries(),\r\n    isEmpty: () => m.size === 0,\r\n    has: (key: K) => has(m, key)\r\n  };\r\n};","import {Points, Lines} from './index.js';\r\n\r\nexport type Rect = {\r\n  readonly width: number,\r\n  readonly height: number,\r\n}\r\nexport type RectPositioned = Points.Point & Rect;\r\n\r\nexport const empty = Object.freeze({width:0, height: 0});\r\nexport const emptyPositioned = Object.freeze({x:0, y:0, width:0, height: 0});\r\n\r\nexport const placeholder = Object.freeze({width: Number.NaN, height: Number.NaN});\r\nexport const placeholderPositioned = Object.freeze({x: Number.NaN, y:Number.NaN, width: Number.NaN, height: Number.NaN});\r\n\r\nexport const isEmpty = (rect:Rect):boolean => rect.width === 0 && rect.height === 0;\r\nexport const isPlaceholder = (rect:Rect):boolean => Number.isNaN(rect.width) && Number.isNaN(rect.height);\r\n/**\r\n * Returns true if parameter has a positioned (x,y) \r\n * @param p Point, Rect or RectPositiond\r\n * @returns \r\n */\r\nexport const isPositioned = (p: Points.Point | Rect | RectPositioned): p is Points.Point => (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\r\n\r\nexport const isRect = (p: number|unknown): p is Rect => {\r\n  if (p === undefined) return false;\r\n  if ((p as Rect).width === undefined) return false;\r\n  if ((p as Rect).height === undefined) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns true if `p` is a positioned rectangle\r\n * @param p \r\n * @returns \r\n */\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const isRectPositioned = (p:Rect|RectPositioned|any): p is RectPositioned => isRect(p) && isPositioned(p);\r\n\r\nexport const fromElement = (el:HTMLElement): Rect => ({width: el.clientWidth, height: el.clientHeight});\r\n\r\nexport const isEqualSize = (a:Rect, b:Rect):boolean => {\r\n  if (a === undefined) throw new Error(`a undefined`);\r\n  if (b === undefined) throw new Error(`b undefined`);\r\n  return a.width === b.width && a.height === b.height;\r\n};\r\n\r\n/**\r\n * Returns a rectangle from width, height\r\n * @param width \r\n * @param height \r\n */\r\nexport function fromNumbers(width:number, height:number):Rect;\r\n\r\n/**\r\n * Returns a rectangle from x,y,width,height\r\n * @param x \r\n * @param y \r\n * @param width \r\n * @param height \r\n */\r\nexport function fromNumbers(x:number, y:number, width:number, height:number):RectPositioned;\r\n\r\n//eslint-disable-next-line func-style\r\nexport function fromNumbers(xOrWidth:number, yOrHeight:number, width?: number, height?:number):Rect|RectPositioned {\r\n\r\n  if (width === undefined || height === undefined) {\r\n    if (typeof xOrWidth !== `number`) throw new Error(`width is not an number`);\r\n    if (typeof yOrHeight !== `number`) throw new Error(`height is not an number`);\r\n    return Object.freeze({width:xOrWidth, height:yOrHeight});\r\n  }\r\n  if (typeof xOrWidth !== `number`) throw new Error(`x is not an number`);\r\n  if (typeof yOrHeight !== `number`) throw new Error(`y is not an number`);\r\n  if (typeof width !== `number`) throw new Error(`width is not an number`);\r\n  if (typeof height !== `number`) throw new Error(`height is not an number`);\r\n\r\n  return Object.freeze({x:xOrWidth, y:yOrHeight, width, height});\r\n}\r\n\r\nexport const isEqual = (a:Rect|RectPositioned, b:Rect|RectPositioned):boolean => {\r\n  if (isPositioned(a) && isPositioned(b)) {\r\n    if (!Points.isEqual(a, b)) return false;\r\n    return a.width === b.width && a.height === b.height;\r\n\r\n  } else if (!isPositioned(a) && !isPositioned(b)) {\r\n    return a.width === b.width && a.height === b.height;\r\n  } else {\r\n    // One param is positioned, the other is not\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Subtracts width/height of `b` from `a` (ie: a - b), returning result.\r\n * \r\n * x,y coords from `a` will be unchanged\r\n * @param a \r\n * @param b \r\n */\r\nexport function subtract (a:Rect, b:Rect):Rect;\r\n/**\r\n * Subtracts a width/height from `a`, returning result.\r\n * \r\n * x,y coords from a will be unchanged\r\n * @param a \r\n * @param width \r\n * @param height \r\n */\r\nexport function subtract (a:Rect, width:number, height?:number):Rect;\r\n\r\n/**\r\n * Subtracts width/height from `a`.\r\n * \r\n * x,y coords from a will be unchanged.\r\n * @param a \r\n * @param b \r\n * @param c \r\n * @returns \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function subtract(a:Rect, b:Rect|number, c?:number):Rect {\r\n  if (a === undefined) throw new Error(`First parameter undefined`);\r\n  if (typeof b === `number`) {\r\n    const height = c === undefined ? 0 : c;\r\n    return Object.freeze({\r\n      ...a,\r\n      width: a.width - b,\r\n      height: a.height - height\r\n    });\r\n  } else {\r\n    return Object.freeze({\r\n      ...a,\r\n      width: a.width - b.width,\r\n      height: a.height - b.height\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if `point` is within, or on boundary of `rect`.\r\n * @param rect \r\n * @param point \r\n */\r\nexport function intersectsPoint (rect:Rect|RectPositioned, point:Points.Point):boolean;\r\n/**\r\n * Returns true if x,y coordinate is within, or on boundary of `rect`.\r\n * @param rect\r\n * @param x \r\n * @param y \r\n */\r\nexport function intersectsPoint (rect:Rect|RectPositioned, x:number, y:number):boolean;\r\n\r\n/**\r\n * Returns true if point is within or on boundary of `rect`.\r\n * @param rect \r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function intersectsPoint(rect:Rect|RectPositioned, a:Points.Point|number, b?:number):boolean {\r\n  guard(rect, `rect`);\r\n  //eslint-disable-next-line functional/no-let\r\n  let x = 0;\r\n  //eslint-disable-next-line functional/no-let\r\n  let y = 0;\r\n  if (typeof a === `number`) {\r\n    if (b === undefined) throw new Error(`x and y coordinate needed`);\r\n    x = a;\r\n    y = b;\r\n  } else {\r\n    x = a.x;\r\n    y = a.y;\r\n  }\r\n  if (isPositioned(rect)) {\r\n    if (x - rect.x > rect.width || x < rect.x) return false;\r\n    if (y - rect.y > rect.height || y < rect.y) return false;\r\n  } else {\r\n    // Assume 0,0\r\n    if (x > rect.width || x < 0) return false;\r\n    if (y > rect.height || y < 0) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const fromCenter = (origin: Points.Point, width: number, height: number): RectPositioned => {\r\n  Points.guard(origin, `origin`);\r\n\r\n  guardDim(width, `width`);\r\n  guardDim(height, `height`);\r\n\r\n  const halfW = width / 2;\r\n  const halfH = height / 2;\r\n  return {x: origin.x - halfW, y: origin.y - halfH, width: width, height: height};\r\n};\r\n\r\n/**\r\n * Returns the distance from the perimeter of `rect` to `pt`.\r\n * If the point is within the rectangle, 0 is returned.\r\n * \r\n * If `rect` does not have an x,y it's assumed to be 0,0\r\n * @param rect Rectangle\r\n * @param pt Point\r\n * @returns Distance\r\n */\r\nexport const distanceFromExterior = (rect:RectPositioned, pt:Points.Point):number => {\r\n  guardPositioned(rect, `rect`);\r\n  Points.guard(pt, `pt`);\r\n  if (intersectsPoint(rect, pt)) return 0;\r\n  const dx = Math.max(rect.x - pt.x, 0, pt.x - rect.x + rect.width);\r\n  const dy = Math.max(rect.y - pt.y, 0, pt.y - rect.y + rect.height);\r\n  return Math.sqrt(dx*dx + dy*dy);\r\n};\r\n\r\nexport const distanceFromCenter = (rect:RectPositioned, pt:Points.Point): number => Points.distance(center(rect), pt);\r\n\r\n\r\n/**\r\n * Returns a rectangle based on provided four corners.\r\n * \r\n * To create a rectangle that contains an arbitary set of points, use {@link Geometry.Points.bbox | Geometry.Points.bbox}.\r\n * \r\n * Does some sanity checking such as:\r\n *  - x will be smallest of topLeft/bottomLeft\r\n *  - y will be smallest of topRight/topLeft\r\n *  - width will be largest between top/bottom left and right\r\n *  - height will be largest between left and right top/bottom\r\n */\r\nexport const maxFromCorners = (topLeft:Points.Point, topRight:Points.Point, bottomRight:Points.Point, bottomLeft: Points.Point):RectPositioned => {\r\n  if (topLeft.y > bottomRight.y) throw new Error(`topLeft.y greater than bottomRight.y`);\r\n  if (topLeft.y > bottomLeft.y) throw new Error(`topLeft.y greater than bottomLeft.y`);\r\n\r\n  const w1  = topRight.x - topLeft.x;\r\n  const w2 = bottomRight.x - bottomLeft.x;\r\n  const h1 = Math.abs(bottomLeft.y - topLeft.y);\r\n  const h2 = Math.abs(bottomRight.y - topRight.y);\r\n  return {\r\n    x: Math.min(topLeft.x, bottomLeft.x),\r\n    y: Math.min(topRight.y, topLeft.y),\r\n    width: Math.max(w1, w2),\r\n    height: Math.max(h1, h2) \r\n  };\r\n};\r\n\r\nconst guardDim = (d: number, name: string = `Dimension`) => {\r\n  if (d === undefined) throw Error(`${name} is undefined`);\r\n  if (isNaN(d)) throw Error(`${name} is NaN`);\r\n  if (d < 0) throw Error(`${name} cannot be negative`);\r\n};\r\n\r\nexport const guard = (rect: Rect, name: string = `rect`) => {\r\n  if (rect === undefined) throw Error(`{$name} undefined`);\r\n  if (isPositioned(rect)) Points.guard(rect, name);\r\n  guardDim(rect.width, name + `.width`);\r\n  guardDim(rect.height, name + `.height`);\r\n};\r\n\r\nconst guardPositioned = (rect:RectPositioned, name:string = `rect`) => {\r\n  if (!isPositioned(rect)) throw new Error(`Expected ${name} to have x,y`);\r\n  guard(rect, name);\r\n};\r\n\r\nexport const fromTopLeft = (origin: Points.Point, width: number, height: number): RectPositioned => {\r\n  guardDim(width, `width`);\r\n  guardDim(height, `height`);\r\n  Points.guard(origin, `origin`);\r\n\r\n  return {x: origin.x, y: origin.y, width: width, height: height};\r\n  // let pts = [origin];\r\n  // pts.push({x: origin.x + width, y: origin.y});\r\n  // pts.push({x: origin.x + width, y: origin.y + height});\r\n  // pts.push({x: origin.x, y: origin.y + height});\r\n  // return rectFromPoints(...pts);\r\n};\r\n\r\nexport const corners = (rect: RectPositioned|Rect, origin?:Points.Point): readonly Points.Point[] => {\r\n  guard(rect);\r\n  if (origin === undefined && Points.isPoint(rect)) origin = rect;\r\n  else if (origin === undefined) throw new Error(`Unpositioned rect needs origin param`);\r\n\r\n  return [\r\n    {x: origin.x, y: origin.y},\r\n    {x: origin.x + rect.width, y: origin.y},\r\n    {x: origin.x + rect.width, y: origin.y + rect.height},\r\n    {x: origin.x, y: origin.y + rect.height}\r\n  ];\r\n};\r\n\r\n/**\r\n * Returns a point on the edge of rectangle\r\n * ```js\r\n * const r1 = {x: 10, y: 10, width: 100, height: 50};\r\n * getEdgeX(r1, `right`);  // Yields: 110\r\n * getEdgeX(r1, `bottom`); // Yields: 60\r\n * \r\n * const r2 = {width: 100, height: 50};\r\n * getEdgeX(r2, `right`);  // Yields: 100\r\n * getEdgeX(r2, `bottom`); // Yields: 50\r\n * ```\r\n * @param rect \r\n * @param edge Which edge: right, left, bottom, top\r\n * @returns \r\n */\r\nexport const getEdgeX = (rect:RectPositioned|Rect, edge:`right`|`bottom`|`left`|`top`): number => {\r\n  guard(rect);\r\n  switch (edge) {\r\n  case `top`:\r\n    return (Points.isPoint(rect)) ? rect.x  : 0;\r\n  case `bottom`:\r\n    return (Points.isPoint(rect)) ? rect.x  : 0;\r\n  case `left`:\r\n    return (Points.isPoint(rect)) ? rect.y  : 0;\r\n  case `right`:\r\n    return (Points.isPoint(rect)) ? rect.x + rect.width  : rect.width;\r\n  }\r\n};\r\n\r\nexport const getEdgeY = (rect:RectPositioned|Rect, edge:`right`|`bottom`|`left`|`top`): number => {\r\n  guard(rect);\r\n  switch (edge) {\r\n  case `top`:\r\n    return (Points.isPoint(rect)) ? rect.y  : 0;\r\n  case `bottom`:\r\n    return (Points.isPoint(rect)) ? rect.y + rect.height : rect.height;\r\n  case `left`:\r\n    return (Points.isPoint(rect)) ? rect.y  : 0;\r\n  case `right`:\r\n    return (Points.isPoint(rect)) ? rect.y  : 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns `rect` divided by the width,height of `normaliseBy`. This can be useful for\r\n * normalising based on camera frame.\r\n * ```js\r\n * const frameSize = {width: 640, height: 320};\r\n * const object = { x: 320, y: 160, width: 64, height: 32};\r\n * \r\n * const n = normaliseByRect(object, frameSize);\r\n * // Yields: {x: 0.5, y: 0.5, width: 0.1, height: 0.1}\r\n * ```\r\n * \r\n * Height and width can be supplied instead of a rectangle too:\r\n * ```js\r\n * const n = normaliseByRect(object, 640, 320);\r\n * ```\r\n * @param rect \r\n * @param normaliseBy \r\n * @returns \r\n */\r\nexport const normaliseByRect = (rect:Rect|RectPositioned, normaliseByOrWidth:Rect|number, height?:number):Rect|RectPositioned => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let width;\r\n  if (height === undefined) {\r\n    if (isRect(normaliseByOrWidth)) {\r\n      height = normaliseByOrWidth.height;\r\n      width = normaliseByOrWidth.width;\r\n    } else {\r\n      throw new Error(`Expects rectangle or width and height parameters for normaliseBy`);\r\n    }\r\n  } else {\r\n    if (typeof normaliseByOrWidth === `number`) {\r\n      width = normaliseByOrWidth;\r\n    } else {\r\n      throw new Error(`Expects rectangle or width and height parameters for normaliseBy`);\r\n    }\r\n  }\r\n\r\n  if (isPositioned(rect)) {\r\n    return Object.freeze({\r\n      x: rect.x / width,\r\n      y: rect.y / height,\r\n      width: rect.width / width,\r\n      height: rect.height / height\r\n    });\r\n  } else {\r\n    return Object.freeze({\r\n      width: rect.width / width,\r\n      height: rect.height / height\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Multiplies `a` by rectangle or width/height. Useful for denormalising a value.\r\n * \r\n * ```js\r\n * // Normalised rectangle of width 50%, height 50%\r\n * const r = {width: 0.5, height: 0.5};\r\n * \r\n * // Map to window:\r\n * const rr = multiply(r, window.innerWidth, window.innerHeight);\r\n * ```\r\n * \r\n * ```js\r\n * // Returns {width: someRect.width * someOtherRect.width ...}\r\n * multiply(someRect, someOtherRect);\r\n * \r\n * // Returns {width: someRect.width * 100, height: someRect.height * 200}\r\n * multiply(someRect, 100, 200);\r\n * ```\r\n * \r\n * Multiplication applies to the first parameter's x/y fields, if present.\r\n */\r\nexport const multiply = (a:RectPositioned|Rect, b:Rect|number, c?:number):RectPositioned|Rect => {\r\n  guard(a, `a`);\r\n  if (isRect(b)) {\r\n    if (isRectPositioned(a)) {\r\n      return {\r\n        ...a,\r\n        x: a.x * b.width,\r\n        y: a.y * b.height,\r\n        width: a.width * b.width,\r\n        height: a.width * b.height\r\n      };\r\n    } else {\r\n      return {\r\n        ...a,\r\n        width: a.width * b.width,\r\n        height: a.width * b.height\r\n      };\r\n    }\r\n  } else {\r\n    if (typeof b !== `number`) throw new Error(`Expected second parameter of type Rect or number. Got ${JSON.stringify(b)}`);\r\n    if (c === undefined) c = b;\r\n\r\n    if (isRectPositioned(a)) {\r\n      return {\r\n        ...a,\r\n        x: a.x * b,\r\n        y: a.y * c,\r\n        width: a.width * b,\r\n        height: a.width * c\r\n      };\r\n    } else {\r\n      return {\r\n        ...a,\r\n        width: a.width * b,\r\n        height: a.width * c\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the center of a rectangle as a {@link Geometry.Points.Point}.\r\n *  If the rectangle lacks a position and `origin` parameter is not provided, 0,0 is used instead.\r\n * \r\n * ```js\r\n * const p = center({x:10, y:20, width:100, height:50});\r\n * const p2 = center({width: 100, height: 50}); // Assumes 0,0 for rect x,y\r\n * ```\r\n * @param rect Rectangle\r\n * @param origin Optional origin. Overrides `rect` position if available. If no position is available 0,0 is used by default.\r\n * @returns \r\n */\r\nexport const center = (rect: RectPositioned|Rect, origin?:Points.Point): Points.Point => {\r\n  guard(rect);\r\n  if (origin === undefined && Points.isPoint(rect)) origin = rect;\r\n  else if (origin === undefined) origin = {x:0, y:0}; // throw new Error(`Unpositioned rect needs origin param`);\r\n\r\n  return Object.freeze({\r\n    x: origin.x + rect.width / 2,\r\n    y: origin.y + rect.height / 2\r\n  });\r\n};\r\n\r\n/**\r\n * Returns the length of each side of the rectangle (top, right, bottom, left)\r\n * @param rect \r\n * @returns \r\n */\r\nexport const lengths = (rect:RectPositioned):readonly number[] => {\r\n  guardPositioned(rect, `rect`);\r\n  return edges(rect).map(l => Lines.length(l));\r\n};\r\n\r\n/**\r\n * Returns four lines based on each corner.\r\n * Lines are given in order: top, right, bottom, left\r\n *\r\n * @param {(RectPositioned|Rect)} rect\r\n * @param {Points.Point} [origin]\r\n * @returns {Lines.Line[]}\r\n */\r\nexport const edges = (rect: RectPositioned|Rect, origin?:Points.Point): readonly Lines.Line[] => Lines.joinPointsToLines(...corners(rect, origin));\r\n\r\n/**\r\n * Returns the perimeter of `rect` (ie. sum of all edges)\r\n * @param rect \r\n * @returns \r\n */\r\nexport const perimeter = (rect:Rect):number => {\r\n  guard(rect);\r\n  return rect.height + rect.height + rect.width + rect.width;\r\n};\r\n\r\n/**\r\n * Returns the area of `rect`\r\n * @param rect \r\n * @returns \r\n */\r\nexport const area = (rect:Rect):number => {\r\n  guard(rect);\r\n  return rect.height*rect.width;\r\n};","import {Bezier as BezierLib} from 'bezier-js';\r\nimport {Paths, Points, Rects, Lines} from './index.js';\r\n\r\nexport type QuadraticBezier = {\r\n  readonly a: Points.Point,\r\n  readonly b: Points.Point,\r\n  readonly quadratic: Points.Point\r\n}\r\n\r\nexport type QuadraticBezierPath = Paths.Path & QuadraticBezier;\r\nexport type CubicBezier = {\r\n  readonly a: Points.Point,\r\n  readonly b: Points.Point,\r\n  readonly cubic1: Points.Point,\r\n  readonly cubic2: Points.Point,\r\n}\r\n\r\nexport type CubicBezierPath = Paths.Path & CubicBezier;\r\n\r\nexport const isQuadraticBezier = (path: Paths.Path | QuadraticBezier | CubicBezier): path is QuadraticBezier => (path as QuadraticBezier).quadratic !== undefined;\r\nexport const isCubicBezier = (path: Paths.Path | CubicBezier | QuadraticBezier): path is CubicBezier => (path as CubicBezier).cubic1 !== undefined && (path as CubicBezier).cubic2 !== undefined;\r\n\r\n/**\r\n * Returns a new quadratic bezier with specified bend amount\r\n *\r\n * @param {QuadraticBezier} b Curve\r\n * @param {number} [bend=0] Bend amount, from -1 to 1\r\n * @returns {QuadraticBezier}\r\n */\r\nexport const quadraticBend = (a:Points.Point, b: Points.Point, bend = 0): QuadraticBezier => quadraticSimple(a, b, bend);\r\n\r\n/**\r\n * Creates a simple quadratic bezier with a specified amount of 'bend'.\r\n * Bend of -1 will pull curve down, 1 will pull curve up. 0 is no curve\r\n * @param {Points.Point} start Start of curve\r\n * @param {Points.Point} end End of curve\r\n * @param {number} [bend=0] Bend amount, -1 to 1\r\n * @returns {QuadraticBezier}\r\n */\r\nexport const quadraticSimple = (start: Points.Point, end: Points.Point, bend = 0): QuadraticBezier => {\r\n  if (isNaN(bend)) throw Error(`bend is NaN`);\r\n  if (bend < -1 || bend > 1) throw Error(`Expects bend range of -1 to 1`);\r\n\r\n  const middle = Lines.interpolate(0.5, start, end);\r\n  // eslint-disable-next-line functional/no-let\r\n  let target = middle;\r\n  if (end.y < start.y) {\r\n    // Upward slope\r\n    target = bend > 0 ? {x: Math.min(start.x, end.x), y: Math.min(start.y, end.y)} :\r\n      {x: Math.max(start.x, end.x), y: Math.max(start.y, end.y)};\r\n  } else {\r\n    // Downward slope\r\n    target = bend > 0 ? {x: Math.max(start.x, end.x), y: Math.min(start.y, end.y)} :\r\n      {x: Math.min(start.x, end.x), y: Math.max(start.y, end.y)};\r\n  }\r\n\r\n  const handle = Lines.interpolate(Math.abs(bend), middle, target,);\r\n  return quadratic(start, end, handle);\r\n};\r\n\r\n/**\r\n * Returns a relative point on a simple quadratic \r\n * @param start Start\r\n * @param end  End\r\n * @param bend Bend (-1 to 1)\r\n * @param amt Amount\r\n * @returns Point\r\n */\r\nexport const computeQuadraticSimple = (start: Points.Point, end: Points.Point, bend: number, amt:number):Points.Point => {\r\n  const q = quadraticSimple(start, end, bend);\r\n  const bzr = new BezierLib(q.a, q.quadratic, q.b);\r\n  return bzr.compute(amt);\r\n};\r\n\r\n//https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\r\nexport const quadraticToSvgString = (start: Points.Point, end: Points.Point, handle: Points.Point): readonly string[] => [`M ${start.x} ${start.y} Q ${handle.x} ${handle.y} ${end.x} ${end.y}`];\r\n\r\nexport const toPath = (cubicOrQuadratic:CubicBezier|QuadraticBezier): CubicBezierPath|QuadraticBezierPath => {\r\n  if (isCubicBezier(cubicOrQuadratic)) {\r\n    return cubicToPath(cubicOrQuadratic);\r\n  } else if (isQuadraticBezier(cubicOrQuadratic)) {\r\n    return quadratictoPath(cubicOrQuadratic);\r\n  } else {\r\n    throw new Error(`Unknown bezier type`);\r\n  }\r\n};\r\n\r\nexport const cubic = (start:Points.Point, end:Points.Point, cubic1:Points.Point, cubic2:Points.Point): CubicBezier => (\r\n  {\r\n    a: Object.freeze(start),\r\n    b: Object.freeze(end),\r\n    cubic1: Object.freeze(cubic1),\r\n    cubic2: Object.freeze(cubic2) \r\n  });\r\n\r\nconst cubicToPath = (cubic:CubicBezier): CubicBezierPath => {\r\n  const {a, cubic1, cubic2, b} = cubic;\r\n\r\n  const bzr = new BezierLib(a, cubic1, cubic2, b);\r\n  return Object.freeze({\r\n    ...cubic,\r\n    length: () => bzr.length(),\r\n    interpolate: (t: number) => bzr.compute(t),\r\n    bbox: () => {\r\n      const {x, y} = bzr.bbox();\r\n      const xSize = x.size;\r\n      const ySize = y.size;\r\n      if (xSize === undefined) throw new Error(`x.size not present on calculated bbox`);\r\n      if (ySize === undefined) throw new Error(`x.size not present on calculated bbox`);\r\n\r\n      return Rects.fromTopLeft({x: x.min, y: y.min}, xSize, ySize);\r\n    },\r\n    toString: () => bzr.toString(),\r\n    toSvgString: () => [`brrup`],\r\n    kind: `bezier/cubic`\r\n  });\r\n};\r\n\r\nexport const quadratic = (start: Points.Point, end: Points.Point, handle: Points.Point): QuadraticBezier => ({\r\n  a: Object.freeze(start),\r\n  b: Object.freeze(end),\r\n  quadratic: Object.freeze(handle)\r\n});\r\n\r\n\r\nconst quadratictoPath = (quadraticBezier:QuadraticBezier): QuadraticBezierPath => {\r\n  const {a, b, quadratic} = quadraticBezier;\r\n  const bzr = new BezierLib(a, quadratic, b);\r\n  return Object.freeze({\r\n    ...quadraticBezier,\r\n    length: () => bzr.length(),\r\n    interpolate: (t: number) => bzr.compute(t),\r\n    bbox: () => {\r\n      const {x, y} = bzr.bbox();\r\n      const xSize = x.size;\r\n      const ySize = y.size;\r\n      if (xSize === undefined) throw new Error(`x.size not present on calculated bbox`);\r\n      if (ySize === undefined) throw new Error(`x.size not present on calculated bbox`);\r\n      return Rects.fromTopLeft({x: x.min, y: y.min}, xSize, ySize);\r\n    },\r\n    toString: () => bzr.toString(),\r\n    toSvgString: () => quadraticToSvgString(a, b, quadratic),\r\n    kind: `bezier/quadratic`\r\n  });\r\n};\r\n\r\n","import { Bezier } from \"./bezier.js\";\n\n// math-inlining.\nconst { abs, cos, sin, acos, atan2, sqrt, pow } = Math;\n\n// cube root function yielding real roots\nfunction crt(v) {\n  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n}\n\n// trig constants\nconst pi = Math.PI,\n  tau = 2 * pi,\n  quart = pi / 2,\n  // float precision significant decimal\n  epsilon = 0.000001,\n  // extremas used in bbox calculation and similar algorithms\n  nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,\n  nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,\n  // a zero coordinate, which is surprisingly useful\n  ZERO = { x: 0, y: 0, z: 0 };\n\n// Bezier utility functions\nconst utils = {\n  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n  Tvalues: [\n    -0.0640568928626056260850430826247450385909,\n    0.0640568928626056260850430826247450385909,\n    -0.1911188674736163091586398207570696318404,\n    0.1911188674736163091586398207570696318404,\n    -0.3150426796961633743867932913198102407864,\n    0.3150426796961633743867932913198102407864,\n    -0.4337935076260451384870842319133497124524,\n    0.4337935076260451384870842319133497124524,\n    -0.5454214713888395356583756172183723700107,\n    0.5454214713888395356583756172183723700107,\n    -0.6480936519369755692524957869107476266696,\n    0.6480936519369755692524957869107476266696,\n    -0.7401241915785543642438281030999784255232,\n    0.7401241915785543642438281030999784255232,\n    -0.8200019859739029219539498726697452080761,\n    0.8200019859739029219539498726697452080761,\n    -0.8864155270044010342131543419821967550873,\n    0.8864155270044010342131543419821967550873,\n    -0.9382745520027327585236490017087214496548,\n    0.9382745520027327585236490017087214496548,\n    -0.9747285559713094981983919930081690617411,\n    0.9747285559713094981983919930081690617411,\n    -0.9951872199970213601799974097007368118745,\n    0.9951872199970213601799974097007368118745,\n  ],\n\n  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n  Cvalues: [\n    0.1279381953467521569740561652246953718517,\n    0.1279381953467521569740561652246953718517,\n    0.1258374563468282961213753825111836887264,\n    0.1258374563468282961213753825111836887264,\n    0.121670472927803391204463153476262425607,\n    0.121670472927803391204463153476262425607,\n    0.1155056680537256013533444839067835598622,\n    0.1155056680537256013533444839067835598622,\n    0.1074442701159656347825773424466062227946,\n    0.1074442701159656347825773424466062227946,\n    0.0976186521041138882698806644642471544279,\n    0.0976186521041138882698806644642471544279,\n    0.086190161531953275917185202983742667185,\n    0.086190161531953275917185202983742667185,\n    0.0733464814110803057340336152531165181193,\n    0.0733464814110803057340336152531165181193,\n    0.0592985849154367807463677585001085845412,\n    0.0592985849154367807463677585001085845412,\n    0.0442774388174198061686027482113382288593,\n    0.0442774388174198061686027482113382288593,\n    0.0285313886289336631813078159518782864491,\n    0.0285313886289336631813078159518782864491,\n    0.0123412297999871995468056670700372915759,\n    0.0123412297999871995468056670700372915759,\n  ],\n\n  arcfn: function (t, derivativeFn) {\n    const d = derivativeFn(t);\n    let l = d.x * d.x + d.y * d.y;\n    if (typeof d.z !== \"undefined\") {\n      l += d.z * d.z;\n    }\n    return sqrt(l);\n  },\n\n  compute: function (t, points, _3d) {\n    // shortcuts\n    if (t === 0) {\n      points[0].t = 0;\n      return points[0];\n    }\n\n    const order = points.length - 1;\n\n    if (t === 1) {\n      points[order].t = 1;\n      return points[order];\n    }\n\n    const mt = 1 - t;\n    let p = points;\n\n    // constant?\n    if (order === 0) {\n      points[0].t = t;\n      return points[0];\n    }\n\n    // linear?\n    if (order === 1) {\n      const ret = {\n        x: mt * p[0].x + t * p[1].x,\n        y: mt * p[0].y + t * p[1].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = mt * p[0].z + t * p[1].z;\n      }\n      return ret;\n    }\n\n    // quadratic/cubic curve?\n    if (order < 4) {\n      let mt2 = mt * mt,\n        t2 = t * t,\n        a,\n        b,\n        c,\n        d = 0;\n      if (order === 2) {\n        p = [p[0], p[1], p[2], ZERO];\n        a = mt2;\n        b = mt * t * 2;\n        c = t2;\n      } else if (order === 3) {\n        a = mt2 * mt;\n        b = mt2 * t * 3;\n        c = mt * t2 * 3;\n        d = t * t2;\n      }\n      const ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n      }\n      return ret;\n    }\n\n    // higher order curves: use de Casteljau's computation\n    const dCpts = JSON.parse(JSON.stringify(points));\n    while (dCpts.length > 1) {\n      for (let i = 0; i < dCpts.length - 1; i++) {\n        dCpts[i] = {\n          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t,\n        };\n        if (typeof dCpts[i].z !== \"undefined\") {\n          dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n        }\n      }\n      dCpts.splice(dCpts.length - 1, 1);\n    }\n    dCpts[0].t = t;\n    return dCpts[0];\n  },\n\n  computeWithRatios: function (t, points, ratios, _3d) {\n    const mt = 1 - t,\n      r = ratios,\n      p = points;\n\n    let f1 = r[0],\n      f2 = r[1],\n      f3 = r[2],\n      f4 = r[3],\n      d;\n\n    // spec for linear\n    f1 *= mt;\n    f2 *= t;\n\n    if (p.length === 2) {\n      d = f1 + f2;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to quadratic\n    f1 *= mt;\n    f2 *= 2 * mt;\n    f3 *= t * t;\n\n    if (p.length === 3) {\n      d = f1 + f2 + f3;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to cubic\n    f1 *= mt;\n    f2 *= 1.5 * mt;\n    f3 *= 3 * mt;\n    f4 *= t * t * t;\n\n    if (p.length === 4) {\n      d = f1 + f2 + f3 + f4;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,\n        z: !_3d\n          ? false\n          : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d,\n        t: t,\n      };\n    }\n  },\n\n  derive: function (points, _3d) {\n    const dpoints = [];\n    for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n      const list = [];\n      for (let j = 0, dpt; j < c; j++) {\n        dpt = {\n          x: c * (p[j + 1].x - p[j].x),\n          y: c * (p[j + 1].y - p[j].y),\n        };\n        if (_3d) {\n          dpt.z = c * (p[j + 1].z - p[j].z);\n        }\n        list.push(dpt);\n      }\n      dpoints.push(list);\n      p = list;\n    }\n    return dpoints;\n  },\n\n  between: function (v, m, M) {\n    return (\n      (m <= v && v <= M) ||\n      utils.approximately(v, m) ||\n      utils.approximately(v, M)\n    );\n  },\n\n  approximately: function (a, b, precision) {\n    return abs(a - b) <= (precision || epsilon);\n  },\n\n  length: function (derivativeFn) {\n    const z = 0.5,\n      len = utils.Tvalues.length;\n\n    let sum = 0;\n\n    for (let i = 0, t; i < len; i++) {\n      t = z * utils.Tvalues[i] + z;\n      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n    }\n    return z * sum;\n  },\n\n  map: function (v, ds, de, ts, te) {\n    const d1 = de - ds,\n      d2 = te - ts,\n      v2 = v - ds,\n      r = v2 / d1;\n    return ts + d2 * r;\n  },\n\n  lerp: function (r, v1, v2) {\n    const ret = {\n      x: v1.x + r * (v2.x - v1.x),\n      y: v1.y + r * (v2.y - v1.y),\n    };\n    if (v1.z !== undefined && v2.z !== undefined) {\n      ret.z = v1.z + r * (v2.z - v1.z);\n    }\n    return ret;\n  },\n\n  pointToString: function (p) {\n    let s = p.x + \"/\" + p.y;\n    if (typeof p.z !== \"undefined\") {\n      s += \"/\" + p.z;\n    }\n    return s;\n  },\n\n  pointsToString: function (points) {\n    return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n  },\n\n  copy: function (obj) {\n    return JSON.parse(JSON.stringify(obj));\n  },\n\n  angle: function (o, v1, v2) {\n    const dx1 = v1.x - o.x,\n      dy1 = v1.y - o.y,\n      dx2 = v2.x - o.x,\n      dy2 = v2.y - o.y,\n      cross = dx1 * dy2 - dy1 * dx2,\n      dot = dx1 * dx2 + dy1 * dy2;\n    return atan2(cross, dot);\n  },\n\n  // round as string, to avoid rounding errors\n  round: function (v, d) {\n    const s = \"\" + v;\n    const pos = s.indexOf(\".\");\n    return parseFloat(s.substring(0, pos + 1 + d));\n  },\n\n  dist: function (p1, p2) {\n    const dx = p1.x - p2.x,\n      dy = p1.y - p2.y;\n    return sqrt(dx * dx + dy * dy);\n  },\n\n  closest: function (LUT, point) {\n    let mdist = pow(2, 63),\n      mpos,\n      d;\n    LUT.forEach(function (p, idx) {\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        mpos = idx;\n      }\n    });\n    return { mdist: mdist, mpos: mpos };\n  },\n\n  abcratio: function (t, n) {\n    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const bottom = pow(t, n) + pow(1 - t, n),\n      top = bottom - 1;\n    return abs(top / bottom);\n  },\n\n  projectionratio: function (t, n) {\n    // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const top = pow(1 - t, n),\n      bottom = pow(t, n) + top;\n    return top / bottom;\n  },\n\n  lli8: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    const nx =\n        (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (d == 0) {\n      return false;\n    }\n    return { x: nx / d, y: ny / d };\n  },\n\n  lli4: function (p1, p2, p3, p4) {\n    const x1 = p1.x,\n      y1 = p1.y,\n      x2 = p2.x,\n      y2 = p2.y,\n      x3 = p3.x,\n      y3 = p3.y,\n      x4 = p4.x,\n      y4 = p4.y;\n    return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);\n  },\n\n  lli: function (v1, v2) {\n    return utils.lli4(v1, v1.c, v2, v2.c);\n  },\n\n  makeline: function (p1, p2) {\n    return new Bezier(\n      p1.x,\n      p1.y,\n      (p1.x + p2.x) / 2,\n      (p1.y + p2.y) / 2,\n      p2.x,\n      p2.y\n    );\n  },\n\n  findbbox: function (sections) {\n    let mx = nMax,\n      my = nMax,\n      MX = nMin,\n      MY = nMin;\n    sections.forEach(function (s) {\n      const bbox = s.bbox();\n      if (mx > bbox.x.min) mx = bbox.x.min;\n      if (my > bbox.y.min) my = bbox.y.min;\n      if (MX < bbox.x.max) MX = bbox.x.max;\n      if (MY < bbox.y.max) MY = bbox.y.max;\n    });\n    return {\n      x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },\n      y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my },\n    };\n  },\n\n  shapeintersections: function (\n    s1,\n    bbox1,\n    s2,\n    bbox2,\n    curveIntersectionThreshold\n  ) {\n    if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n    const intersections = [];\n    const a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n    const a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n    a1.forEach(function (l1) {\n      if (l1.virtual) return;\n      a2.forEach(function (l2) {\n        if (l2.virtual) return;\n        const iss = l1.intersects(l2, curveIntersectionThreshold);\n        if (iss.length > 0) {\n          iss.c1 = l1;\n          iss.c2 = l2;\n          iss.s1 = s1;\n          iss.s2 = s2;\n          intersections.push(iss);\n        }\n      });\n    });\n    return intersections;\n  },\n\n  makeshape: function (forward, back, curveIntersectionThreshold) {\n    const bpl = back.points.length;\n    const fpl = forward.points.length;\n    const start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n    const end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n    const shape = {\n      startcap: start,\n      forward: forward,\n      back: back,\n      endcap: end,\n      bbox: utils.findbbox([start, forward, back, end]),\n    };\n    shape.intersections = function (s2) {\n      return utils.shapeintersections(\n        shape,\n        shape.bbox,\n        s2,\n        s2.bbox,\n        curveIntersectionThreshold\n      );\n    };\n    return shape;\n  },\n\n  getminmax: function (curve, d, list) {\n    if (!list) return { min: 0, max: 0 };\n    let min = nMax,\n      max = nMin,\n      t,\n      c;\n    if (list.indexOf(0) === -1) {\n      list = [0].concat(list);\n    }\n    if (list.indexOf(1) === -1) {\n      list.push(1);\n    }\n    for (let i = 0, len = list.length; i < len; i++) {\n      t = list[i];\n      c = curve.get(t);\n      if (c[d] < min) {\n        min = c[d];\n      }\n      if (c[d] > max) {\n        max = c[d];\n      }\n    }\n    return { min: min, mid: (min + max) / 2, max: max, size: max - min };\n  },\n\n  align: function (points, line) {\n    const tx = line.p1.x,\n      ty = line.p1.y,\n      a = -atan2(line.p2.y - ty, line.p2.x - tx),\n      d = function (v) {\n        return {\n          x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n          y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a),\n        };\n      };\n    return points.map(d);\n  },\n\n  roots: function (points, line) {\n    line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };\n\n    const order = points.length - 1;\n    const aligned = utils.align(points, line);\n    const reduce = function (t) {\n      return 0 <= t && t <= 1;\n    };\n\n    if (order === 2) {\n      const a = aligned[0].y,\n        b = aligned[1].y,\n        c = aligned[2].y,\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2].filter(reduce);\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);\n      }\n      return [];\n    }\n\n    // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n    const pa = aligned[0].y,\n      pb = aligned[1].y,\n      pc = aligned[2].y,\n      pd = aligned[3].y;\n\n    let d = -pa + 3 * pb - 3 * pc + pd,\n      a = 3 * pa - 6 * pb + 3 * pc,\n      b = -3 * pa + 3 * pb,\n      c = pa;\n\n    if (utils.approximately(d, 0)) {\n      // this is not a cubic curve.\n      if (utils.approximately(a, 0)) {\n        // in fact, this is not a quadratic curve either.\n        if (utils.approximately(b, 0)) {\n          // in fact in fact, there are no solutions.\n          return [];\n        }\n        // linear solution:\n        return [-c / b].filter(reduce);\n      }\n      // quadratic solution:\n      const q = sqrt(b * b - 4 * a * c),\n        a2 = 2 * a;\n      return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n    }\n\n    // at this point, we know we need a cubic solution:\n\n    a /= d;\n    b /= d;\n    c /= d;\n\n    const p = (3 * b - a * a) / 3,\n      p3 = p / 3,\n      q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n      q2 = q / 2,\n      discriminant = q2 * q2 + p3 * p3 * p3;\n\n    let u1, v1, x1, x2, x3;\n    if (discriminant < 0) {\n      const mp3 = -p / 3,\n        mp33 = mp3 * mp3 * mp3,\n        r = sqrt(mp33),\n        t = -q / (2 * r),\n        cosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n        phi = acos(cosphi),\n        crtr = crt(r),\n        t1 = 2 * crtr;\n      x1 = t1 * cos(phi / 3) - a / 3;\n      x2 = t1 * cos((phi + tau) / 3) - a / 3;\n      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n      return [x1, x2, x3].filter(reduce);\n    } else if (discriminant === 0) {\n      u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n      x1 = 2 * u1 - a / 3;\n      x2 = -u1 - a / 3;\n      return [x1, x2].filter(reduce);\n    } else {\n      const sd = sqrt(discriminant);\n      u1 = crt(-q2 + sd);\n      v1 = crt(q2 + sd);\n      return [u1 - v1 - a / 3].filter(reduce);\n    }\n  },\n\n  droots: function (p) {\n    // quadratic roots are easy\n    if (p.length === 3) {\n      const a = p[0],\n        b = p[1],\n        c = p[2],\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2];\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * (b - c))];\n      }\n      return [];\n    }\n\n    // linear roots are even easier\n    if (p.length === 2) {\n      const a = p[0],\n        b = p[1];\n      if (a !== b) {\n        return [a / (a - b)];\n      }\n      return [];\n    }\n\n    return [];\n  },\n\n  curvature: function (t, d1, d2, _3d, kOnly) {\n    let num,\n      dnm,\n      adk,\n      dk,\n      k = 0,\n      r = 0;\n\n    //\n    // We're using the following formula for curvature:\n    //\n    //              x'y\" - y'x\"\n    //   k(t) = ------------------\n    //           (x'² + y'²)^(3/2)\n    //\n    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n    //\n    // With it corresponding 3D counterpart:\n    //\n    //          sqrt( (y'z\" - y\"z')² + (z'x\" - z\"x')² + (x'y\" - x\"y')²)\n    //   k(t) = -------------------------------------------------------\n    //                     (x'² + y'² + z'²)^(3/2)\n    //\n\n    const d = utils.compute(t, d1);\n    const dd = utils.compute(t, d2);\n    const qdsum = d.x * d.x + d.y * d.y;\n\n    if (_3d) {\n      num = sqrt(\n        pow(d.y * dd.z - dd.y * d.z, 2) +\n          pow(d.z * dd.x - dd.z * d.x, 2) +\n          pow(d.x * dd.y - dd.x * d.y, 2)\n      );\n      dnm = pow(qdsum + d.z * d.z, 3 / 2);\n    } else {\n      num = d.x * dd.y - d.y * dd.x;\n      dnm = pow(qdsum, 3 / 2);\n    }\n\n    if (num === 0 || dnm === 0) {\n      return { k: 0, r: 0 };\n    }\n\n    k = num / dnm;\n    r = dnm / num;\n\n    // We're also computing the derivative of kappa, because\n    // there is value in knowing the rate of change for the\n    // curvature along the curve. And we're just going to\n    // ballpark it based on an epsilon.\n    if (!kOnly) {\n      // compute k'(t) based on the interval before, and after it,\n      // to at least try to not introduce forward/backward pass bias.\n      const pk = utils.curvature(t - 0.001, d1, d2, _3d, true).k;\n      const nk = utils.curvature(t + 0.001, d1, d2, _3d, true).k;\n      dk = (nk - k + (k - pk)) / 2;\n      adk = (abs(nk - k) + abs(k - pk)) / 2;\n    }\n\n    return { k: k, r: r, dk: dk, adk: adk };\n  },\n\n  inflections: function (points) {\n    if (points.length < 4) return [];\n\n    // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n    const p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n      a = p[2].x * p[1].y,\n      b = p[3].x * p[1].y,\n      c = p[1].x * p[2].y,\n      d = p[3].x * p[2].y,\n      v1 = 18 * (-3 * a + 2 * b + 3 * c - d),\n      v2 = 18 * (3 * a - b - 3 * c),\n      v3 = 18 * (c - a);\n\n    if (utils.approximately(v1, 0)) {\n      if (!utils.approximately(v2, 0)) {\n        let t = -v3 / v2;\n        if (0 <= t && t <= 1) return [t];\n      }\n      return [];\n    }\n\n    const d2 = 2 * v1;\n\n    if (utils.approximately(d2, 0)) return [];\n\n    const trm = v2 * v2 - 4 * v1 * v3;\n\n    if (trm < 0) return [];\n\n    const sq = Math.sqrt(trm);\n\n    return [(sq - v2) / d2, -(v2 + sq) / d2].filter(function (r) {\n      return 0 <= r && r <= 1;\n    });\n  },\n\n  bboxoverlap: function (b1, b2) {\n    const dims = [\"x\", \"y\"],\n      len = dims.length;\n\n    for (let i = 0, dim, l, t, d; i < len; i++) {\n      dim = dims[i];\n      l = b1[dim].mid;\n      t = b2[dim].mid;\n      d = (b1[dim].size + b2[dim].size) / 2;\n      if (abs(l - t) >= d) return false;\n    }\n    return true;\n  },\n\n  expandbox: function (bbox, _bbox) {\n    if (_bbox.x.min < bbox.x.min) {\n      bbox.x.min = _bbox.x.min;\n    }\n    if (_bbox.y.min < bbox.y.min) {\n      bbox.y.min = _bbox.y.min;\n    }\n    if (_bbox.z && _bbox.z.min < bbox.z.min) {\n      bbox.z.min = _bbox.z.min;\n    }\n    if (_bbox.x.max > bbox.x.max) {\n      bbox.x.max = _bbox.x.max;\n    }\n    if (_bbox.y.max > bbox.y.max) {\n      bbox.y.max = _bbox.y.max;\n    }\n    if (_bbox.z && _bbox.z.max > bbox.z.max) {\n      bbox.z.max = _bbox.z.max;\n    }\n    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n    if (bbox.z) {\n      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n    }\n    bbox.x.size = bbox.x.max - bbox.x.min;\n    bbox.y.size = bbox.y.max - bbox.y.min;\n    if (bbox.z) {\n      bbox.z.size = bbox.z.max - bbox.z.min;\n    }\n  },\n\n  pairiteration: function (c1, c2, curveIntersectionThreshold) {\n    const c1b = c1.bbox(),\n      c2b = c2.bbox(),\n      r = 100000,\n      threshold = curveIntersectionThreshold || 0.5;\n\n    if (\n      c1b.x.size + c1b.y.size < threshold &&\n      c2b.x.size + c2b.y.size < threshold\n    ) {\n      return [\n        (((r * (c1._t1 + c1._t2)) / 2) | 0) / r +\n          \"/\" +\n          (((r * (c2._t1 + c2._t2)) / 2) | 0) / r,\n      ];\n    }\n\n    let cc1 = c1.split(0.5),\n      cc2 = c2.split(0.5),\n      pairs = [\n        { left: cc1.left, right: cc2.left },\n        { left: cc1.left, right: cc2.right },\n        { left: cc1.right, right: cc2.right },\n        { left: cc1.right, right: cc2.left },\n      ];\n\n    pairs = pairs.filter(function (pair) {\n      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n    });\n\n    let results = [];\n\n    if (pairs.length === 0) return results;\n\n    pairs.forEach(function (pair) {\n      results = results.concat(\n        utils.pairiteration(pair.left, pair.right, threshold)\n      );\n    });\n\n    results = results.filter(function (v, i) {\n      return results.indexOf(v) === i;\n    });\n\n    return results;\n  },\n\n  getccenter: function (p1, p2, p3) {\n    const dx1 = p2.x - p1.x,\n      dy1 = p2.y - p1.y,\n      dx2 = p3.x - p2.x,\n      dy2 = p3.y - p2.y,\n      dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n      dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n      dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n      dy2p = dx2 * sin(quart) + dy2 * cos(quart),\n      // chord midpoints\n      mx1 = (p1.x + p2.x) / 2,\n      my1 = (p1.y + p2.y) / 2,\n      mx2 = (p2.x + p3.x) / 2,\n      my2 = (p2.y + p3.y) / 2,\n      // midpoint offsets\n      mx1n = mx1 + dx1p,\n      my1n = my1 + dy1p,\n      mx2n = mx2 + dx2p,\n      my2n = my2 + dy2p,\n      // intersection of these lines:\n      arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),\n      r = utils.dist(arc, p1);\n\n    // arc start/end values, over mid point:\n    let s = atan2(p1.y - arc.y, p1.x - arc.x),\n      m = atan2(p2.y - arc.y, p2.x - arc.x),\n      e = atan2(p3.y - arc.y, p3.x - arc.x),\n      _;\n\n    // determine arc direction (cw/ccw correction)\n    if (s < e) {\n      // if s<m<e, arc(s, e)\n      // if m<s<e, arc(e, s + tau)\n      // if s<e<m, arc(e, s + tau)\n      if (s > m || m > e) {\n        s += tau;\n      }\n      if (s > e) {\n        _ = e;\n        e = s;\n        s = _;\n      }\n    } else {\n      // if e<m<s, arc(e, s)\n      // if m<e<s, arc(s, e + tau)\n      // if e<s<m, arc(s, e + tau)\n      if (e < m && m < s) {\n        _ = e;\n        e = s;\n        s = _;\n      } else {\n        e += tau;\n      }\n    }\n    // assign and done.\n    arc.s = s;\n    arc.e = e;\n    arc.r = r;\n    return arc;\n  },\n\n  numberSort: function (a, b) {\n    return a - b;\n  },\n};\n\nexport { utils };\n","import { utils } from \"./utils.js\";\n\n/**\n * Poly Bezier\n * @param {[type]} curves [description]\n */\nclass PolyBezier {\n  constructor(curves) {\n    this.curves = [];\n    this._3d = false;\n    if (!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return (\n      \"[\" +\n      this.curves\n        .map(function (curve) {\n          return utils.pointsToString(curve.points);\n        })\n        .join(\", \") +\n      \"]\"\n    );\n  }\n\n  addCurve(curve) {\n    this.curves.push(curve);\n    this._3d = this._3d || curve._3d;\n  }\n\n  length() {\n    return this.curves\n      .map(function (v) {\n        return v.length();\n      })\n      .reduce(function (a, b) {\n        return a + b;\n      });\n  }\n\n  curve(idx) {\n    return this.curves[idx];\n  }\n\n  bbox() {\n    const c = this.curves;\n    var bbox = c[0].bbox();\n    for (var i = 1; i < c.length; i++) {\n      utils.expandbox(bbox, c[i].bbox());\n    }\n    return bbox;\n  }\n\n  offset(d) {\n    const offset = [];\n    this.curves.forEach(function (v) {\n      offset.push(...v.offset(d));\n    });\n    return new PolyBezier(offset);\n  }\n}\n\nexport { PolyBezier };\n","/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n\nimport { utils } from \"./utils.js\";\nimport { PolyBezier } from \"./poly-bezier.js\";\n\n// math-inlining.\nconst { abs, min, max, cos, sin, acos, sqrt } = Math;\nconst pi = Math.PI;\n// a zero coordinate, which is surprisingly useful\nconst ZERO = { x: 0, y: 0, z: 0 };\n\n/**\n * Bezier curve constructor.\n *\n * ...docs pending...\n */\nclass Bezier {\n  constructor(coords) {\n    let args =\n      coords && coords.forEach ? coords : Array.from(arguments).slice();\n    let coordlen = false;\n\n    if (typeof args[0] === \"object\") {\n      coordlen = args.length;\n      const newargs = [];\n      args.forEach(function (point) {\n        [\"x\", \"y\", \"z\"].forEach(function (d) {\n          if (typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n\n    let higher = false;\n    const len = args.length;\n\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n      }\n    }\n\n    const _3d = (this._3d =\n      (!higher && (len === 9 || len === 12)) ||\n      (coords && coords[0] && typeof coords[0].z !== \"undefined\"));\n\n    const points = (this.points = []);\n    for (let idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      var point = {\n        x: args[idx],\n        y: args[idx + 1],\n      };\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n      points.push(point);\n    }\n    const order = (this.order = points.length - 1);\n\n    const dims = (this.dims = [\"x\", \"y\"]);\n    if (_3d) dims.push(\"z\");\n    this.dimlen = dims.length;\n\n    // is this curve, practically speaking, a straight line?\n    const aligned = utils.align(points, { p1: points[0], p2: points[order] });\n    const baselength = utils.dist(points[0], points[order]);\n    this._linear = aligned.reduce((t, p) => t + abs(p.y), 0) < baselength / 50;\n\n    this._lut = [];\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  }\n\n  static quadraticFromPoints(p1, p2, p3, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    // shortcuts, although they're really dumb\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    }\n    // real fitting.\n    const abc = Bezier.getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  }\n\n  static cubicFromPoints(S, B, E, t, d1) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    const abc = Bezier.getABC(3, S, B, E, t);\n    if (typeof d1 === \"undefined\") {\n      d1 = utils.dist(B, abc.C);\n    }\n    const d2 = (d1 * (1 - t)) / t;\n\n    const selen = utils.dist(S, E),\n      lx = (E.x - S.x) / selen,\n      ly = (E.y - S.y) / selen,\n      bx1 = d1 * lx,\n      by1 = d1 * ly,\n      bx2 = d2 * lx,\n      by2 = d2 * ly;\n    // derivation of new hull coordinates\n    const e1 = { x: B.x - bx1, y: B.y - by1 },\n      e2 = { x: B.x + bx2, y: B.y + by2 },\n      A = abc.A,\n      v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) },\n      v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t },\n      nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t },\n      nc2 = {\n        x: E.x + (v2.x - E.x) / (1 - t),\n        y: E.y + (v2.y - E.y) / (1 - t),\n      };\n    // ...done\n    return new Bezier(S, nc1, nc2, E);\n  }\n\n  static getUtils() {\n    return utils;\n  }\n\n  getUtils() {\n    return Bezier.getUtils();\n  }\n\n  static get PolyBezier() {\n    return PolyBezier;\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return utils.pointsToString(this.points);\n  }\n\n  toSVG() {\n    if (this._3d) return false;\n    const p = this.points,\n      x = p[0].x,\n      y = p[0].y,\n      s = [\"M\", x, y, this.order === 2 ? \"Q\" : \"C\"];\n    for (let i = 1, last = p.length; i < last; i++) {\n      s.push(p[i].x);\n      s.push(p[i].y);\n    }\n    return s.join(\" \");\n  }\n\n  setRatios(ratios) {\n    if (ratios.length !== this.points.length) {\n      throw new Error(\"incorrect number of ratio values\");\n    }\n    this.ratios = ratios;\n    this._lut = []; //  invalidate any precomputed LUT\n  }\n\n  verify() {\n    const print = this.coordDigest();\n    if (print !== this._print) {\n      this._print = print;\n      this.update();\n    }\n  }\n\n  coordDigest() {\n    return this.points\n      .map(function (c, pos) {\n        return \"\" + pos + c.x + c.y + (c.z ? c.z : 0);\n      })\n      .join(\"\");\n  }\n\n  update() {\n    // invalidate any precomputed LUT\n    this._lut = [];\n    this.dpoints = utils.derive(this.points, this._3d);\n    this.computedirection();\n  }\n\n  computedirection() {\n    const points = this.points;\n    const angle = utils.angle(points[0], points[this.order], points[1]);\n    this.clockwise = angle > 0;\n  }\n\n  length() {\n    return utils.length(this.derivative.bind(this));\n  }\n\n  static getABC(order = 2, S, B, E, t = 0.5) {\n    const u = utils.projectionratio(t, order),\n      um = 1 - u,\n      C = {\n        x: u * S.x + um * E.x,\n        y: u * S.y + um * E.y,\n      },\n      s = utils.abcratio(t, order),\n      A = {\n        x: B.x + (B.x - C.x) / s,\n        y: B.y + (B.y - C.y) / s,\n      };\n    return { A, B, C, S, E };\n  }\n\n  getABC(t, B) {\n    B = B || this.get(t);\n    let S = this.points[0];\n    let E = this.points[this.order];\n    return Bezier.getABC(this.order, S, B, E, t);\n  }\n\n  getLUT(steps) {\n    this.verify();\n    steps = steps || 100;\n    if (this._lut.length === steps) {\n      return this._lut;\n    }\n    this._lut = [];\n    // n steps means n+1 points\n    steps++;\n    this._lut = [];\n    for (let i = 0, p, t; i < steps; i++) {\n      t = i / (steps - 1);\n      p = this.compute(t);\n      p.t = t;\n      this._lut.push(p);\n    }\n    return this._lut;\n  }\n\n  on(point, error) {\n    error = error || 5;\n    const lut = this.getLUT(),\n      hits = [];\n    for (let i = 0, c, t = 0; i < lut.length; i++) {\n      c = lut[i];\n      if (utils.dist(c, point) < error) {\n        hits.push(c);\n        t += i / lut.length;\n      }\n    }\n    if (!hits.length) return false;\n    return (t /= hits.length);\n  }\n\n  project(point) {\n    // step 1: coarse check\n    const LUT = this.getLUT(),\n      l = LUT.length - 1,\n      closest = utils.closest(LUT, point),\n      mpos = closest.mpos,\n      t1 = (mpos - 1) / l,\n      t2 = (mpos + 1) / l,\n      step = 0.1 / l;\n\n    // step 2: fine check\n    let mdist = closest.mdist,\n      t = t1,\n      ft = t,\n      p;\n    mdist += 1;\n    for (let d; t < t2 + step; t += step) {\n      p = this.compute(t);\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        ft = t;\n      }\n    }\n    ft = ft < 0 ? 0 : ft > 1 ? 1 : ft;\n    p = this.compute(ft);\n    p.t = ft;\n    p.d = mdist;\n    return p;\n  }\n\n  get(t) {\n    return this.compute(t);\n  }\n\n  point(idx) {\n    return this.points[idx];\n  }\n\n  compute(t) {\n    if (this.ratios) {\n      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n    }\n    return utils.compute(t, this.points, this._3d, this.ratios);\n  }\n\n  raise() {\n    const p = this.points,\n      np = [p[0]],\n      k = p.length;\n    for (let i = 1, pi, pim; i < k; i++) {\n      pi = p[i];\n      pim = p[i - 1];\n      np[i] = {\n        x: ((k - i) / k) * pi.x + (i / k) * pim.x,\n        y: ((k - i) / k) * pi.y + (i / k) * pim.y,\n      };\n    }\n    np[k] = p[k - 1];\n    return new Bezier(np);\n  }\n\n  derivative(t) {\n    return utils.compute(t, this.dpoints[0], this._3d);\n  }\n\n  dderivative(t) {\n    return utils.compute(t, this.dpoints[1], this._3d);\n  }\n\n  align() {\n    let p = this.points;\n    return new Bezier(utils.align(p, { p1: p[0], p2: p[p.length - 1] }));\n  }\n\n  curvature(t) {\n    return utils.curvature(t, this.dpoints[0], this.dpoints[1], this._3d);\n  }\n\n  inflections() {\n    return utils.inflections(this.points);\n  }\n\n  normal(t) {\n    return this._3d ? this.__normal3(t) : this.__normal2(t);\n  }\n\n  __normal2(t) {\n    const d = this.derivative(t);\n    const q = sqrt(d.x * d.x + d.y * d.y);\n    return { t, x: -d.y / q, y: d.x / q };\n  }\n\n  __normal3(t) {\n    // see http://stackoverflow.com/questions/25453159\n    const r1 = this.derivative(t),\n      r2 = this.derivative(t + 0.01),\n      q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),\n      q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n    r1.x /= q1;\n    r1.y /= q1;\n    r1.z /= q1;\n    r2.x /= q2;\n    r2.y /= q2;\n    r2.z /= q2;\n    // cross product\n    const c = {\n      x: r2.y * r1.z - r2.z * r1.y,\n      y: r2.z * r1.x - r2.x * r1.z,\n      z: r2.x * r1.y - r2.y * r1.x,\n    };\n    const m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);\n    c.x /= m;\n    c.y /= m;\n    c.z /= m;\n    // rotation matrix\n    const R = [\n      c.x * c.x,\n      c.x * c.y - c.z,\n      c.x * c.z + c.y,\n      c.x * c.y + c.z,\n      c.y * c.y,\n      c.y * c.z - c.x,\n      c.x * c.z - c.y,\n      c.y * c.z + c.x,\n      c.z * c.z,\n    ];\n    // normal vector:\n    const n = {\n      t,\n      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z,\n    };\n    return n;\n  }\n\n  hull(t) {\n    let p = this.points,\n      _p = [],\n      q = [],\n      idx = 0;\n    q[idx++] = p[0];\n    q[idx++] = p[1];\n    q[idx++] = p[2];\n    if (this.order === 3) {\n      q[idx++] = p[3];\n    }\n    // we lerp between all points at each iteration, until we have 1 point left.\n    while (p.length > 1) {\n      _p = [];\n      for (let i = 0, pt, l = p.length - 1; i < l; i++) {\n        pt = utils.lerp(t, p[i], p[i + 1]);\n        q[idx++] = pt;\n        _p.push(pt);\n      }\n      p = _p;\n    }\n    return q;\n  }\n\n  split(t1, t2) {\n    // shortcuts\n    if (t1 === 0 && !!t2) {\n      return this.split(t2).left;\n    }\n    if (t2 === 1) {\n      return this.split(t1).right;\n    }\n\n    // no shortcut: use \"de Casteljau\" iteration.\n    const q = this.hull(t1);\n    const result = {\n      left:\n        this.order === 2\n          ? new Bezier([q[0], q[3], q[5]])\n          : new Bezier([q[0], q[4], q[7], q[9]]),\n      right:\n        this.order === 2\n          ? new Bezier([q[5], q[4], q[2]])\n          : new Bezier([q[9], q[8], q[6], q[3]]),\n      span: q,\n    };\n\n    // make sure we bind _t1/_t2 information!\n    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);\n\n    // if we have no t2, we're done\n    if (!t2) {\n      return result;\n    }\n\n    // if we have a t2, split again:\n    t2 = utils.map(t2, t1, 1, 0, 1);\n    return result.right.split(t2).left;\n  }\n\n  extrema() {\n    const result = {};\n    let roots = [];\n\n    this.dims.forEach(\n      function (dim) {\n        let mfn = function (v) {\n          return v[dim];\n        };\n        let p = this.dpoints[0].map(mfn);\n        result[dim] = utils.droots(p);\n        if (this.order === 3) {\n          p = this.dpoints[1].map(mfn);\n          result[dim] = result[dim].concat(utils.droots(p));\n        }\n        result[dim] = result[dim].filter(function (t) {\n          return t >= 0 && t <= 1;\n        });\n        roots = roots.concat(result[dim].sort(utils.numberSort));\n      }.bind(this)\n    );\n\n    result.values = roots.sort(utils.numberSort).filter(function (v, idx) {\n      return roots.indexOf(v) === idx;\n    });\n\n    return result;\n  }\n\n  bbox() {\n    const extrema = this.extrema(),\n      result = {};\n    this.dims.forEach(\n      function (d) {\n        result[d] = utils.getminmax(this, d, extrema[d]);\n      }.bind(this)\n    );\n    return result;\n  }\n\n  overlaps(curve) {\n    const lbbox = this.bbox(),\n      tbbox = curve.bbox();\n    return utils.bboxoverlap(lbbox, tbbox);\n  }\n\n  offset(t, d) {\n    if (typeof d !== \"undefined\") {\n      const c = this.get(t),\n        n = this.normal(t);\n      const ret = {\n        c: c,\n        n: n,\n        x: c.x + n.x * d,\n        y: c.y + n.y * d,\n      };\n      if (this._3d) {\n        ret.z = c.z + n.z * d;\n      }\n      return ret;\n    }\n    if (this._linear) {\n      const nv = this.normal(0),\n        coords = this.points.map(function (p) {\n          const ret = {\n            x: p.x + t * nv.x,\n            y: p.y + t * nv.y,\n          };\n          if (p.z && nv.z) {\n            ret.z = p.z + t * nv.z;\n          }\n          return ret;\n        });\n      return [new Bezier(coords)];\n    }\n    return this.reduce().map(function (s) {\n      if (s._linear) {\n        return s.offset(t)[0];\n      }\n      return s.scale(t);\n    });\n  }\n\n  simple() {\n    if (this.order === 3) {\n      const a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n      const a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n      if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;\n    }\n    const n1 = this.normal(0);\n    const n2 = this.normal(1);\n    let s = n1.x * n2.x + n1.y * n2.y;\n    if (this._3d) {\n      s += n1.z * n2.z;\n    }\n    return abs(acos(s)) < pi / 3;\n  }\n\n  reduce() {\n    // TODO: examine these var types in more detail...\n    let i,\n      t1 = 0,\n      t2 = 0,\n      step = 0.01,\n      segment,\n      pass1 = [],\n      pass2 = [];\n    // first pass: split on extrema\n    let extrema = this.extrema().values;\n    if (extrema.indexOf(0) === -1) {\n      extrema = [0].concat(extrema);\n    }\n    if (extrema.indexOf(1) === -1) {\n      extrema.push(1);\n    }\n\n    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n      t2 = extrema[i];\n      segment = this.split(t1, t2);\n      segment._t1 = t1;\n      segment._t2 = t2;\n      pass1.push(segment);\n      t1 = t2;\n    }\n\n    // second pass: further reduce these segments to simple segments\n    pass1.forEach(function (p1) {\n      t1 = 0;\n      t2 = 0;\n      while (t2 <= 1) {\n        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n          segment = p1.split(t1, t2);\n          if (!segment.simple()) {\n            t2 -= step;\n            if (abs(t1 - t2) < step) {\n              // we can never form a reduction\n              return [];\n            }\n            segment = p1.split(t1, t2);\n            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n            pass2.push(segment);\n            t1 = t2;\n            break;\n          }\n        }\n      }\n      if (t1 < 1) {\n        segment = p1.split(t1, 1);\n        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n        segment._t2 = p1._t2;\n        pass2.push(segment);\n      }\n    });\n    return pass2;\n  }\n\n  translate(v, d1, d2) {\n    d2 = typeof d2 === \"number\" ? d2 : d1;\n\n    // TODO: make this take curves with control points outside\n    //       of the start-end interval into account\n\n    const o = this.order;\n    let d = this.points.map((_, i) => (1 - i / o) * d1 + (i / o) * d2);\n    return new Bezier(\n      this.points.map((p, i) => ({\n        x: p.x + v.x * d[i],\n        y: p.y + v.y * d[i],\n      }))\n    );\n  }\n\n  scale(d) {\n    const order = this.order;\n    let distanceFn = false;\n    if (typeof d === \"function\") {\n      distanceFn = d;\n    }\n    if (distanceFn && order === 2) {\n      return this.raise().scale(distanceFn);\n    }\n\n    // TODO: add special handling for non-linear degenerate curves.\n\n    const clockwise = this.clockwise;\n    const points = this.points;\n\n    if (this._linear) {\n      return this.translate(\n        this.normal(0),\n        distanceFn ? distanceFn(0) : d,\n        distanceFn ? distanceFn(1) : d\n      );\n    }\n\n    const r1 = distanceFn ? distanceFn(0) : d;\n    const r2 = distanceFn ? distanceFn(1) : d;\n    const v = [this.offset(0, 10), this.offset(1, 10)];\n    const np = [];\n    const o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n\n    if (!o) {\n      throw new Error(\"cannot scale this curve. Try reducing it first.\");\n    }\n\n    // move all points by distance 'd' wrt the origin 'o',\n    // and move end points by fixed distance along normal.\n    [0, 1].forEach(function (t) {\n      const p = (np[t * order] = utils.copy(points[t * order]));\n      p.x += (t ? r2 : r1) * v[t].n.x;\n      p.y += (t ? r2 : r1) * v[t].n.y;\n    });\n\n    if (!distanceFn) {\n      // move control points to lie on the intersection of the offset\n      // derivative vector, and the origin-through-control vector\n      [0, 1].forEach((t) => {\n        if (order === 2 && !!t) return;\n        const p = np[t * order];\n        const d = this.derivative(t);\n        const p2 = { x: p.x + d.x, y: p.y + d.y };\n        np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n      });\n      return new Bezier(np);\n    }\n\n    // move control points by \"however much necessary to\n    // ensure the correct tangent to endpoint\".\n    [0, 1].forEach(function (t) {\n      if (order === 2 && !!t) return;\n      var p = points[t + 1];\n      var ov = {\n        x: p.x - o.x,\n        y: p.y - o.y,\n      };\n      var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n      if (distanceFn && !clockwise) rc = -rc;\n      var m = sqrt(ov.x * ov.x + ov.y * ov.y);\n      ov.x /= m;\n      ov.y /= m;\n      np[t + 1] = {\n        x: p.x + rc * ov.x,\n        y: p.y + rc * ov.y,\n      };\n    });\n    return new Bezier(np);\n  }\n\n  outline(d1, d2, d3, d4) {\n    d2 = d2 === undefined ? d1 : d2;\n\n    if (this._linear) {\n      // TODO: find the actual extrema, because they might\n      //       be before the start, or past the end.\n\n      const n = this.normal(0);\n      const start = this.points[0];\n      const end = this.points[this.points.length - 1];\n      let s, mid, e;\n\n      if (d3 === undefined) {\n        d3 = d1;\n        d4 = d2;\n      }\n\n      s = { x: start.x + n.x * d1, y: start.y + n.y * d1 };\n      e = { x: end.x + n.x * d3, y: end.y + n.y * d3 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const fline = [s, mid, e];\n\n      s = { x: start.x - n.x * d2, y: start.y - n.y * d2 };\n      e = { x: end.x - n.x * d4, y: end.y - n.y * d4 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const bline = [e, mid, s];\n\n      const ls = utils.makeline(bline[2], fline[0]);\n      const le = utils.makeline(fline[2], bline[0]);\n      const segments = [ls, new Bezier(fline), le, new Bezier(bline)];\n      return new PolyBezier(segments);\n    }\n\n    const reduced = this.reduce(),\n      len = reduced.length,\n      fcurves = [];\n\n    let bcurves = [],\n      p,\n      alen = 0,\n      tlen = this.length();\n\n    const graduated = typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\";\n\n    function linearDistanceFunction(s, e, tlen, alen, slen) {\n      return function (v) {\n        const f1 = alen / tlen,\n          f2 = (alen + slen) / tlen,\n          d = e - s;\n        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n      };\n    }\n\n    // form curve oulines\n    reduced.forEach(function (segment) {\n      const slen = segment.length();\n      if (graduated) {\n        fcurves.push(\n          segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))\n        );\n        bcurves.push(\n          segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))\n        );\n      } else {\n        fcurves.push(segment.scale(d1));\n        bcurves.push(segment.scale(-d2));\n      }\n      alen += slen;\n    });\n\n    // reverse the \"return\" outline\n    bcurves = bcurves\n      .map(function (s) {\n        p = s.points;\n        if (p[3]) {\n          s.points = [p[3], p[2], p[1], p[0]];\n        } else {\n          s.points = [p[2], p[1], p[0]];\n        }\n        return s;\n      })\n      .reverse();\n\n    // form the endcaps as lines\n    const fs = fcurves[0].points[0],\n      fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],\n      bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],\n      be = bcurves[0].points[0],\n      ls = utils.makeline(bs, fs),\n      le = utils.makeline(fe, be),\n      segments = [ls].concat(fcurves).concat([le]).concat(bcurves);\n\n    return new PolyBezier(segments);\n  }\n\n  outlineshapes(d1, d2, curveIntersectionThreshold) {\n    d2 = d2 || d1;\n    const outline = this.outline(d1, d2).curves;\n    const shapes = [];\n    for (let i = 1, len = outline.length; i < len / 2; i++) {\n      const shape = utils.makeshape(\n        outline[i],\n        outline[len - i],\n        curveIntersectionThreshold\n      );\n      shape.startcap.virtual = i > 1;\n      shape.endcap.virtual = i < len / 2 - 1;\n      shapes.push(shape);\n    }\n    return shapes;\n  }\n\n  intersects(curve, curveIntersectionThreshold) {\n    if (!curve) return this.selfintersects(curveIntersectionThreshold);\n    if (curve.p1 && curve.p2) {\n      return this.lineIntersects(curve);\n    }\n    if (curve instanceof Bezier) {\n      curve = curve.reduce();\n    }\n    return this.curveintersects(\n      this.reduce(),\n      curve,\n      curveIntersectionThreshold\n    );\n  }\n\n  lineIntersects(line) {\n    const mx = min(line.p1.x, line.p2.x),\n      my = min(line.p1.y, line.p2.y),\n      MX = max(line.p1.x, line.p2.x),\n      MY = max(line.p1.y, line.p2.y);\n    return utils.roots(this.points, line).filter((t) => {\n      var p = this.get(t);\n      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n    });\n  }\n\n  selfintersects(curveIntersectionThreshold) {\n    // \"simple\" curves cannot intersect with their direct\n    // neighbour, so for each segment X we check whether\n    // it intersects [0:x-2][x+2:last].\n\n    const reduced = this.reduce(),\n      len = reduced.length - 2,\n      results = [];\n\n    for (let i = 0, result, left, right; i < len; i++) {\n      left = reduced.slice(i, i + 1);\n      right = reduced.slice(i + 2);\n      result = this.curveintersects(left, right, curveIntersectionThreshold);\n      results.push(...result);\n    }\n    return results;\n  }\n\n  curveintersects(c1, c2, curveIntersectionThreshold) {\n    const pairs = [];\n    // step 1: pair off any overlapping segments\n    c1.forEach(function (l) {\n      c2.forEach(function (r) {\n        if (l.overlaps(r)) {\n          pairs.push({ left: l, right: r });\n        }\n      });\n    });\n    // step 2: for each pairing, run through the convergence algorithm.\n    let intersections = [];\n    pairs.forEach(function (pair) {\n      const result = utils.pairiteration(\n        pair.left,\n        pair.right,\n        curveIntersectionThreshold\n      );\n      if (result.length > 0) {\n        intersections = intersections.concat(result);\n      }\n    });\n    return intersections;\n  }\n\n  arcs(errorThreshold) {\n    errorThreshold = errorThreshold || 0.5;\n    return this._iterate(errorThreshold, []);\n  }\n\n  _error(pc, np1, s, e) {\n    const q = (e - s) / 4,\n      c1 = this.get(s + q),\n      c2 = this.get(e - q),\n      ref = utils.dist(pc, np1),\n      d1 = utils.dist(pc, c1),\n      d2 = utils.dist(pc, c2);\n    return abs(d1 - ref) + abs(d2 - ref);\n  }\n\n  _iterate(errorThreshold, circles) {\n    let t_s = 0,\n      t_e = 1,\n      safety;\n    // we do a binary search to find the \"good `t` closest to no-longer-good\"\n    do {\n      safety = 0;\n\n      // step 1: start with the maximum possible arc\n      t_e = 1;\n\n      // points:\n      let np1 = this.get(t_s),\n        np2,\n        np3,\n        arc,\n        prev_arc;\n\n      // booleans:\n      let curr_good = false,\n        prev_good = false,\n        done;\n\n      // numbers:\n      let t_m = t_e,\n        prev_e = 1,\n        step = 0;\n\n      // step 2: find the best possible arc\n      do {\n        prev_good = curr_good;\n        prev_arc = arc;\n        t_m = (t_s + t_e) / 2;\n        step++;\n\n        np2 = this.get(t_m);\n        np3 = this.get(t_e);\n\n        arc = utils.getccenter(np1, np2, np3);\n\n        //also save the t values\n        arc.interval = {\n          start: t_s,\n          end: t_e,\n        };\n\n        let error = this._error(arc, np1, t_s, t_e);\n        curr_good = error <= errorThreshold;\n\n        done = prev_good && !curr_good;\n        if (!done) prev_e = t_e;\n\n        // this arc is fine: we can move 'e' up to see if we can find a wider arc\n        if (curr_good) {\n          // if e is already at max, then we're done for this arc.\n          if (t_e >= 1) {\n            // make sure we cap at t=1\n            arc.interval.end = prev_e = 1;\n            prev_arc = arc;\n            // if we capped the arc segment to t=1 we also need to make sure that\n            // the arc's end angle is correct with respect to the bezier end point.\n            if (t_e > 1) {\n              let d = {\n                x: arc.x + arc.r * cos(arc.e),\n                y: arc.y + arc.r * sin(arc.e),\n              };\n              arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));\n            }\n            break;\n          }\n          // if not, move it up by half the iteration distance\n          t_e = t_e + (t_e - t_s) / 2;\n        } else {\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          t_e = t_m;\n        }\n      } while (!done && safety++ < 100);\n\n      if (safety >= 100) {\n        break;\n      }\n\n      // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n      prev_arc = prev_arc ? prev_arc : arc;\n      circles.push(prev_arc);\n      t_s = prev_e;\n    } while (t_e < 1);\n    return circles;\n  }\n}\n\nexport { Bezier };\n","import {guard as guardPoint} from './Point.js';\r\nimport {Path} from './Path.js';\r\nimport {Line} from './Line.js';\r\nimport {Points, Rects} from  './index.js';\r\n\r\nconst piPi = Math.PI *2;\r\n\r\n/**\r\n * A circle\r\n */\r\nexport type Circle = {\r\n  readonly radius: number\r\n}\r\n\r\n/**\r\n * A {@link Circle} with position\r\n */\r\nexport type CirclePositioned = Points.Point & Circle;\r\n\r\n\r\nexport type CircularPath = Circle & Path & {\r\n  readonly kind: `circular`\r\n};\r\n\r\n/**\r\n * Returns true if parameter has x,y. Does not verify if parameter is a circle or not\r\n * @param p Circle or point\r\n * @returns \r\n */\r\nexport const isPositioned = (p: Circle | Points.Point): p is Points.Point => (p as Points.Point).x !== undefined && (p as Points.Point).y !== undefined;\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const isCircle = (p: Circle|CirclePositioned|any): p is Circle => (p as Circle).radius !== undefined;\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const isCirclePositioned = (p:Circle|CirclePositioned|any): p is CirclePositioned => isCircle(p) && isPositioned(p);\r\n\r\n/**\r\n * Returns a point on a circle at a specified angle in radians\r\n * @param circle\r\n * @param angleRadian Angle in radians\r\n * @param Origin or offset of calculated point. By default uses center of circle or 0,0 if undefined\r\n * @returns Point oo circle\r\n */\r\nexport const point = (circle:Circle|CirclePositioned, angleRadian:number, origin?:Points.Point): Points.Point => {\r\n  if (origin === undefined) {\r\n    if (isPositioned(circle)) {\r\n      origin = circle;\r\n    } else {\r\n      origin = {x:0, y:0};\r\n    }\r\n  }\r\n  return {\r\n    x: (Math.cos(-angleRadian) * circle.radius) + origin.x,\r\n    y: (Math.sin(-angleRadian) * circle.radius) + origin.y\r\n  };\r\n};\r\n\r\n/**\r\n * Throws if radius is out of range. If x,y is present, these will be validated too.\r\n * @param circle \r\n * @param paramName \r\n */\r\nconst guard = (circle:CirclePositioned|Circle, paramName =`circle`) => {\r\n  if (isPositioned(circle)) {\r\n    guardPoint(circle, `circle`);\r\n  }\r\n\r\n  if (Number.isNaN(circle.radius)) throw new Error(`${paramName}.radius is NaN`);\r\n  if (circle.radius <= 0) throw new Error(`${paramName}.radius must be greater than zero`);\r\n};\r\n\r\n/**\r\n * Throws if `circle` is not positioned or has dodgy fields\r\n * @param circle \r\n * @param paramName \r\n * @returns \r\n */\r\nconst guardPositioned = (circle:CirclePositioned, paramName = `circle`) => {\r\n  if (!isPositioned(circle)) throw new Error(`Expected a positioned circle with x,y`);\r\n  return guard(circle, paramName);\r\n};\r\n\r\n/**\r\n * Computes relative position along circle\r\n * @param circle \r\n * @param t Position, 0-1\r\n * @returns \r\n */\r\nexport const interpolate = (circle:CirclePositioned, t:number):Points.Point => point(circle, t*piPi);\r\n\r\n/**\r\n * Returns circumference of `circle` (alias of {@link circumference})\r\n * @param circle \r\n * @returns \r\n */\r\nexport const length = (circle:Circle):number => circumference(circle);\r\n\r\n/**\r\n * Returns circumference of `circle` (alias of {@link length})\r\n * @param circle \r\n * @returns \r\n */\r\nexport const circumference = (circle:Circle):number => {\r\n  guard(circle);\r\n  return piPi*circle.radius;\r\n};\r\n\r\n/**\r\n * Returns the area of `circle`.\r\n * @param circle \r\n * @returns \r\n */\r\nexport const area = (circle:Circle) => {\r\n  guard(circle);\r\n  return Math.PI * circle.radius * circle.radius;\r\n};\r\n\r\n/**\r\n * Computes a bounding box that encloses circle\r\n * @param circle\r\n * @returns \r\n */\r\nexport const bbox = (circle:CirclePositioned|Circle):Rects.RectPositioned|Rects.Rect => {\r\n  if (isPositioned(circle)) {\r\n    return Rects.fromCenter(circle, circle.radius*2, circle.radius*2);\r\n  } else {\r\n    return {width: circle.radius*2, height: circle.radius*2};\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if `b` is completely contained by `a`\r\n *\r\n * @param a\r\n * @param b\r\n * @returns\r\n */\r\nexport const isContainedBy = (a:CirclePositioned, b:CirclePositioned):boolean => {\r\n  const d = distanceCenter(a, b);\r\n  return (d < Math.abs(a.radius - b.radius));\r\n};\r\n\r\n/**\r\n * Returns true if a or b overlap or are equal\r\n * \r\n * Use `intersections` to find the points of intersection\r\n *\r\n * @param a\r\n * @param b\r\n * @returns True if circle overlap\r\n */\r\nexport const isIntersecting = (a:CirclePositioned, b:CirclePositioned):boolean => {\r\n  if (isEquals(a, b)) return true;\r\n  if (isContainedBy(a, b)) return true;\r\n  return intersections(a, b).length === 2;\r\n};\r\n\r\n/**\r\n * Returns the points of intersection betweeen `a` and `b`.\r\n * \r\n * Returns an empty array if circles are equal, one contains the other or if they don't touch at all.\r\n *\r\n * @param a Circle\r\n * @param b Circle\r\n * @returns Points of intersection, or an empty list if there are none\r\n */\r\nexport const intersections = (a:CirclePositioned, b:CirclePositioned):readonly Points.Point[] => {\r\n  const vector = Points.subtract(b, a);\r\n  const centerD = Math.sqrt((vector.y*vector.y) + (vector.x*vector.x));\r\n\r\n  // Do not intersect\r\n  if (centerD > a.radius + b.radius) return [];\r\n\r\n  // Circle contains another\r\n  if (centerD < Math.abs(a.radius - b.radius)) return [];\r\n\r\n  // Circles are the same\r\n  if (isEquals(a, b)) return [];\r\n\r\n  const centroidD = ((a.radius*a.radius) - (b.radius*b.radius) + (centerD*centerD)) / (2.0 * centerD);\r\n  const centroid = {\r\n    x: a.x + (vector.x * centroidD / centerD),\r\n    y: a.y + (vector.y * centroidD / centerD)\r\n  };\r\n\r\n  const centroidIntersectionD = Math.sqrt((a.radius*a.radius) - (centroidD*centroidD));\r\n\r\n  const intersection =  {\r\n    x: -vector.y * (centroidIntersectionD/centerD),\r\n    y: vector.x * (centroidIntersectionD/centerD)\r\n  };\r\n  return [\r\n    Points.sum(centroid, intersection),\r\n    Points.subtract(centroid, intersection)\r\n  ];\r\n};\r\n\r\n/**\r\n * Returns true if the two objects have the same values\r\n *\r\n * @param a\r\n * @param b\r\n * @returns\r\n */\r\nexport const isEquals = (a:CirclePositioned|Circle, b:CirclePositioned|Circle):boolean => {\r\n  if (a.radius !== b.radius) return false;\r\n\r\n  if (isPositioned(a) && isPositioned(b)) {\r\n    if (a.x !== b.x) return false;\r\n    if (a.y !== b.y) return false;\r\n    if (a.z !== b.z) return false;\r\n    return true;\r\n  } else if (!isPositioned(a) && !isPositioned(b)) {\r\n    // no-op\r\n  } else return false; // one is positioned one not\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns the distance between two circle centers.\r\n * \r\n * Throws an error if either is lacking position.\r\n * @param a \r\n * @param b \r\n * @returns Distance\r\n */\r\nexport const distanceCenter = (a:CirclePositioned, b:CirclePositioned):number => {\r\n  guardPositioned(a, `a`);\r\n  guardPositioned(a, `b`);\r\n  return Points.distance(a, b);\r\n};\r\n\r\n/**\r\n * Returns the distance between the exterior of two circles, or between the exterior of a circle and point.\r\n * If `b` overlaps or is enclosed by `a`, distance is 0.\r\n * @param a\r\n * @param b \r\n */\r\nexport const distanceFromExterior = (a:CirclePositioned, b:CirclePositioned|Points.Point):number => {\r\n  guardPositioned(a, `a`);\r\n  if (isCirclePositioned(b)) {\r\n    return Math.max(0, distanceCenter(a, b) - a.radius - b.radius);\r\n  } else if (Points.isPoint(b)) {\r\n    return Math.max(0, Points.distance(a, b));\r\n  } else throw new Error(`Second parameter invalid type`);\r\n};\r\n\r\ntype ToSvg = {\r\n  (radius:number, sweep:boolean, origin:Points.Point): readonly string[];\r\n  (circle:Circle, sweep:boolean, origin:Points.Point): readonly string[];\r\n  (circle:CirclePositioned, sweep:boolean): readonly string[];\r\n};\r\n\r\n\r\n/**\r\n * Creates a SVG path segment.\r\n * @param a Circle or radius\r\n * @param sweep If true, path is 'outward'\r\n * @param origin Origin of path. Required if first parameter is just a radius or circle is non-positioned\r\n * @returns \r\n */\r\nexport const toSvg:ToSvg = (a:CirclePositioned|number|Circle, sweep:boolean, origin?:Points.Point):readonly string[] => {\r\n  if (isCircle(a)) {\r\n    if (origin !== undefined) {\r\n      return toSvgFull(a.radius, origin, sweep);\r\n    }\r\n    if (isPositioned(a)) {\r\n      return toSvgFull(a.radius, a, sweep);\r\n    } else throw new Error(`origin parameter needed for non-positioned circle`);\r\n  } else {\r\n    if (origin !== undefined) {\r\n      return toSvgFull(a, origin, sweep);\r\n    } else throw new Error(`origin parameter needed`);\r\n  }  \r\n};\r\n\r\nconst toSvgFull = (radius:number, origin:Points.Point, sweep:boolean):readonly string[] => {\r\n  // https://stackoverflow.com/questions/5737975/circle-drawing-with-svgs-arc-path\r\n  const {x, y} = origin;\r\n  const s = sweep ? `1` :`0`;\r\n  return `\r\n    M ${x}, ${y}\r\n    m -${radius}, 0\r\n    a ${radius},${radius} 0 1,${s} ${radius*2},0\r\n    a ${radius},${radius} 0 1,${s} -${radius*2},0\r\n  `.split(`\\n`);\r\n};\r\n\r\n/**\r\n * Returns a `CircularPath` representation of a circle\r\n *\r\n * @param {CirclePositioned} circle\r\n * @returns {CircularPath}\r\n */\r\nexport const toPath = (circle:CirclePositioned): CircularPath => {\r\n  guard(circle);\r\n\r\n  return Object.freeze({\r\n    ...circle,\r\n    /**\r\n     * Returns a relative (0.0-1.0) point on a circle. 0=3 o'clock, 0.25=6 o'clock, 0.5=9 o'clock, 0.75=12 o'clock etc.\r\n     * @param {t} Relative (0.0-1.0) point\r\n     * @returns {Point} X,y\r\n     */\r\n    interpolate: (t:number) => interpolate(circle, t),\r\n    bbox:() => bbox(circle) as Rects.RectPositioned,\r\n    length: () => length(circle),\r\n    toSvgString: (sweep = true) => toSvg(circle, sweep),\r\n    kind: `circular`\r\n  });\r\n};\r\n\r\n/**\r\n * Returns the point(s) of intersection between a circle and line.\r\n * @param circle \r\n * @param line \r\n * @returns Point(s) of intersection, or empty array\r\n */\r\nexport const intersectionLine = (circle:CirclePositioned, line:Line): readonly Points.Point[] => {\r\n  const v1 = {\r\n    x: line.b.x - line.a.x,\r\n    y: line.b.y - line.a.y\r\n  };\r\n  const v2 = {\r\n    x: line.a.x - circle.x,\r\n    y: line.a.y - circle.y\r\n  };\r\n\r\n  const b = (v1.x * v2.x + v1.y * v2.y) * -2;\r\n  const c = 2 * (v1.x * v1.x + v1.y * v1.y);\r\n  \r\n  const d = Math.sqrt(b * b - 2 * c * (v2.x * v2.x + v2.y * v2.y - circle.radius * circle.radius));\r\n  if(isNaN(d)) return []; // no intercept\r\n\r\n  const u1 = (b - d) / c;  // these represent the unit distance of point one and two on the line\r\n  const u2 = (b + d) / c;    \r\n\r\n  const ret = [];\r\n  if(u1 <= 1 && u1 >= 0) {  // add point if on the line segment\r\n    //eslint-disable-next-line functional/immutable-data\r\n    ret.push({ \r\n      x: line.a.x + v1.x * u1,\r\n      y: line.a.y + v1.y * u1\r\n    });\r\n  }\r\n  if(u2 <= 1 && u2 >= 0) {  // second add point if on the line segment\r\n    //eslint-disable-next-line functional/immutable-data\r\n    ret.push({\r\n      x: line.a.x + v1.x * u2,\r\n      y: line.a.y + v1.y * u2\r\n    });\r\n  }       \r\n  return ret;\r\n};","import {Points, Paths, Rects} from './index.js';\r\n\r\nexport type CompoundPath = Paths.Path & {\r\n  readonly segments: readonly Paths.Path[]\r\n  readonly kind: `compound`\r\n};\r\n\r\n/**\r\n * Returns a new compoundpath, replacing a path at a given index\r\n *\r\n * @param {CompoundPath} compoundPath Existing compoundpath\r\n * @param {number} index Index to replace at\r\n * @param {Paths.Path} path Path to substitute in\r\n * @returns {CompoundPath} New compoundpath\r\n */\r\nexport const setSegment = (compoundPath: CompoundPath, index: number, path: Paths.Path): CompoundPath => {\r\n  const existing = [...compoundPath.segments];\r\n  //eslint-disable-next-line functional/prefer-readonly-type,functional/immutable-data\r\n  existing[index] = path;\r\n  return fromPaths(...existing);\r\n};\r\n\r\n/**\r\n * Computes x,y point at a relative position along compoundpath\r\n *\r\n * @param {Paths.Path[]} paths Combined paths (assumes contiguous)\r\n * @param {number} t Position (given as a percentage from 0 to 1)\r\n * @param {boolean} [useWidth] If true, widths are used for calulcating. If false, lengths are used\r\n * @param {Dimensions} [dimensions] Precalculated dimensions of paths, will be computed if omitted\r\n * @returns\r\n */\r\nexport const interpolate = (paths: readonly Paths.Path[], t: number, useWidth?: boolean, dimensions?: Dimensions) => {\r\n  if (dimensions === undefined) {\r\n    dimensions = computeDimensions(paths);\r\n  }\r\n\r\n  // Expected value to land on\r\n  const expected = t * (useWidth ? dimensions.totalWidth : dimensions.totalLength);\r\n  //eslint-disable-next-line functional/no-let\r\n  let soFar = 0;\r\n\r\n  // Use widths or lengths?\r\n  const l = useWidth ? dimensions.widths : dimensions.lengths;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i = 0; i < l.length; i++) {\r\n    if (soFar + l[i] >= expected) {\r\n      const relative = expected - soFar;\r\n      //eslint-disable-next-line functional/no-let\r\n      let amt = relative / l[i];\r\n      //eslint-disable-next-line functional/no-let\r\n      if (amt > 1) amt = 1;\r\n      return paths[i].interpolate(amt);\r\n    } else soFar += l[i];\r\n  }\r\n  return {x: 0, y: 0};\r\n};\r\n\r\nexport type Dimensions = {\r\n  /**\r\n   * Width of each path (based on bounding box)\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  readonly widths: readonly number[],\r\n  /**\r\n   * Length of each path\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  readonly lengths: readonly number[],\r\n\r\n  /**\r\n   * Total length of all paths\r\n   *\r\n   * @type {number}\r\n   */\r\n  readonly totalLength: number,\r\n  /**\r\n   * Total width of all paths\r\n   *\r\n   * @type {number}\r\n   */\r\n  readonly totalWidth: number\r\n}\r\n/**\r\n * Computes the widths and lengths of all paths, adding them up as well\r\n *\r\n * @param {Paths.Path[]} paths\r\n * @returns {Dimensions}\r\n */\r\nexport const computeDimensions = (paths: readonly Paths.Path[]): Dimensions => {\r\n  const widths = paths.map(l => l.bbox().width);\r\n  const lengths = paths.map(l => l.length());\r\n  //eslint-disable-next-line functional/no-let\r\n  let totalLength = 0;\r\n  //eslint-disable-next-line functional/no-let\r\n  let totalWidth = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i = 0; i < lengths.length; i++) totalLength += lengths[i];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i = 0; i < widths.length; i++) totalWidth += widths[i];\r\n\r\n  return {totalLength, totalWidth, widths, lengths};\r\n};\r\n\r\n/**\r\n * Computes the bounding box that encloses entire compoundpath\r\n *\r\n * @param {Paths.Path[]} paths\r\n * \r\n * @returns {Rects.Rect}\r\n */\r\nexport const bbox = (paths: readonly Paths.Path[]): Rects.RectPositioned => {\r\n  const boxes = paths.map(p => p.bbox());\r\n  const corners = boxes.map(b => Rects.corners(b)).flat();\r\n\r\n  return Points.bbox(...corners);\r\n};\r\n\r\n/**\r\n * Produce a human-friendly representation of paths\r\n *\r\n * @param {Paths.Path[]} paths\r\n * @returns {string}\r\n */\r\nexport const toString = (paths: readonly Paths.Path[]): string => paths.map(p => p.toString()).join(`, `);\r\n\r\n/**\r\n * Throws an error if paths are not connected together, in order\r\n *\r\n * @param {Paths.Path[]} paths\r\n */\r\nexport const guardContinuous = (paths: readonly Paths.Path[]) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let lastPos = Paths.getEnd(paths[0]);\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i = 1; i < paths.length; i++) {\r\n    const start = Paths.getStart(paths[i]);\r\n    if (!Points.isEqual(start, lastPos)) throw new Error(`Path index ` + i + ` does not start at prior path end. Start: ` + start.x + `,` + start.y + ` expected: ` + lastPos.x + `,` + lastPos.y + ``);\r\n    lastPos = Paths.getEnd(paths[i]);\r\n  }\r\n};\r\n\r\nexport const toSvgString = (paths: readonly Paths.Path[]): readonly string[] => paths.flatMap(p => p.toSvgString());\r\n\r\n/**\r\n * Create a compoundpath from an array of paths.\r\n * All this does is verify they are connected, and precomputes dimensions\r\n *\r\n * @param {...Paths.Path[]} paths\r\n * @returns {CompoundPath}\r\n */\r\nexport const fromPaths = (...paths: readonly Paths.Path[]): CompoundPath => {\r\n  guardContinuous(paths); // Throws an error if paths are not connected\r\n  const dims = computeDimensions(paths);\r\n\r\n  return Object.freeze({\r\n    segments: paths,\r\n    length: () => dims.totalLength,\r\n    interpolate: (t: number, useWidth = false) => interpolate(paths, t, useWidth, dims),\r\n    bbox: () => bbox(paths),\r\n    toString: () => toString(paths),\r\n    toSvgString: () => toSvgString(paths),\r\n    kind: `compound`\r\n  });\r\n};\r\n","import {Rects, Points} from './index.js';\r\nimport {integer as guardInteger} from '../Guards.js';\r\nimport {clampIndex} from '../data/Clamp.js';\r\nimport {randomElement} from '../collections/Arrays.js';\r\nimport {SetMutable} from '../collections/Interfaces.js';\r\nimport {setMutable, } from \"../collections/Set.js\";\r\nimport {zipKeyValue} from \"../collections/Map.js\";\r\n\r\nexport type GridVisual = Readonly<{\r\n  readonly size: number,\r\n}>\r\n\r\nexport type Grid = Readonly<{\r\n  readonly rows: number\r\n  readonly cols: number\r\n}>;\r\n\r\nexport type Cell = Readonly<{\r\n  readonly x: number\r\n  readonly y: number\r\n}>;\r\n\r\nexport type Neighbours = Readonly<{\r\n  readonly n: Cell | undefined,\r\n  readonly e: Cell | undefined,\r\n  readonly s: Cell | undefined,\r\n  readonly w: Cell | undefined,\r\n  readonly ne: Cell | undefined,\r\n  readonly nw: Cell | undefined,\r\n  readonly se: Cell | undefined,\r\n  readonly sw: Cell | undefined\r\n}>\r\n\r\nexport type CardinalDirection = `` | `n` | `ne` | `e` | `se` | `s` | `sw` | `w` | `nw`;\r\n\r\nexport type BoundsLogic = `unbounded` | `undefined` | `stop` | `wrap`;\r\n\r\nexport type VisitorLogic = {\r\n  readonly options?: IdentifyNeighbours;\r\n  readonly select: NeighbourSelector\r\n}\r\nexport type VisitGenerator = Generator<Readonly<Cell>, void, unknown>\r\nexport type VisitorOpts = {\r\n  readonly visited?: SetMutable<Cell>\r\n  readonly reversed?: boolean\r\n  readonly debug?: boolean\r\n}\r\nexport type Visitor = (grid: Grid, start: Cell, opts?: VisitorOpts) => VisitGenerator;\r\n\r\nexport type NeighbourMaybe = readonly [keyof Neighbours, Cell | undefined];\r\nexport type Neighbour = readonly [keyof Neighbours, Cell];\r\n\r\n/**\r\n * Neighbour selector logic. For a given set of `neighbours` pick one to visit next.\r\n */\r\nexport type NeighbourSelector = (neighbours: ReadonlyArray<Neighbour>) => Neighbour | undefined;\r\n\r\n/**\r\n * Identify neighbours logic. For a given `grid` and `origin`, return a list of neighbours\r\n */\r\nexport type IdentifyNeighbours = (grid: Grid, origin: Cell) => ReadonlyArray<Neighbour>;\r\n\r\n/**\r\n * Returns true if `cell` parameter is a cell with x,y fields.\r\n * Does not check validity of fields.\r\n *\r\n * @param cell\r\n * @return True if parameter is a cell\r\n */\r\nconst isCell = (cell: Cell | undefined): cell is Cell => {\r\n  if (cell === undefined) return false;\r\n  return (`x` in cell && `y` in cell);\r\n};\r\n\r\n/**\r\n * Returns true if `n` is a Neighbour type, eliminating NeighbourMaybe possibility\r\n *\r\n * @param n\r\n * @return\r\n */\r\nconst isNeighbour = (n: Neighbour | NeighbourMaybe | undefined): n is Neighbour => {\r\n  if (n === undefined) return false;\r\n  if (n[1] === undefined) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns _true_ if grids `a` and `b` are equal in value\r\n *\r\n * @param a\r\n * @param b\r\n * @return\r\n */\r\nexport const isEqual = (a: Grid | GridVisual, b: Grid | GridVisual): boolean => {\r\n  if (`rows` in a && `cols` in a) {\r\n    if (`rows` in b && `cols` in b) {\r\n      if (a.rows !== b.rows || a.cols !== b.cols) return false;\r\n    } else return false;\r\n  }\r\n  if (`size` in a) {\r\n    if (`size` in b) {\r\n      if (a.size !== b.size) return false;\r\n    } else return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns a key string for a cell instance\r\n * A key string allows comparison of instances by value rather than reference\r\n * @param v\r\n * @returns\r\n */\r\nexport const cellKeyString = (v: Cell): string => `Cell{${v.x},${v.y}}`;\r\n\r\n/**\r\n * Returns true if two cells equal. Returns false if either cell (or both) are undefined\r\n *\r\n * @param a\r\n * @param b\r\n * @returns\r\n */\r\nexport const cellEquals = (a: Cell, b: Cell): boolean => {\r\n  if (b === undefined) return false;\r\n  if (a === undefined) return false;\r\n  return a.x === b.x && a.y === b.y;\r\n};\r\n\r\n/**\r\n * Throws an exception if any of the cell's parameters are invalid\r\n * @private\r\n * @param cell \r\n * @param paramName \r\n * @param grid \r\n */\r\nexport const guardCell = (cell: Cell, paramName: string = `Param`, grid?: Grid) => {\r\n  if (cell === undefined) throw new Error(paramName + ` is undefined. Expecting {x,y}`);\r\n  if (cell.x === undefined) throw new Error(paramName + `.x is undefined`);\r\n  if (cell.y === undefined) throw new Error(paramName + `.y is undefined`);\r\n  if (!Number.isInteger(cell.x)) throw new Error(paramName + `.x is non-integer`);\r\n  if (!Number.isInteger(cell.y)) throw new Error(paramName + `.y is non-integer`);\r\n  if (grid !== undefined) {\r\n    if (!inside(grid, cell)) throw new Error(`${paramName} is outside of grid. Cell: ${cell.x},${cell.y} Grid: ${grid.cols}, ${grid.rows}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Throws an exception if any of the grid's parameters are invalid\r\n * @param grid\r\n * @param paramName \r\n */\r\nconst guardGrid = (grid: Grid, paramName: string = `Param`) => {\r\n  if (grid === undefined) throw new Error(`${paramName} is undefined. Expecting grid.`);\r\n  if (!(`rows` in grid)) throw new Error(`${paramName}.rows is undefined`);\r\n  if (!(`cols` in grid)) throw new Error(`${paramName}.cols is undefined`);\r\n\r\n  if (!Number.isInteger(grid.rows)) throw new Error(`${paramName}.rows is not an integer`);\r\n  if (!Number.isInteger(grid.cols)) throw new Error(`${paramName}.cols is not an integer`);\r\n};\r\n\r\n/**\r\n * Returns _true_ if cell coordinates are above zero and within bounds of grid\r\n *\r\n * @param grid\r\n * @param cell\r\n * @return\r\n */\r\nexport const inside = (grid: Grid, cell: Cell): boolean => {\r\n  if (cell.x < 0 || cell.y < 0) return false;\r\n  if (cell.x >= grid.cols || cell.y >= grid.rows) return false;\r\n  return true;\r\n};\r\n/**\r\n * Returns a visual rectangle of the cell, positioned from the top-left corner\r\n *\r\n * @param cell\r\n * @param grid\r\n * @return\r\n */\r\nexport const rectangleForCell = (cell: Cell, grid: Grid & GridVisual): Rects.RectPositioned => {\r\n  guardCell(cell);\r\n  const size = grid.size;\r\n  const x = cell.x * size;\r\n  const y = cell.y * size;\r\n  const r = Rects.fromTopLeft({x: x, y: y}, size, size);\r\n  return r;\r\n};\r\n\r\n/**\r\n * Returns the cell at a specified visual coordinate\r\n *\r\n * @param position Position, eg in pixels\r\n * @param grid Grid\r\n * @return Cell at position or undefined if outside of the grid\r\n */\r\nexport const cellAtPoint = (position: Points.Point, grid: Grid & GridVisual): Cell | undefined => {\r\n  const size = grid.size;\r\n  if (position.x < 0 || position.y < 0) return;\r\n  const x = Math.floor(position.x / size);\r\n  const y = Math.floor(position.y / size);\r\n  if (x >= grid.cols) return;\r\n  if (y >= grid.rows) return;\r\n  return {x, y};\r\n};\r\n\r\n/**\r\n * Returns a list of all cardinal directions\r\n */\r\nexport const allDirections = Object.freeze([`n`, `ne`, `nw`, `e`, `s`, `se`, `sw`, `w`]) as ReadonlyArray<CardinalDirection>;\r\n\r\n/**\r\n * Returns a list of + shaped directions (ie. excluding diaganol)\r\n */\r\nexport const crossDirections = Object.freeze([`n`, `e`, `s`, `w`]) as ReadonlyArray<CardinalDirection>;\r\n\r\n/**\r\n * Returns neighbours for a cell. If no `directions` are provided, it defaults to all.\r\n * \r\n * ```js\r\n * const n = neighbours = ({rows: 5, cols: 5}, {x:2, y:2} `wrap`);\r\n * {\r\n *  n: {x: 2, y: 1}\r\n *  s: {x: 2, y: 3}\r\n *  ....\r\n * }\r\n * ```\r\n * @returns Returns a map of cells, keyed by cardinal direction\r\n * @param grid Grid\r\n * @param cell Cell\r\n * @param bounds How to handle edges of grid\r\n * @param directions Directions to return\r\n */\r\nexport const neighbours = (grid: Grid, cell: Cell, bounds: BoundsLogic = `undefined`, directions?: ReadonlyArray<CardinalDirection>): Neighbours => {\r\n  const dirs = directions ?? allDirections;\r\n  const points = dirs.map(c => offset(grid, cell, getVectorFromCardinal(c), bounds));\r\n  return zipKeyValue<Cell>(dirs, points) as Neighbours;\r\n};\r\n\r\n/**\r\n * Returns the visual midpoint of a cell (eg pixel coordinate)\r\n *\r\n * @param cell\r\n * @param grid\r\n * @return \r\n */\r\nexport const cellMiddle = (cell: Cell, grid: Grid & GridVisual): Points.Point => {\r\n  guardCell(cell);\r\n\r\n  const size = grid.size;\r\n  const x = cell.x * size; // + (grid.spacing ? cell.x * grid.spacing : 0);\r\n  const y = cell.y * size; // + (grid.spacing ? cell.y * grid.spacing : 0);\r\n  return Object.freeze({x: x + size / 2, y: y + size / 2});\r\n};\r\n\r\n/**\r\n * Returns the cells on the line of start and end, inclusive\r\n *\r\n * ```js\r\n * // Get cells that connect 0,0 and 10,10\r\n * const cells = getLine({x:0,y:0}, {x:10,y:10});\r\n * ```\r\n * \r\n * This function does not handle wrapped coordinates.\r\n * @param start Starting cell\r\n * @param end End cell\r\n * @returns\r\n */\r\nexport const getLine = (start: Cell, end: Cell): ReadonlyArray<Cell> => {\r\n  // https://stackoverflow.com/a/4672319\r\n  guardCell(start);\r\n  guardCell(end);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let startX = start.x;\r\n  // eslint-disable-next-line functional/no-let\r\n  let startY = start.y;\r\n  const dx = Math.abs(end.x - startX);\r\n  const dy = Math.abs(end.y - startY);\r\n  const sx = (startX < end.x) ? 1 : -1;\r\n  const sy = (startY < end.y) ? 1 : -1;\r\n  // eslint-disable-next-line functional/no-let\r\n  let err = dx - dy;\r\n\r\n  const cells = [];\r\n  // eslint-disable-next-line functional/no-loop-statement,no-constant-condition\r\n  while (true) {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    cells.push(Object.freeze({x: startX, y: startY}));\r\n    if (startX === end.x && startY === end.y) break;\r\n    const e2 = 2 * err;\r\n    if (e2 > -dy) {\r\n      err -= dy;\r\n      startX += sx;\r\n    }\r\n    if (e2 < dx) {\r\n      err += dx;\r\n      startY += sy;\r\n    }\r\n  }\r\n  return cells;\r\n};\r\n\r\n/**\r\n * Returns cells that correspond to the cardinal directions at a specified distance\r\n *\r\n * @param grid Grid\r\n * @param steps Distance\r\n * @param start Start poiint\r\n * @param bound Logic for if bounds of grid are exceeded\r\n * @returns Cells corresponding to cardinals\r\n */\r\nexport const offsetCardinals = (grid: Grid, start: Cell, steps: number, bounds: BoundsLogic = `stop`): Neighbours => {\r\n  guardGrid(grid, `grid`);\r\n  guardCell(start, `start`);\r\n  guardInteger(steps, `aboveZero`, `steps`);\r\n\r\n  const directions = allDirections;\r\n  const vectors = directions.map(d => getVectorFromCardinal(d, steps));\r\n  const cells = directions.map((d, i) => offset(grid, start, vectors[i], bounds));\r\n\r\n  return zipKeyValue(directions, cells) as Neighbours;\r\n};\r\n\r\n/**\r\n * Returns an `{ x, y }` signed vector corresponding to the provided cardinal direction.\r\n * ```js\r\n * const n = getVectorFromCardinal(`n`); // {x: 0, y: -1}\r\n * ```\r\n * \r\n * Optional `multiplier` can be applied to vector\r\n * ```js\r\n * const n = getVectorFromCardinal(`n`, 10); // {x: 0, y: -10}\r\n * ```\r\n * \r\n * Blank direction returns `{ x: 0, y: 0 }`\r\n * @param cardinal Direction\r\n * @param multiplier Multipler\r\n * @returns Signed vector in the form of `{ x, y }`\r\n */\r\nexport const getVectorFromCardinal = (cardinal: CardinalDirection, multiplier: number = 1): Cell => {\r\n  // eslint-disable-next-line functional/no-let\r\n  let v;\r\n  switch (cardinal) {\r\n  case `n`:\r\n    v = {x: 0, y: -1 * multiplier};\r\n    break;\r\n  case `ne`:\r\n    v = {x: 1 * multiplier, y: -1 * multiplier};\r\n    break;\r\n  case `e`:\r\n    v = {x: 1 * multiplier, y: 0};\r\n    break;\r\n  case `se`:\r\n    v = {x: 1 * multiplier, y: 1 * multiplier};\r\n    break;\r\n  case `s`:\r\n    v = {x: 0, y: 1 * multiplier};\r\n    break;\r\n  case `sw`:\r\n    v = {x: -1 * multiplier, y: 1 * multiplier};\r\n    break;\r\n  case `w`:\r\n    v = {x: -1 * multiplier, y: 0};\r\n    break;\r\n  case `nw`:\r\n    v = {x: -1 * multiplier, y: -1 * multiplier};\r\n    break;\r\n  default:\r\n    v = {x: 0, y: 0};\r\n  }\r\n  return Object.freeze(v);\r\n};\r\n\r\n/**\r\n * Returns a list of cells from `start` to `end`.\r\n * \r\n * Throws an error if start and end are not on same row or column.\r\n *\r\n * @param start Start cell\r\n * @param end end clel\r\n * @param endInclusive\r\n * @return Array of cells\r\n */\r\nexport const simpleLine = function (start: Cell, end: Cell, endInclusive: boolean = false): ReadonlyArray<Cell> {\r\n  // eslint-disable-next-line functional/prefer-readonly-type\r\n  const cells: Cell[] = [];\r\n  if (start.x === end.x) {\r\n    // Vertical\r\n    const lastY = endInclusive ? end.y + 1 : end.y;\r\n    // eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let y = start.y; y < lastY; y++) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      cells.push({x: start.x, y: y});\r\n    }\r\n  } else if (start.y === end.y) {\r\n    // Horizontal\r\n    const lastX = endInclusive ? end.x + 1 : end.x;\r\n    // eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let x = start.x; x < lastX; x++) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      cells.push({x: x, y: start.y});\r\n    }\r\n  } else {\r\n    throw new Error(`Only does vertical and horizontal: ${start.x},${start.y} - ${end.x},${end.y}`);\r\n  }\r\n  return cells;\r\n};\r\n\r\n/**\r\n *\r\n * Returns a coordinate offset from `start` by `vector` amount.\r\n * \r\n * Different behaviour can be specified for how to handle when coordinates exceed the bounds of the grid\r\n * \r\n * \r\n * Note: x and y wrapping are calculated independently. A large wrapping of x, for example won't shift down a line \r\n * @param grid Grid to traverse\r\n * @param vector Offset in x/y\r\n * @param start Start point\r\n * @param bounds\r\n * @returns Cell\r\n */\r\nexport const offset = function (grid: Grid, start: Cell, vector: Cell, bounds: BoundsLogic = `undefined`): Cell | undefined {\r\n  guardCell(start, `start`, grid);\r\n  guardCell(vector);\r\n  guardGrid(grid, `grid`);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let x = start.x;\r\n  // eslint-disable-next-line functional/no-let\r\n  let y = start.y;\r\n  switch (bounds) {\r\n  case `wrap`:\r\n    x += vector.x % grid.cols;\r\n    y += vector.y % grid.rows;\r\n    if (x < 0) x = grid.cols + x;\r\n    else if (x >= grid.cols) {\r\n      x -= grid.cols;\r\n    }\r\n    if (y < 0) y = grid.rows + y;\r\n    else if (y >= grid.rows) {\r\n      y -= grid.rows;\r\n    }\r\n    break;\r\n  case `stop`:\r\n    x += vector.x;\r\n    y += vector.y;\r\n    x = clampIndex(x, grid.cols);\r\n    y = clampIndex(y, grid.rows);\r\n    break;\r\n  case `undefined`:\r\n    x += vector.x;\r\n    y += vector.y;\r\n    if (x < 0 || y < 0) return;\r\n    if (x >= grid.cols || y >= grid.rows) return;\r\n    break;\r\n  case `unbounded`:\r\n    x += vector.x;\r\n    y += vector.y;\r\n    break;\r\n  default:\r\n    throw new Error(`Unknown BoundsLogic case ${bounds}`);\r\n  }\r\n  return Object.freeze({x, y});\r\n};\r\n\r\nconst neighbourList = (grid: Grid, cell: Cell, directions: ReadonlyArray<CardinalDirection>, bounds: BoundsLogic): ReadonlyArray<Neighbour> => {\r\n  // Get neighbours for cell\r\n  const cellNeighbours = neighbours(grid, cell, bounds, directions);\r\n\r\n  // Filter out undefined cells\r\n  const entries = Object.entries(cellNeighbours);\r\n  return (entries as Array<NeighbourMaybe>).filter(isNeighbour);\r\n};\r\n\r\n/**\r\n * Visits every cell in grid using supplied selection function\r\n * In-built functions to use: visitorDepth, visitorBreadth, visitorRandom,\r\n * visitorColumn, visitorRow.\r\n * \r\n * Usage example:\r\n * ```js\r\n *  let visitor = Grids.visitor(Grids.visitorRandom, grid, startCell);\r\n *  for (let cell of visitor) {\r\n *   // do something with cell\r\n *  }\r\n * ```\r\n *\r\n * If you want to keep tabs on the visitor, pass in a MutableValueSet. This is\r\n * updated with visited cells (and is used internally anyway)\r\n * ```js\r\n *  let visited = new mutableValueSet<Grids.Cell>(c => Grids.cellKeyString(c));\r\n *  let visitor = Grids.visitor(Grids.visitorRandom, grid, startCell, visited);\r\n * ```\r\n * \r\n * To visit with some delay, try this pattern\r\n * ```js\r\n *  const delayMs = 100;\r\n *  const run = () => {\r\n *   let cell = visitor.next().value;\r\n *   if (cell === undefined) return;\r\n *   // Do something with cell\r\n *   setTimeout(run, delayMs);\r\n *  }\r\n *  setTimeout(run, delayMs);\r\n * ```\r\n * @param neighbourSelect Select neighbour to visit\r\n * @param grid Grid to visit\r\n * @param start Starting cell\r\n * @param visited Optional tracker of visited cells\r\n * @returns Cells\r\n */\r\n// eslint-disable-next-line functional/prefer-readonly-type\r\nexport const visitor = function* (\r\n  logic: VisitorLogic,\r\n  grid: Grid,\r\n  start: Cell,\r\n  opts: VisitorOpts = {}\r\n): VisitGenerator {\r\n\r\n  guardGrid(grid, `grid`);\r\n  guardCell(start, `start`, grid);\r\n\r\n\r\n  const v = opts.visited ?? setMutable<Cell>(c => cellKeyString(c));\r\n  const possibleNeighbours = logic.options ? logic.options : (g: Grid, c: Cell) => neighbourList(g, c, crossDirections, `undefined`);\r\n\r\n  if (!isCell(start)) throw new Error(`'start' parameter is undefined or not a cell`);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let cellQueue: Cell[] = [start];\r\n  // eslint-disable-next-line functional/no-let\r\n  let moveQueue: Neighbour[] = [];\r\n  // eslint-disable-next-line functional/no-let\r\n  let current: Cell | null = null;\r\n\r\n  // eslint-disable-next-line functional/no-loop-statement\r\n  while (cellQueue.length > 0) {\r\n    // console.log(`cell queue: ${cellQueue.length} move queue: ${moveQueue.length} current: ${JSON.stringify(current)}` );\r\n    if (current === null) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      const nv = cellQueue.pop();\r\n      if (nv === undefined) {\r\n        // console.log(`cellQueue drained`);\r\n        break;\r\n      }\r\n      current = nv;\r\n    }\r\n\r\n    if (!v.has(current)) {\r\n      v.add(current);\r\n      yield (current);\r\n\r\n      const nextSteps = possibleNeighbours(grid, current)\r\n        .filter(step => !v.has(step[1]));\r\n\r\n      if (nextSteps.length === 0) {\r\n        // No more moves for this cell\r\n        if (current !== null) {\r\n          cellQueue = cellQueue.filter(cq => cellEquals(cq, current as Cell));\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        moveQueue.push(...nextSteps);\r\n      }\r\n    }\r\n\r\n    // Remove steps already made\r\n    moveQueue = moveQueue.filter(step => !v.has(step[1]));\r\n\r\n    if (moveQueue.length === 0) {\r\n      // console.log(`moveQueue empty`);\r\n      current = null;\r\n    } else {\r\n      // Pick move\r\n      const potential = logic.select(moveQueue);\r\n      if (potential !== undefined) {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        cellQueue.push(potential[1]);\r\n        current = potential[1];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const visitorDepth = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\r\n  select: (nbos) => nbos[nbos.length - 1]\r\n},\r\ngrid,\r\nstart,\r\nopts);\r\n\r\nexport const visitorBreadth = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\r\n  select: (nbos) => nbos[0]\r\n},\r\ngrid,\r\nstart,\r\nopts);\r\n\r\nconst randomNeighbour = (nbos: readonly Neighbour[]) => randomElement(nbos); // .filter(isNeighbour));\r\n\r\nexport const visitorRandomContiguous = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\r\n  select: randomNeighbour\r\n},\r\ngrid,\r\nstart,\r\nopts);\r\n\r\nexport const visitorRandom = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => visitor({\r\n  options: (grid, cell) => {\r\n    const t: Neighbour[] = [];\r\n    // eslint-disable-next-line functional/no-loop-statement\r\n    for (const c of cells(grid, cell)) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      t.push([`n`, c]);\r\n    }\r\n    return t;\r\n  },\r\n  select: randomNeighbour\r\n},\r\ngrid,\r\nstart,\r\nopts);\r\n\r\nexport const visitorRow = (grid: Grid, start: Cell, opts: VisitorOpts = {}) => {\r\n  const {reversed = false} = opts;\r\n\r\n  const neighbourSelect = (nbos: readonly Neighbour[]) => nbos.find(n => n[0] === (reversed ? `w` : `e`));\r\n\r\n  const possibleNeighbours = (grid: Grid, cell: Cell): ReadonlyArray<Neighbour> => {\r\n    if (reversed) {\r\n      // WALKING BACKWARD ALONG RONG\r\n      if (cell.x > 0) {\r\n        // All fine, step to the left\r\n        cell = {x: cell.x - 1, y: cell.y};\r\n      } else {\r\n        // At the beginning of a row\r\n        if (cell.y > 0) {\r\n          // Wrap to next row up\r\n          cell = {x: grid.cols - 1, y: cell.y - 1};\r\n        } else {\r\n          // Wrap to end of grid\r\n          cell = {x: grid.cols - 1, y: grid.rows - 1};\r\n        }\r\n      }\r\n    } else {\r\n      /*\r\n       * WALKING FORWARD ALONG ROWS\r\n       * console.log(`${cell.x}, ${cell.y}`);\r\n       */\r\n      if (cell.x < grid.rows - 1) {\r\n        // All fine, step to the right\r\n        cell = {x: cell.x + 1, y: cell.y};\r\n      } else {\r\n        // At the end of a row\r\n        if (cell.y < grid.rows - 1) {\r\n          // More rows available, wrap to next row down\r\n          cell = {x: 0, y: cell.y + 1};\r\n        } else {\r\n          // No more rows available, wrap to start of the grid\r\n          cell = {x: 0, y: 0};\r\n        }\r\n      }\r\n    }\r\n    return [[(reversed ? `w` : `e`), cell]];\r\n  };\r\n\r\n  const logic: VisitorLogic = {\r\n    select: neighbourSelect,\r\n    options: possibleNeighbours\r\n  };\r\n\r\n  return visitor(logic, grid, start, opts);\r\n};\r\n\r\n/**\r\n * Runs the provided `visitor` for `steps`, returning the cell we end at\r\n * \r\n * ```js\r\n * // Get a cell 10 steps away (row-wise) from start\r\n * const cell = visitFor(grid, start, 10, visitorRow);\r\n * ```\r\n * @param grid Grid to traverse\r\n * @param start Start point\r\n * @param steps Number of steps\r\n * @param visitor Visitor function\r\n * @returns \r\n */\r\nexport const visitFor = (grid: Grid, start: Cell, steps: number, visitor: Visitor): Cell => {\r\n  guardInteger(steps, ``, `steps`);\r\n\r\n  const opts: VisitorOpts = {\r\n    reversed: steps < 0\r\n  };\r\n  steps = Math.abs(steps);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let c = start;\r\n  // eslint-disable-next-line functional/no-let\r\n  let v = visitor(grid, start, opts);\r\n  v.next(); // Burn up starting cell\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let stepsMade = 0;\r\n\r\n  // eslint-disable-next-line functional/no-loop-statement\r\n  while (stepsMade < steps) {\r\n    stepsMade++;\r\n    const {value} = v.next();\r\n    if (value) {\r\n      c = value;\r\n      if (opts.debug) console.log(`stepsMade: ${stepsMade} cell: ${c.x}, ${c.y} reverse: ${opts.reversed}`);\r\n    } else {\r\n      if (steps >= grid.cols * grid.rows) {\r\n        steps -= grid.cols * grid.rows;\r\n        stepsMade = 0;\r\n        v = visitor(grid, start, opts);\r\n        v.next();\r\n        c = start;\r\n        if (opts.debug) console.log(`resetting visitor to ${steps}`);\r\n      } else throw new Error(`Value not received by visitor`);\r\n    }\r\n  }\r\n  return c;\r\n};\r\n\r\n/**\r\n * Visits cells running down columns, left-to-right.\r\n * @param grid Grid to traverse\r\n * @param start Start cell\r\n * @param opts Options\r\n * @returns Visitor generator\r\n */\r\nexport const visitorColumn = (grid: Grid, start: Cell, opts: VisitorOpts = {}):VisitGenerator => {\r\n  const {reversed = false} = opts;\r\n  const logic: VisitorLogic = {\r\n    select: (nbos) => nbos.find(n => n[0] === (reversed ? `n` : `s`)),\r\n    options: (grid, cell): ReadonlyArray<Neighbour> => {\r\n      if (reversed) {\r\n        // WALK UP COLUMN, RIGHT-TO-LEFT\r\n        if (cell.y > 0) {\r\n          // Easy case\r\n          cell = {x: cell.x, y: cell.y - 1};\r\n        } else {\r\n          // Top of column\r\n          if (cell.x === 0) {\r\n            // Top-left corner, need to wrap\r\n            cell = {x: grid.cols - 1, y: grid.rows - 1};\r\n          } else {\r\n            cell = {x: cell.x - 1, y: grid.rows - 1};\r\n          }\r\n        }\r\n      } else {\r\n        // WALK DOWN COLUMNS, LEFT-TO-RIGHT\r\n        if (cell.y < grid.rows - 1) {\r\n          // Easy case, move down by one\r\n          cell = {x: cell.x, y: cell.y + 1};\r\n        } else {\r\n          // End of column\r\n          if (cell.x < grid.cols - 1) {\r\n            // Move to next column and start at top\r\n            cell = {x: cell.x + 1, y: 0};\r\n          } else {\r\n            // Move to start of grid\r\n            cell = {x: 0, y: 0};\r\n          }\r\n        }\r\n      }\r\n      return [[reversed ? `n` : `s`, cell]];\r\n    }\r\n  };\r\n  return visitor(logic, grid, start, opts);\r\n};\r\n\r\n/**\r\n * Enumerate rows of grid, returning all the cells in the row\r\n * ```js\r\n * for (const row of Grid.rows(shape)) {\r\n *  // row is an array of Cells.\r\n * }\r\n * ```\r\n * @param grid \r\n * @param start \r\n */\r\nexport const rows = function* (grid: Grid, start: Cell = {x: 0, y: 0}) {\r\n  //eslint-disable-next-line functional/no-let\r\n  let row = start.y;\r\n  //eslint-disable-next-line functional/no-let\r\n  let rowCells: Cell[] = [];\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  for (const c of cells(grid, start)) {\r\n    if (c.y !== row) {\r\n      yield rowCells;\r\n      rowCells = [c];\r\n      row = c.y;\r\n    } else {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      rowCells.push(c);\r\n    }\r\n  }\r\n  if (rowCells.length > 0) yield rowCells;\r\n};\r\n\r\n/**\r\n * Enumerate all cells in an efficient manner. Runs left-to-right, top-to-bottom.\r\n * If end of grid is reached, iterator will wrap to ensure all are visited.\r\n *\r\n * @param grid\r\n * @param start\r\n */\r\nexport const cells = function* (grid: Grid, start: Cell = {x: 0, y: 0}) {\r\n  guardGrid(grid, `grid`);\r\n  guardCell(start, `start`, grid);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let {x, y} = start;\r\n  // eslint-disable-next-line functional/no-let\r\n  let canMove = true;\r\n  // eslint-disable-next-line functional/no-loop-statement\r\n  do {\r\n    yield {x, y};\r\n    x++;\r\n    if (x === grid.cols) {\r\n      y++;\r\n      x = 0;\r\n    }\r\n    if (y === grid.rows) {\r\n      y = 0;\r\n      x = 0;\r\n    }\r\n    if (x === start.x && y === start.y) canMove = false; // Complete\r\n  } while (canMove);\r\n};","import {Lines, Beziers, Rects, Points} from './index.js';\r\n\r\n//eslint-disable-next-line  functional/no-mixed-type\r\nexport type Path = {\r\n  length(): number\r\n/**\r\n   * Returns a point at a relative (0.0-1.0) position along the path\r\n   *\r\n   * @param {number} t Relative position (0.0-1.0)\r\n   * @returns {Point} Point\r\n   */\r\n  interpolate(t: number): Points.Point\r\n  bbox(): Rects.RectPositioned\r\n  toString(): string\r\n  toSvgString(): readonly string[]\r\n  readonly kind: `compound` | `elliptical` | `circular` | `arc` | `bezier/cubic` | `bezier/quadratic` | `line`\r\n}\r\n/**\r\n * Return the start point of a path\r\n *\r\n * @param path\r\n * @return Point\r\n */\r\nexport const getStart = function (path: Path): Points.Point {\r\n  if (Beziers.isQuadraticBezier(path)) return path.a;\r\n  else if (Lines.isLine(path)) return path.a;\r\n  else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\r\n};\r\n\r\n/**\r\n * Return the end point of a path\r\n *\r\n * @param path\r\n * @return Point\r\n */\r\nexport const getEnd = function (path: Path): Points.Point {\r\n  if (Beziers.isQuadraticBezier(path)) return path.b;\r\n  else if (Lines.isLine(path)) return path.b;\r\n  else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\r\n};\r\n\r\nexport type WithBeziers = {\r\n  //eslint-disable-next-line  functional/no-method-signature\r\n  getBeziers(): readonly Path[]\r\n};","import {Path} from './Path.js';\r\nimport {degreeToRadian, Points} from './index.js';\r\n\r\n/**\r\n * An ellipse\r\n */\r\nexport type Ellipse = {\r\n  readonly radiusX: number\r\n  readonly radiusY: number\r\n  /**\r\n   * Rotation, in radians\r\n   */\r\n  readonly rotation?:number\r\n  readonly startAngle?:number\r\n  readonly endAngle?:number\r\n}\r\n\r\n/**\r\n * A {@link Ellipse} with position\r\n */\r\nexport type EllipsePositioned = Points.Point & Ellipse\r\n\r\n\r\nexport const fromDegrees = (radiusX:number, radiusY:number, rotationDeg:number = 0, startAngleDeg:number = 0, endAngleDeg:number = 360):Ellipse => ({\r\n  radiusX, radiusY,\r\n  rotation: degreeToRadian(rotationDeg),\r\n  startAngle: degreeToRadian(startAngleDeg),\r\n  endAngle: degreeToRadian(endAngleDeg)\r\n});\r\n\r\nexport type EllipticalPath = Ellipse & Path & {\r\n  readonly kind: `elliptical`\r\n};","import {degreeToRadian} from \"./index.js\";\r\nimport * as Points from \"./Point.js\";\r\n\r\n/**\r\n * Polar coordinate, made up of a distance and angle in radians.\r\n * Most computations involving Coords require an `origin` as well.\r\n */\r\nexport type Coord = {\r\n  readonly distance: number,\r\n  readonly angleRadian: number\r\n}\r\n\r\n/**\r\n * Converts to Cartesian coordiantes\r\n */\r\ntype ToCartesian = {\r\n  (point:Coord, origin?:Points.Point) :Points.Point\r\n  (distance:number, angleRadians:number, origin?:Points.Point) :Points.Point\r\n}\r\n\r\n/**\r\n * Returns true if `p` seems to be a {@link Coord} (ie has both distance & angleRadian fields)\r\n * @param p \r\n * @returns True if `p` seems to be a Coord\r\n */\r\nexport const isCoord = (p: number|unknown): p is Coord => {\r\n  if ((p as Coord).distance === undefined) return false;\r\n  if ((p as Coord).angleRadian === undefined) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Converts a Cartesian coordinate to polar\r\n * @param point Point\r\n * @param origin Origin\r\n * @returns \r\n */\r\nexport const fromCartesian = (point: Points.Point, origin: Points.Point): Coord => {\r\n  point = Points.subtract(point, origin);\r\n  //eslint-disable-next-line functional/no-let\r\n  //let a =  Math.atan2(point.y, point.x);\r\n  //if (a < 0) a = Math.abs(a);\r\n  //else a = Math.PI + (Math.PI - a);\r\n\r\n  const angle = Math.atan2(point.y, point.x);\r\n  //if (point.x < 0 && point.y > 0) angle += 180;\r\n  //if (point.x > 0 && point.y < 0) angle += 360;\r\n  //if (point.x < 0 && point.y < 0) angle += 180;\r\n  \r\n  return Object.freeze({\r\n    ...point,\r\n    angleRadian: angle,\r\n    distance: Math.sqrt(point.x * point.x + point.y * point.y)\r\n  });\r\n};\r\n\r\n/**\r\n * Converts a polar coordinate to a Cartesian one\r\n * @param a\r\n * @param b \r\n * @param c \r\n * @returns \r\n */\r\nexport const toCartesian:ToCartesian = (a:Coord|number, b?:Points.Point|number, c?:Points.Point): Points.Point => {\r\n  if (isCoord(a)) {\r\n    if (b === undefined) b = Points.Empty;\r\n    if (!Points.isPoint(b)) throw new Error(`Expecting (Coord, Point). Point param wrong type.`);\r\n    return polarToCartesian(a.distance, a.angleRadian, b);\r\n  } else {\r\n    if (typeof a === `number` && typeof b === `number`) {\r\n      if (c === undefined) c = Points.Empty;\r\n      if (!Points.isPoint(c)) throw new Error(`Expecting (number, number, Point). Point param wrong type`);\r\n      return polarToCartesian(a, b, c);\r\n    } else {\r\n      throw new Error(`Expecting parameters of (number, number). Got: (${typeof(a)}, ${typeof(b)}, ${typeof(c)}). a: ${JSON.stringify(a)}`);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an Archimedean spiral. It's a generator.\r\n * \r\n * ```js\r\n * const s = spiral(0.1, 1);\r\n * for (const coord of s) {\r\n *  // Use Polar coord...\r\n *  if (coord.step === 1000) break; // Stop after 1000 iterations\r\n * }\r\n * ```\r\n * \r\n * @param smoothness 0.1 pretty rounded, at around 5 it starts breaking down\r\n * @param zoom At smoothness 0.1, zoom starting at 1 is OK\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* spiral(smoothness:number, zoom:number): IterableIterator<Coord & {readonly step:number}> {\r\n  //eslint-disable-next-line functional/no-let\r\n  let step = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    //eslint-disable-next-line functional/no-let\r\n    const a = smoothness * step++;\r\n    yield {\r\n      distance: zoom * a,\r\n      angleRadian: a,\r\n      step: step\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a rotated coordiante\r\n * @param c Coordinate\r\n * @param amountRadian Amount to rotate, in radians \r\n * @returns \r\n */\r\nexport const rotate = (c:Coord, amountRadian:number): Coord => Object.freeze({\r\n  ...c,\r\n  angleRadian: c.angleRadian + amountRadian\r\n});\r\n\r\n/**\r\n * Returns a rotated coordinate\r\n * @param c Coordinate\r\n * @param amountDeg Amount to rotate, in degrees\r\n * @returns \r\n */\r\nexport const rotateDegrees = (c:Coord, amountDeg:number):Coord => Object.freeze({\r\n  ...c,\r\n  angleRadian: c.angleRadian + degreeToRadian(amountDeg)\r\n});\r\n\r\n/**\r\n * Produces an Archimedian spiral with manual stepping.\r\n * @param step Step number. Typically 0, 1, 2 ...\r\n * @param smoothness 0.1 pretty rounded, at around 5 it starts breaking down\r\n * @param zoom At smoothness 0.1, zoom starting at 1 is OK\r\n * @returns \r\n */\r\nexport const spiralRaw = (step:number, smoothness:number, zoom:number):Coord => {\r\n  const a = smoothness * step;\r\n  return Object.freeze({\r\n    distance: zoom * a,\r\n    angleRadian: a\r\n  });\r\n};\r\n\r\n/**\r\n * Converts a polar coordiante to Cartesian\r\n * @param distance Distance\r\n * @param angleRadians Angle in radians\r\n * @param origin Origin\r\n * @returns \r\n */\r\nconst polarToCartesian = (distance:number, angleRadians:number, origin:Points.Point):Points.Point => {\r\n  Points.guard(origin);\r\n  return Object.freeze({\r\n    x: origin.x + (distance * Math.cos(angleRadians)),\r\n    y: origin.y + (distance * Math.sin(angleRadians)),\r\n  });\r\n};\r\n\r\n\r\n","import {toCartesian} from \"./Polar.js\";\r\nimport {integer as guardInteger} from \"../Guards.js\";\r\nimport {Triangles, Points, Rects} from \"./index.js\";\r\n\r\n/**\r\n * Generates a starburst shape, returning an array of points. By default, initial point is top and horizontally-centred.\r\n * \r\n * ```\r\n * // Generate a starburst with four spikes\r\n * const pts = starburst(4, 100, 200);\r\n * ```\r\n * \r\n * `points` of two produces a lozenge shape.\r\n * `points` of three produces a triangle shape.\r\n * `points` of five is the familiar 'star' shape.\r\n *  \r\n * Note that the path will need to be closed back to the first point to enclose the shape.\r\n * \r\n * @example Create starburst and draw it. Note use of 'loop' flag to close the path\r\n * ```\r\n * const points = starburst(4, 100, 200);\r\n * Drawing.connectedPoints(ctx, pts, {loop: true, fillStyle: `orange`, strokeStyle: `red`});\r\n * ```\r\n * \r\n * Options:\r\n * * initialAngleRadian: angle offset to begin from. This overrides the `-Math.PI/2` default.\r\n * \r\n * @param points Number of points in the starburst. Defaults to five, which produces a typical star\r\n * @param innerRadius Inner radius. A proportionally smaller inner radius makes for sharper spikes. If unspecified, 50% of the outer radius is used.\r\n * @param outerRadius Outer radius. Maximum radius of a spike to origin\r\n * @param opts Options\r\n * @param origin Origin, or `{ x:0, y:0 }` by default.\r\n */\r\nexport const starburst = (outerRadius:number, points:number = 5, innerRadius?:number, origin:Points.Point = {x:0, y:0}, opts?:{readonly initialAngleRadian?:number}):readonly Points.Point[] => {\r\n  guardInteger(points, `positive`, `points`);\r\n  const angle = Math.PI * 2 / points;\r\n  const angleHalf = angle / 2;\r\n\r\n  const initialAngle = opts?.initialAngleRadian ?? -Math.PI/2;\r\n  if (innerRadius === undefined) innerRadius = outerRadius/2;\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let a = initialAngle;\r\n  const pts = [];\r\n  \r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i = 0; i < points; i++) {\r\n    const peak = toCartesian(outerRadius, a, origin);\r\n    const left = toCartesian(innerRadius, a - angleHalf, origin);\r\n    const right = toCartesian(innerRadius, a + angleHalf, origin);\r\n\r\n    //eslint-disable-next-line functional/immutable-data\r\n    pts.push(left, peak);\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (i + 1 < points) pts.push(right);\r\n    a += angle;\r\n  }\r\n  return pts;\r\n};\r\n\r\n\r\nexport type ArrowOpts = {\r\n  readonly arrowSize?:number\r\n  readonly tailLength?:number\r\n  readonly tailThickness?:number\r\n  readonly angleRadian?:number\r\n}\r\n\r\n/**\r\n * Returns the points forming an arrow\r\n * \r\n * @example Create an arrow anchored by its tip at 100,100\r\n * ```js\r\n * const opts = {\r\n *  tailLength: 10,\r\n *  arrowSize: 20,\r\n *  tailThickness: 5,\r\n *  angleRadian: degreeToRadian(45)\r\n * }\r\n * const arrow = Shapes.arrow({x:100, y:100}, `tip`, opts); // Yields an array of points\r\n * \r\n * // Eg: draw points\r\n * Drawing.connectedPoints(ctx, arrow, {strokeStyle: `red`, loop: true});\r\n * ```\r\n * \r\n * @param origin Origin of arrow \r\n * @param from Does origin describe the tip or tail?\r\n * @param opts Options for arrow \r\n * @returns \r\n */\r\nexport const arrow = (origin:Points.Point,  from:`tip`|`tail`, opts:ArrowOpts = {}):readonly Points.Point[] => {\r\n  const tailLength = opts.tailLength ?? 10;\r\n  const tailThickness = opts.tailThickness ?? Math.max(tailLength/5, 5);\r\n  const angleRadian = opts.angleRadian ?? 0;\r\n  const arrowSize = opts.arrowSize ?? Math.max(tailLength/5, 15);\r\n\r\n  const triAngle = Math.PI/2;\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let tri:Triangles.Triangle;\r\n  //eslint-disable-next-line functional/no-let\r\n  let tailPoints:readonly Points.Point[];\r\n\r\n  if (from === `tip`) {\r\n    tri = Triangles.equilateralFromVertex(origin, arrowSize, triAngle);\r\n    tailPoints = Rects.corners(Rects.fromTopLeft(\r\n      {x: tri.a.x - tailLength, y: origin.y - tailThickness / 2},\r\n      tailLength,\r\n      tailThickness\r\n    ));  \r\n  } else {\r\n    //const midY = origin.y - tailThickness/2;\r\n    tailPoints = Rects.corners(Rects.fromTopLeft({x: origin.x, y: origin.y - tailThickness/2}, tailLength, tailThickness));\r\n    tri = Triangles.equilateralFromVertex({x: origin.x + tailLength + arrowSize*0.7, y: origin.y}, arrowSize, triAngle);\r\n  }\r\n\r\n  const arrow = Points.rotate([\r\n    tailPoints[0], tailPoints[1], tri.a,\r\n    tri.b,\r\n    tri.c, tailPoints[2], tailPoints[3]\r\n  ], angleRadian, origin);\r\n\r\n  \r\n  return arrow;\r\n};\r\n","import { Lines,  radianToDegree, Polar, Circles, Rects} from './index.js';\r\nimport * as Points from './Point.js';\r\n\r\nimport {number as guardNumber} from '../Guards.js';\r\n\r\n/**\r\n * Functions for working with equilateral triangles, defined by length\r\n */\r\nexport * as Equilateral from './TriangleEquilateral.js';\r\n\r\n/**\r\n * Functions for working with right-angled triangles, defined by two of three edges\r\n */\r\nexport * as Right from './TriangleRight.js';\r\n\r\nexport * as Isosceles from './TriangleIsosceles.js';\r\n\r\nconst piPi = Math.PI*2;\r\n\r\n/**\r\n * Triangle.\r\n * \r\n * Helpers for creating:\r\n *  - {@link fromFlatArray}: Create from [x1, y1, x2, y2, x3, y3]\r\n *  - {@link fromPoints}: Create from three `{x,y}` sets\r\n *  - {@link fromRadius}: Equilateral triangle of a given radius and center\r\n */\r\nexport type Triangle = {\r\n  readonly a: Points.Point,\r\n  readonly b: Points.Point,\r\n  readonly c: Points.Point\r\n}\r\n\r\n/**\r\n * A triangle consisting of three empty points (Points.Empty)\r\n */\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const Empty = Object.freeze({a: {x:0, y:0}, b:{x:0, y:0}, c:{x:0, y:0}});\r\n\r\n/**\r\n * A triangle consisting of three placeholder points (Points.Placeholder)\r\n */\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const Placeholder = Object.freeze({a: {x:NaN, y:NaN}, b:{x:NaN, y:NaN}, c:{x:NaN, y:NaN}});\r\n\r\n/**\r\n * Returns true if triangle is empty\r\n * @param t \r\n * @returns \r\n */\r\nexport const isEmpty = (t: Triangle): boolean => Points.isEmpty(t.a) && Points.isEmpty(t.b) && Points.isEmpty(t.c);\r\n\r\n/**\r\n * Returns true if triangle is a placeholder\r\n * @param t \r\n * @returns \r\n */\r\nexport const isPlaceholder = (t: Triangle): boolean => Points.isPlaceholder(t.a) && Points.isPlaceholder(t.b) && Points.isPlaceholder(t.c);\r\n\r\n/**\r\n * Applies `fn` to each of a triangle's corner points, returning the result. \r\n * \r\n * @example Add some random to the x of each corner\r\n * ```\r\n * const t = apply(tri, p => {\r\n *  const r = 10;\r\n *  return {\r\n *    x: p.x + (Math.random()*r*2) - r,\r\n *    y: p.y\r\n *  }\r\n * });\r\n * ```\r\n * @param t \r\n * @param fn \r\n * @returns \r\n */\r\nexport const apply = (t:Triangle, fn:(p:Points.Point, label?:string) => Points.Point) => Object.freeze<Triangle>(\r\n  {\r\n    ...t,\r\n    a: fn(t.a, `a`),\r\n    b: fn(t.b, `b`),\r\n    c: fn(t.c, `c`),\r\n  }\r\n);\r\n\r\n/**\r\n * Throws an exception if the triangle is invalid\r\n * @param t \r\n * @param name \r\n */\r\nexport const guard = (t: Triangle, name: string = `t`) => {\r\n  if (t === undefined) throw Error(`{$name} undefined`);\r\n  Points.guard(t.a, name + `.a`);\r\n  Points.guard(t.b, name + `.b`);\r\n  Points.guard(t.c, name + `.c`);\r\n};\r\n\r\n/**\r\n * Returns true if the parameter appears to be a valid triangle\r\n * @param p \r\n * @returns \r\n */\r\nexport const isTriangle = (p: number | unknown): p is Triangle => {\r\n  if (p === undefined) return false;\r\n  const tri = p as Triangle;\r\n  if (!Points.isPoint(tri.a)) return false;\r\n  if (!Points.isPoint(tri.b)) return false;\r\n  if (!Points.isPoint(tri.c)) return false;\r\n  return true; \r\n};\r\n\r\n/**\r\n * Returns true if the two parameters have equal values\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const isEqual = (a: Triangle, b: Triangle): boolean => Points.isEqual(a.a, b.a) && Points.isEqual(a.b, b.b) && Points.isEqual(a.c, b.c);\r\n\r\n/**\r\n * Returns the corners (vertices) of the triangle as an array of points\r\n * @param t \r\n * @returns Array of length three\r\n */\r\nexport const corners = (t:Triangle):readonly Points.Point[] => {\r\n  guard(t);\r\n  return [t.a, t.b, t.c];\r\n};\r\n\r\n/**\r\n * Returns the edges (ie sides) of the triangle as an array of lines\r\n * @param t \r\n * @returns Array of length three\r\n */\r\nexport const edges = (t:Triangle):Lines.PolyLine => {\r\n  guard(t);\r\n  return Lines.joinPointsToLines(t.a, t.b, t.c, t.a);\r\n};\r\n\r\n/**\r\n * Returns the lengths of the triangle sides\r\n * @param t \r\n * @returns Array of length three\r\n */\r\nexport const lengths = (t:Triangle):readonly number[] => {\r\n  guard(t);\r\n  return [\r\n    Points.distance(t.a, t.b),\r\n    Points.distance(t.b, t.c),\r\n    Points.distance(t.c, t.a)\r\n  ];\r\n};\r\n\r\n/**\r\n * Return the three interior angles of the triangle, in radians. \r\n * @param t \r\n * @returns \r\n */\r\nexport const angles = (t:Triangle):readonly number[] => {\r\n  guard(t);\r\n  return [\r\n    Points.angle(t.a, t.b),\r\n    Points.angle(t.b, t.c),\r\n    Points.angle(t.c, t.a)\r\n  ];\r\n};\r\n\r\n/**\r\n * Returns the three interior angles of the triangle, in degrees\r\n * @param t \r\n * @returns \r\n */\r\nexport const anglesDegrees = (t:Triangle):readonly number[] => {\r\n  guard(t);\r\n  return radianToDegree(angles(t));\r\n};\r\n\r\n/**\r\n * Returns true if it is an equilateral triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const isEquilateral = (t:Triangle):boolean => {\r\n  guard(t);\r\n  const [a, b, c] = lengths(t);\r\n  return a === b && b === c;\r\n};\r\n\r\n/**\r\n * Returns true if it is an isoceles triangle\r\n * @param t\r\n * @returns \r\n */\r\nexport const isIsoceles = (t:Triangle):boolean => {\r\n  const [a, b, c] = lengths(t);\r\n  if (a === b) return true;\r\n  if (b === c) return true;\r\n  if (c === a) return true;\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if at least one interior angle is 90 degrees\r\n * @param t \r\n * @returns \r\n */\r\nexport const isRightAngle = (t:Triangle):boolean => (angles(t).some(v => v === Math.PI/2));\r\n\r\n/**\r\n * Returns true if triangle is oblique: No interior angle is 90 degrees\r\n * @param t \r\n * @returns \r\n */\r\nexport const isOblique = (t:Triangle):boolean => !isRightAngle(t);\r\n\r\n/**\r\n * Returns true if triangle is actue: all interior angles less than 90 degrees\r\n * @param t \r\n * @returns \r\n */\r\nexport const isAcute = (t:Triangle):boolean => (!angles(t).some(v => v >= Math.PI/2));\r\n\r\n/**\r\n * Returns true if triangle is obtuse: at least one interior angle is greater than 90 degrees\r\n * @param t \r\n * @returns \r\n */\r\nexport const isObtuse = (t:Triangle):boolean => (angles(t).some(v => v > Math.PI/2));\r\n\r\n/**\r\n * Returns simple centroid of triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const centroid = (t:Triangle):Points.Point => {\r\n  guard(t);\r\n  const total = Points.reduce([t.a, t.b, t.c], (p:Points.Point, acc:Points.Point) => ({\r\n    x: p.x + acc.x,\r\n    y: p.y + acc.y\r\n  }));\r\n  const div = {\r\n    x: total.x / 3,\r\n    y: total.y / 3\r\n  };\r\n  return div;\r\n};\r\n\r\n/**\r\n * Calculates perimeter of a triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const perimeter = (t:Triangle):number => {\r\n  guard(t);\r\n  return edges(t).reduce<number>((acc, v) => acc + Lines.length(v), 0);\r\n};\r\n\r\n/**\r\n * Calculates the area of a triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const area = (t:Triangle):number => {\r\n  guard(t, `t`);\r\n\r\n  // Get length of edges\r\n  const e = edges(t).map(l => Lines.length(l));\r\n\r\n  // Add up length of edges, halve\r\n  const p = (e[0] + e[1] + e[2]) / 2;\r\n  return Math.sqrt(p * (p - e[0]) * (p - e[1]) * (p - e[2]));\r\n};\r\n\r\n/**\r\n * Returns the largest circle enclosed by triangle `t`.\r\n * @param t \r\n */\r\nexport const innerCircle = (t:Triangle):Circles.CirclePositioned => {\r\n  const c = centroid(t);\r\n  const p = perimeter(t) / 2;\r\n  const a = area(t);\r\n  const radius = a / p;\r\n  return {radius, ...c};\r\n};\r\n\r\n/**\r\n * Returns the largest circle touching the corners of triangle `t`.\r\n * @param t \r\n * @returns \r\n */\r\nexport const outerCircle = (t:Triangle):Circles.CirclePositioned => {\r\n  const [a, b, c]= edges(t).map(l => Lines.length(l));\r\n  const cent = centroid(t);\r\n  const radius = a*b*c / Math.sqrt((a+b+c)*(-a+b+c)*(a-b+c)*(a+b-c));\r\n  return {\r\n    radius,\r\n    ...cent\r\n  };\r\n};\r\n\r\n/**\r\n * Returns an equilateral triangle centered at the origin.\r\n * \r\n * ```js\r\n * // Create a triangle at 100,100 with radius of 60\r\n * const tri = fromRadius({x:100,y:100}, 60);\r\n * \r\n * // Triangle with point A upwards, B to the right, C to the left\r\n * constr tri2 = fromRadius({x:100,y:100}, 60, {initialAngleRadian: -Math.PI / 2});\r\n * ```\r\n * \r\n * \r\n * @param origin \r\n * @param length \r\n */\r\nexport const fromRadius = (origin:Points.Point, radius:number, opts:{readonly initialAngleRadian?:number} = {}):Triangle => {\r\n  guardNumber(radius, `positive`, `radius`);\r\n  Points.guard(origin, `origin`);\r\n\r\n  const initialAngleRadian = opts.initialAngleRadian ?? 0;\r\n\r\n  const angles = [initialAngleRadian, initialAngleRadian + piPi*1/3, initialAngleRadian + piPi*2/3];\r\n  const points = angles.map(a => Polar.toCartesian(radius, a, origin));\r\n  return fromPoints(points);\r\n};\r\n\r\n/**\r\n * Rotates the vertices of the triangle around one point (by default, `b`).\r\n * @param triangle Triangle\r\n * @param vertex Name of vertex: a, b or c.\r\n */\r\nexport const rotateByVertex = (triangle:Triangle, amountRadian:number, vertex:`a`|`b`|`c` = `b`):Triangle => {\r\n  const origin = vertex === `a` ? triangle.a : vertex === `b` ? triangle.b : triangle.c;\r\n  return Object.freeze({\r\n    a: Points.rotate(triangle.a, amountRadian, origin),\r\n    b: Points.rotate(triangle.b, amountRadian, origin),\r\n    c: Points.rotate(triangle.c, amountRadian, origin)\r\n  });\r\n};\r\n\r\n/**\r\n * Returns a triangle anchored at `origin` with a given `length` and `angleRadian`.\r\n * The origin will be point `b` of the triangle, and the angle will be the angle for b.\r\n * @param origin Origin\r\n * @param length Length\r\n * @param angleRadian Angle\r\n * @returns \r\n */\r\nexport const equilateralFromVertex = (origin:Points.Point = {x:0, y:0}, length:number = 10, angleRadian:number = Math.PI/2):Triangle => {  \r\n  const a = Points.project(origin, length, (Math.PI - (-angleRadian / 2)));\r\n  const c = Points.project(origin, length, (Math.PI - (angleRadian / 2)));\r\n  return {a, b:origin, c};\r\n};\r\n\r\n\r\n/**\r\n * Returns the coordinates of triangle in a flat array form:\r\n * [xA, yA, xB, yB, xC, yC]\r\n * @param t \r\n * @returns \r\n */\r\nexport const toFlatArray = (t:Triangle): readonly number[] => {\r\n  guard(t);\r\n  return [\r\n    t.a.x, t.a.y,\r\n    t.b.x, t.b.y,\r\n    t.c.x, t.c.y\r\n  ];\r\n};\r\n\r\n/**\r\n * Returns a triangle from a set of coordinates in a flat array form:\r\n * [xA, yA, xB, yB, xC, yC]\r\n * @param coords \r\n * @returns \r\n */\r\nexport const fromFlatArray = (coords: readonly number[]): Triangle => {\r\n  if (!Array.isArray(coords)) throw new Error(`coords expected as array`);\r\n  if (coords.length !== 6) throw new Error(`coords array expected with 6 elements. Got ${coords.length}`);\r\n  return fromPoints(Points.fromNumbers(...coords));\r\n};\r\n\r\n/**\r\n * Returns a triangle from an array of three points\r\n * @param points \r\n * @returns \r\n */\r\nexport const fromPoints = (points: readonly Points.Point[]):Triangle => {\r\n  if (!Array.isArray(points)) throw new Error(`points expected as array`);\r\n  if (points.length !== 3) throw new Error(`points array expected with 3 elements. Got ${points.length}`);\r\n  const t:Triangle = {\r\n    a: points[0],\r\n    b: points[1],\r\n    c: points[2]\r\n  };\r\n  return t;\r\n};\r\n\r\n/**\r\n * Returns the bounding box that encloses the triangle.\r\n * @param t \r\n * @param inflation If specified, box will be inflated by this much. Default: 0.\r\n * @returns \r\n */\r\nexport const bbox = (t:Triangle, inflation = 0):Rects.RectPositioned => {\r\n  const {a, b, c} = t;\r\n  const xMin = Math.min(a.x, b.x, c.x) - inflation;\r\n  const xMax = Math.max(a.x, b.x, c.x) + inflation;\r\n  const yMin = Math.min(a.y, b.y, c.y) - inflation;\r\n  const yMax = Math.max(a.y, b.y, c.y) + inflation;\r\n\r\n  const r:Rects.RectPositioned = {\r\n    x: xMin,\r\n    y: yMin,\r\n    width: xMax - xMin,\r\n    height: yMax - yMin  \r\n  };\r\n  return r;\r\n};\r\n\r\nexport type BarycentricCoord = {\r\n  readonly a: number\r\n  readonly b: number,\r\n  readonly c: number\r\n}\r\n\r\n/**\r\n * Returns the [Barycentric coordinate](https://en.wikipedia.org/wiki/Barycentric_coordinate_system) of a point within a triangle\r\n * \r\n * @param t \r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const barycentricCoord = (t:Triangle, a:Points.Point|number, b?:number):BarycentricCoord => {\r\n  const pt = Points.getPointParam(a, b);\r\n\r\n  const ab = (x:number, y:number, pa:Points.Point, pb:Points.Point) => (pa.y - pb.y) * x + (pb.x - pa.x) * y + pa.x*pb.y - pb.x*pa.y;\r\n  \r\n  const alpha = ab(pt.x, pt.y, t.b, t.c) / ab(t.a.x, t.a.y, t.b, t.c);\r\n  const theta = ab(pt.x, pt.y, t.c, t.a) / ab(t.b.x, t.b.y, t.c, t.a);\r\n  const gamma = ab(pt.x, pt.y, t.a, t.b) / ab(t.c.x, t.c.y, t.a, t.b);\r\n\r\n  return {\r\n    a:alpha,\r\n    b:theta,\r\n    c:gamma\r\n  };\r\n};\r\n\r\n/**\r\n * Convert Barycentric coordinate to Cartesian\r\n * @param t \r\n * @param bc \r\n * @returns \r\n */\r\nexport const barycentricToCartestian = (t:Triangle, bc:BarycentricCoord): Points.Point => {\r\n  guard(t);\r\n  const {a, b, c} = t;\r\n  \r\n  const x = a.x*bc.a + b.x*bc.b + c.x*bc.c;\r\n  const y = a.y*bc.a + b.y*bc.b + c.y*bc.c;\r\n  \r\n  if (a.z && b.z && c.z) {\r\n    const z = a.z*bc.a + b.z*bc.b + c.z*bc.c;\r\n    return Object.freeze({x, y, z});\r\n  } else {\r\n    return Object.freeze({x, y});\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if point is within or on the boundary of triangle\r\n * @param t \r\n * @param a \r\n * @param b \r\n */\r\nexport const intersectsPoint = (t:Triangle, a:Points.Point|number, b?:number):boolean => {\r\n  const box = bbox(t);\r\n\r\n  const pt = Points.getPointParam(a, b);\r\n\r\n  // If it's not in the bounding box, can return false straight away\r\n  if (!Rects.intersectsPoint(box, pt)) return false;\r\n\r\n  const bc = barycentricCoord(t, pt);\r\n\r\n  return 0 <= bc.a && bc.a <= 1 && 0 <= bc.b && bc.b <= 1 && 0 <= bc.c && bc.c <= 1;\r\n};\r\n\r\n/**\r\n * Returns a triangle that is rotated by `angleRad`. By default it rotates\r\n * around its center but an arbitrary `origin` point can be provided.\r\n * \r\n * ```js\r\n * // Rotate triangle by 5 degrees\r\n * rotate(triangle, degreeToRadian(5));\r\n * \r\n * // Rotate by 90 degrees\r\n * rotate(triangle, Math.PI / 2);\r\n * ```\r\n * @param line Line to rotate\r\n * @param amountRadian Angle in radians to rotate by\r\n * @param origin Point to rotate around. If undefined, middle of line will be used\r\n * @returns \r\n */\r\nexport const rotate = (t:Triangle, amountRadian?:number, origin?:Points.Point):Triangle => {\r\n  if (amountRadian === undefined || amountRadian === 0) return t;\r\n  if (origin === undefined) origin = centroid(t);\r\n  return Object.freeze({\r\n    ...t,\r\n    a: Points.rotate(t.a, amountRadian, origin),\r\n    b: Points.rotate(t.b, amountRadian, origin),\r\n    c: Points.rotate(t.c, amountRadian, origin)\r\n  });\r\n};","import {Circle} from './Circle.js';\r\nimport {Point} from './Point.js';\r\nimport {Triangle} from './Triangle.js';\r\n\r\nconst pi4over3 = Math.PI*4/3;\r\nconst pi2over3 = Math.PI*2/3;\r\n\r\nexport type TriangleEquilateral = {\r\n  readonly length:number\r\n} | number;\r\n\r\n\r\nconst resolveLength = (t:TriangleEquilateral):number => {\r\n  if (typeof t === `number`) return t;\r\n  return t.length;\r\n};\r\n\r\n/**\r\n * Returns a positioned `Triangle` from an equilateral triangle definition.\r\n * By default the rotation is such that point `a` and `c` are lying on the horizontal, \r\n * and `b` is the upward-facing tip.\r\n * \r\n * Default is a triangle pointing upwards with b at the top, c to the left and b to right on the baseline.\r\n * \r\n * Example rotation values in radians:\r\n * * ▶️ 0: a and c on vertical, b at the tip\r\n * * ◀️ Math.PI: `c`and `a` are on vertical, with `b` at the tip.\r\n * * 🔽 Math.PI/2: `c` and `a` are on horizontal, `c` to the left. `b` at the bottom.\r\n * * 🔼 Math.PI*1.5: `c` and `a` are on horizontal, `c` to the right. `b` at the top. (default)\r\n * @param t \r\n * @param origin \r\n * @param rotationRad \r\n * @returns \r\n */\r\nexport const fromCenter = (t:TriangleEquilateral, origin:Point = {x: 0, y: 0 }, rotationRad?:number):Triangle => {\r\n  const r = resolveLength(t) / Math.sqrt(3);\r\n  const rot = rotationRad ?? Math.PI*1.5;\r\n  const b = {\r\n    x: r * Math.cos(rot) + origin.x,\r\n    y: r * Math.sin(rot) + origin.y\r\n  };\r\n  const a = {\r\n    x: r * Math.cos(rot + pi4over3) + origin.x,\r\n    y: r * Math.sin(rot + pi4over3) + origin.y\r\n  };\r\n  const c = {\r\n    x: r * Math.cos(rot + pi2over3) + origin.x,\r\n    y: r * Math.sin(rot + pi2over3) + origin.y\r\n  };\r\n\r\n  return Object.freeze({a, b, c });\r\n};\r\n\r\n/**\r\n * Calculate center from the given point A\r\n * @param t \r\n * @param ptA \r\n * @returns \r\n */\r\nexport const centerFromA = (t:TriangleEquilateral, ptA: Point = {x:0, y:0}):Point => {\r\n  const r = resolveLength(t);\r\n  const {radius} = incircle(t);\r\n  return  {\r\n    x: ptA.x + r/2,\r\n    y: ptA.y - radius\r\n  };\r\n};\r\n\r\n/**\r\n * Calculate center from the given point B\r\n * @param t \r\n * @param ptB\r\n * @returns \r\n */\r\nexport const centerFromB = (t:TriangleEquilateral, ptB: Point = {x:0, y:0}):Point => {\r\n  const {radius} = incircle(t);\r\n  return  {\r\n    x: ptB.x,\r\n    y: ptB.y + (radius*2)\r\n  };\r\n};\r\n\r\n/**\r\n * Calculate center from the given point C\r\n * @param t \r\n * @param ptC\r\n * @returns \r\n */\r\nexport const centerFromC = (t:TriangleEquilateral, ptC: Point = {x:0, y:0}):Point => {\r\n  const r = resolveLength(t);\r\n  const {radius} = incircle(t);\r\n\r\n  return  {\r\n    x: ptC.x - r/2,\r\n    y: ptC.y - (radius)\r\n  };\r\n};\r\n\r\n/**\r\n * Returns the height (or rise) of an equilateral triangle.\r\n * Ie. from one vertex to the perpendicular edge. \r\n * (line marked x in the diagram below)\r\n * \r\n * ```\r\n *      .\r\n *     .x .\r\n *    . x  .\r\n *   .  x   .\r\n *  ..........\r\n * ```\r\n * @param t \r\n */\r\nexport const height = (t:TriangleEquilateral):number => Math.sqrt(3) / 2 * resolveLength(t);\r\n\r\nexport const perimeter = (t:TriangleEquilateral):number => resolveLength(t)*3;\r\n\r\nexport const area = (t:TriangleEquilateral):number => Math.pow(resolveLength(t), 2) * Math.sqrt(3) / 4;\r\n\r\n/**\r\n * Circle that encompasses all points of triangle\r\n * @param t \r\n */\r\nexport const circumcircle = (t:TriangleEquilateral):Circle => ({\r\n  radius: Math.sqrt(3) / 3 * resolveLength(t)\r\n});\r\n\r\n/**\r\n * Circle that is inside the edges of the triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const incircle = (t:TriangleEquilateral):Circle => ({\r\n  radius: Math.sqrt(3) / 6 * resolveLength(t)\r\n});","import { Points, Triangles} from \"./index.js\";\r\nimport {Circle} from \"./Circle\";\r\n\r\nexport type Right = {\r\n  readonly adjacent?: number\r\n  readonly hypotenuse?: number\r\n  readonly opposite?: number\r\n}\r\n\r\nexport type DefinedRight = {\r\n  readonly adjacent: number\r\n  readonly hypotenuse: number\r\n  readonly opposite: number\r\n}\r\n\r\n/**\r\n * Returns a positioned triangle from a point for A.\r\n * \r\n * ```  \r\n *             c (90 deg)\r\n *             .\r\n *          .   .\r\n *       .       .\r\n *    .           .\r\n * a .............. b\r\n * ```\r\n * @param t \r\n * @param origin \r\n * @returns \r\n */\r\nexport const fromA = (t:Right, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const tt = resolveLengths(t);\r\n  const seg = hypotenuseSegments(t);\r\n  const h = height(t);\r\n  const a = {x: origin.x, y:origin.y};\r\n  const b = {x: origin.x + tt.hypotenuse, y: origin.y};\r\n  const c = {x: origin.x + seg[1], y: origin.y - h};\r\n  return {a, b, c};\r\n};\r\n\r\n/**\r\n * Returns a positioned triangle from a point for B.\r\n * \r\n * ```     \r\n *             c (90 deg)\r\n *             .\r\n *          .   .\r\n *       .       .\r\n *    .           .\r\n * a .............. b\r\n * ```\r\n * @param t \r\n * @param origin \r\n * @returns \r\n */\r\nexport const fromB = (t:Right, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const tt = resolveLengths(t);\r\n  const seg = hypotenuseSegments(t);\r\n  const h = height(t);\r\n  const b = {x: origin.x, y:origin.y};\r\n  const a = {x: origin.x - tt.hypotenuse, y: origin.y};\r\n  const c = {x: origin.x - seg[0], y: origin.y - h};\r\n  return {a, b, c};\r\n};\r\n\r\n/**\r\n * Returns a positioned triangle from a point for C.\r\n * \r\n * ```\r\n *             c (90 deg)\r\n *             .\r\n *          .   .\r\n *       .       .\r\n *    .           .\r\n * a .............. b\r\n * ```\r\n * @param t \r\n * @param origin \r\n * @returns \r\n */\r\nexport const fromC = (t:Right, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const seg = hypotenuseSegments(t);\r\n  const h = height(t);\r\n  const c = {x: origin.x, y:origin.y};\r\n  const a = {x: origin.x - seg[1], y: origin.y + h};\r\n  const b = {x: origin.x + seg[0], y: origin.y + h};\r\n  return {a, b, c};\r\n};\r\n\r\n/**\r\n * Returns a right triangle with all lengths defined.\r\n * At least two lengths must already exist\r\n * @param t \r\n * @returns \r\n */\r\nexport const resolveLengths = (t:Right):DefinedRight => {\r\n  const a = t.adjacent;\r\n  const o = t.opposite;\r\n  const h = t.hypotenuse;\r\n\r\n  if (a !== undefined && o !== undefined) {\r\n    return {\r\n      ...t,\r\n      adjacent: a,\r\n      opposite: o,\r\n      hypotenuse: Math.sqrt(a*a + o*o)\r\n    };\r\n  } else if (a && h) {\r\n    return {\r\n      ...t,\r\n      adjacent: a,\r\n      hypotenuse: h,\r\n      opposite: h*h - a*a \r\n    };\r\n  } else if (o && h) {\r\n    return {\r\n      ...t,\r\n      hypotenuse: h,\r\n      opposite: o,\r\n      adjacent: h*h - o*o \r\n    };\r\n  } else if (t.opposite && t.hypotenuse && t.adjacent) {\r\n    return t as DefinedRight;\r\n  }\r\n  throw new Error(`Missing at least two edges`);\r\n};\r\n\r\n/**\r\n * Height of right-triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const height = (t:Right):number => {\r\n  const tt = resolveLengths(t);\r\n  const p = tt.opposite*tt.opposite / tt.hypotenuse;\r\n  const q = tt.adjacent*tt.adjacent / tt.hypotenuse;\r\n  return Math.sqrt(p * q);\r\n};\r\n\r\n/**\r\n * Returns the lengths of the hypotenuse split into p and q segments.\r\n * In other words, if one makes a line from the right-angle vertex down to hypotenuse.\r\n * \r\n * [See here](https://rechneronline.de/pi/right-triangle.php)\r\n * @param t \r\n * @returns \r\n */\r\nexport const hypotenuseSegments = (t:Right):readonly [p:number, q:number] => {\r\n  const tt = resolveLengths(t);\r\n  const p = tt.opposite*tt.opposite / tt.hypotenuse;\r\n  const q = tt.adjacent*tt.adjacent / tt.hypotenuse;\r\n  return [p, q];\r\n};\r\n\r\n\r\nexport const perimeter = (t:Right):number => {\r\n  const tt= resolveLengths(t);\r\n  return tt.adjacent + tt.hypotenuse + tt.opposite;\r\n};\r\n\r\nexport const area = (t:Right):number => {\r\n  const tt = resolveLengths(t);\r\n  return tt.opposite * tt.adjacent / 2;\r\n};\r\n\r\n/**\r\n * Angle (in radians) between hypotenuse and adjacent edge\r\n * @param t \r\n * @returns \r\n */\r\nexport const angleAtPointA = (t:Right):number => {\r\n  const tt = resolveLengths(t);\r\n  return Math.acos(\r\n    (tt.adjacent*tt.adjacent + tt.hypotenuse*tt.hypotenuse - tt.opposite*tt.opposite)\r\n    / \r\n    (2*tt.adjacent*tt.hypotenuse)\r\n  );\r\n};\r\n\r\n/**\r\n * Angle (in radians) between opposite edge and hypotenuse\r\n * @param t \r\n * @returns \r\n */\r\nexport const angleAtPointB = (t:Right):number => {\r\n  const tt = resolveLengths(t);\r\n  console.log(tt);\r\n  return Math.acos(\r\n    (tt.opposite*tt.opposite + tt.hypotenuse*tt.hypotenuse - tt.adjacent*tt.adjacent)\r\n    / \r\n    (2*tt.opposite*tt.hypotenuse)\r\n  );\r\n};\r\n\r\n/**\r\n * Returns the median line lengths a, b and c in an array.\r\n * \r\n * The median lines are the lines from each vertex to the center.\r\n * \r\n * @param t \r\n * @returns \r\n */\r\nexport const medians = (t:Right):readonly [a:number, b:number, c:number] => {\r\n  const tt = resolveLengths(t);\r\n  const b = tt.adjacent*tt.adjacent;\r\n  const c = tt.hypotenuse*tt.hypotenuse;\r\n  const a = tt.opposite*tt.opposite;\r\n  \r\n  return [\r\n    Math.sqrt(2*(b+c) -a) /2,\r\n    Math.sqrt(2*(c+a) - b) /2,\r\n    Math.sqrt(2*(a+b) - c) /2\r\n  ];\r\n};\r\n\r\n/**\r\n * The circle which passes through the points of the triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const circumcircle = (t:Right):Circle => {\r\n  const tt = resolveLengths(t);\r\n  return { radius: tt.hypotenuse / 2};\r\n};\r\n\r\n/**\r\n * Circle enclosed by triangle\r\n * @param t \r\n * @returns \r\n */\r\nexport const incircle = (t:Right):Circle => {\r\n  const tt = resolveLengths(t);\r\n  return {\r\n    radius: (tt.adjacent + tt.opposite - tt.hypotenuse) / 2\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Returns the opposite length of a right-angle triangle,\r\n * marked here\r\n * \r\n * ```\r\n *    .  <\r\n *   ..  <\r\n * ....  <\r\n * ```\r\n * \r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad\r\n * @param adjacent \r\n * @returns \r\n */\r\nexport const oppositeFromAdjacent = (angleRad:number, adjacent:number): number => Math.tan(angleRad) * adjacent;\r\n\r\n/**\r\n * Returns the opposite length of a right-angle triangle,\r\n * marked here\r\n * \r\n * ```\r\n *    .  <\r\n *   ..  <\r\n * ....  <\r\n * ```\r\n * \r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad\r\n * @param hypotenuse \r\n * @returns \r\n */\r\nexport const oppositeFromHypotenuse = (angleRad:number, hypotenuse:number): number => Math.sin(angleRad) * hypotenuse;\r\n\r\n\r\n/**\r\n * Returns the adjecent length of a right-angle triangle,\r\n * marked here\r\n * ```\r\n *    .  \r\n *   ..  o\r\n * ....  \r\n * ^^^^\r\n * ```\r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad \r\n * @param adjacent \r\n * @returns \r\n */\r\nexport const adjacentFromHypotenuse = (angleRad:number, hypotenuse:number):number => Math.cos(angleRad) * hypotenuse;\r\n\r\n/**\r\n * Returns the adjecent length of a right-angle triangle,\r\n * marked here\r\n * ```\r\n *    .  \r\n *   ..  o\r\n * ....  \r\n * ^^^^\r\n * ```\r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad \r\n * @param opposite \r\n * @returns \r\n */\r\nexport const adjacentFromOpposite = (angleRad:number, opposite:number):number => opposite / Math.tan(angleRad);\r\n\r\n/**\r\n * Returns the hypotenuse length of a right-angle triangle,\r\n * marked here\r\n * ``` \r\n *      .\r\n * >   ..\r\n * >  ...  \r\n * > ....  opp\r\n *  .....  \r\n *   adj \r\n * ```\r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad \r\n * @param adjacent \r\n * @returns \r\n */\r\nexport const hypotenuseFromOpposite = (angleRad:number, opposite:number):number => opposite / Math.sin(angleRad);\r\n\r\n/**\r\n * Returns the hypotenuse length of a right-angle triangle,\r\n * marked here\r\n * ``` \r\n *      .\r\n * >   ..\r\n * >  ...  \r\n * > ....  opp\r\n *  .....  \r\n *   adj \r\n * ```\r\n * This is just:\r\n * ```js\r\n * opposite = Math.tan(angle) * adjacent\r\n * ```\r\n * @param angleRad \r\n * @param adjacent \r\n * @returns \r\n */\r\nexport const hypotenuseFromAdjacent = (angleRad:number, adjacent:number):number => adjacent / Math.cos(angleRad);","import {Points, Triangles} from \"./index.js\";\r\nimport {Circle} from \"./Circle\";\r\n\r\nexport type Isosceles  = {\r\n  readonly legs: number\r\n  readonly base: number\r\n}\r\n\r\n\r\nexport const baseAngle = (t:Isosceles):number => Math.acos(t.base /  (2*t.legs));\r\n\r\nexport const apexAngle = (t:Isosceles):number => {\r\n  const aa = t.legs*t.legs;\r\n  const cc = t.base*t.base;\r\n  return Math.acos((2*aa - cc) / (2*aa));\r\n};\r\n\r\nexport const height = (t:Isosceles):number => {\r\n  const aa = t.legs*t.legs;\r\n  const cc = t.base*t.base;\r\n  return Math.sqrt((4*aa - cc) / 4);\r\n};\r\n\r\nexport const legHeights = (t:Isosceles):number => {\r\n  const b = baseAngle(t);\r\n  return t.base * Math.sin(b); \r\n};\r\n\r\nexport const perimeter =(t:Isosceles):number => 2*t.legs + t.base;\r\n\r\nexport const area = (t:Isosceles):number => {\r\n  const h = height(t);\r\n  return h * t.base / 2;\r\n};\r\n\r\nexport const circumcircle = (t:Isosceles):Circle => {\r\n  const h = height(t);\r\n  const hh = h*h;\r\n  const cc = t.base*t.base;\r\n  return {radius: (4*hh + cc) / (8*h) };\r\n};\r\n\r\nexport const incircle = (t:Isosceles):Circle => {\r\n  const h = height(t);\r\n  return {radius: t.base * h / (2 * t.legs + t.base)};\r\n};\r\n\r\nexport const medians = (t:Isosceles):readonly [a:number, b:number, c:number] => {\r\n  const aa = t.legs*t.legs;\r\n  const cc = t.base*t.base;\r\n  const medianAB = Math.sqrt(aa + 2 * cc) / 2;\r\n  const medianC = Math.sqrt(4*aa - cc) / 2;\r\n  return [medianAB, medianAB, medianC];\r\n};\r\n\r\n/**\r\n * Returns a positioned `Triangle` based on a center origin.\r\n * Center is determined by the intesecting of the medians.\r\n * \r\n * See: https://rechneronline.de/pi/isosceles-triangle.php\r\n * @param t \r\n * @param origin \r\n * @returns \r\n */\r\nexport const fromCenter = (t:Isosceles, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const h = height(t);\r\n  const incircleR = incircle(t).radius;\r\n  const verticalToApex = h - incircleR;\r\n \r\n  const a = {x: origin.x - t.base/2, y: origin.y + incircleR};\r\n  const b = {x: origin.x + t.base/2, y: origin.y + incircleR};\r\n  const c = {x: origin.x, y: origin.y - verticalToApex};\r\n  return {a, b, c};\r\n};\r\n\r\n\r\nexport const fromA = (t:Isosceles, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const h = height(t);\r\n  const a = {x: origin.x, y:origin.y};\r\n  const b = {x: origin.x + t.base, y: origin.y};\r\n  const c = {x: origin.x + t.base/2, y: origin.y - h};\r\n  return {a, b, c};\r\n};\r\n\r\nexport const fromB = (t:Isosceles, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const h = height(t);\r\n  const b = {x: origin.x, y:origin.y};\r\n  const a = {x: origin.x - t.base, y: origin.y};\r\n  const c = {x: origin.x - t.base/2, y: origin.y - h};\r\n  return {a, b, c};\r\n};\r\n\r\nexport const fromC = (t:Isosceles, origin:Points.Point = {x:0, y:0}):Triangles.Triangle => {\r\n  const h = height(t);\r\n  const c = {x: origin.x, y:origin.y};\r\n  const a = {x: origin.x - t.base/2, y: origin.y + h};\r\n  const b = {x: origin.x + t.base/2, y: origin.y + h};\r\n  return {a, b, c};\r\n};\r\n","/**\r\n * Generic support for Bluetooth LE devices\r\n */\r\nexport * as Bluetooth from './NordicBleDevice.js';\r\n\r\nexport * as AudioAnalysers from './AudioAnalyser.js';\r\nexport * as AudioVisualisers from './AudioVisualiser.js';\r\n\r\nexport {StringReceiveBuffer} from './StringReceiveBuffer.js';\r\nexport {StringWriteBuffer} from './StringWriteBuffer.js';\r\nexport {Codec} from './Codec.js';\r\n\r\n/**\r\n * Espruino-based devices connected via Bluetooth LE\r\n * \r\n * Overview:\r\n * * {@link puck}: Connect ./EspruinoBleDevice.js\r\n * * {@link Espruino.connectBle}: Connect to a generic Espruino via BLE\r\n */\r\nexport * as Espruino from './Espruino.js';\r\n\r\nexport * as Camera from './Camera.js';\r\n\r\nexport {FrameProcessor, FrameProcessorOpts} from './FrameProcessor';\r\n\r\n/**\r\n * Microcontrollers such as Arduinos connected via USB serial\r\n * \r\n * Overview\r\n * * {@link Serial.Device}\r\n * \r\n */\r\nexport * as Serial from './Serial.js';\r\n\r\n","import {BleDevice} from \"./BleDevice.js\";\r\n\r\nexport const defaultOpts = {\r\n  chunkSize: 20,\r\n  service: `6e400001-b5a3-f393-e0a9-e50e24dcca9e`,\r\n  txGattCharacteristic: `6e400002-b5a3-f393-e0a9-e50e24dcca9e`,\r\n  rxGattCharacteristic: `6e400003-b5a3-f393-e0a9-e50e24dcca9e`,\r\n  name: `NordicDevice`,\r\n  connectAttempts: 5,\r\n  debug: false\r\n};\r\n\r\nexport type Opts = {\r\n  readonly chunkSize?:number\r\n  readonly name?:string\r\n  readonly connectAttempts?:number\r\n  readonly debug?:boolean\r\n}\r\n\r\nexport class NordicBleDevice extends BleDevice  {\r\n  constructor(device: BluetoothDevice, opts:Opts = {}) {\r\n    super(device, {...defaultOpts, ...opts});\r\n  }\r\n}\r\n\r\n","\r\n/**\r\n * Handles utf-8 text encoding/decoding\r\n */\r\nexport class Codec {\r\n  enc = new TextEncoder();\r\n  dec = new TextDecoder(`utf-8`);\r\n\r\n  /**\r\n   * Convert string to Uint8Array buffer\r\n   * @param str \r\n   * @returns \r\n   */\r\n  toBuffer(str: string) {\r\n    return this.enc.encode(str);\r\n  }\r\n\r\n  /**\r\n   * Returns a string from a provided buffer\r\n   * @param buffer \r\n   * @returns \r\n   */\r\n  fromBuffer(buffer: ArrayBuffer) {\r\n    return this.dec.decode(buffer);\r\n  }\r\n}","\r\n/**\r\n * Receives text\r\n */\r\nexport class StringReceiveBuffer {\r\n  buffer: string = ``;\r\n  stream:WritableStream<string>|undefined;\r\n\r\n  constructor(private onData: (data: string) => void, public separator = `\\n`) {\r\n\r\n  }\r\n\r\n  clear() {\r\n    this.buffer = ``;\r\n  }\r\n\r\n  writable() {\r\n    if (this.stream === undefined) this.stream = this.createWritable();\r\n    return this.stream;\r\n  }\r\n\r\n  private createWritable() {\r\n    //eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const b = this;\r\n    return new WritableStream<string>({\r\n      write(chunk) {\r\n        b.add(chunk);\r\n      },\r\n      close() {\r\n        b.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  addImpl(str: string):string {\r\n    // Look for separator in new string\r\n    const pos = str.indexOf(this.separator);\r\n    if (pos < 0) {\r\n      // Not found, just add to buffer and return\r\n      this.buffer += str;\r\n      return ``;\r\n    }\r\n\r\n    // Found! Trigger callback for existing buffer and part of new string\r\n    const part = str.substring(0, pos);\r\n    try {\r\n      this.onData(this.buffer + part);\r\n      str = str.substring(part.length+this.separator.length);\r\n    } catch (ex) {\r\n      console.warn(ex);\r\n    }\r\n    \r\n    this.buffer = ``;\r\n\r\n    return str;\r\n  }\r\n\r\n  add(str:string) {\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    while (str.length > 0) {\r\n      str = this.addImpl(str);\r\n    }\r\n  }\r\n}","import {QueueMutable, queueMutable} from \"../collections\";\r\nimport {Continuously, continuously} from \"../flow\";\r\nimport {splitByLength} from \"../Text\";\r\n\r\nexport class StringWriteBuffer {\r\n  paused = false;\r\n  queue: QueueMutable<string>;\r\n  writer: Continuously;\r\n  intervalMs: number;\r\n  stream:WritableStream<string>|undefined;\r\n\r\n  constructor(private onData: (data: string) => Promise<void>, private chunkSize = -1) {\r\n    this.intervalMs = 10;\r\n    this.queue = queueMutable<string>();\r\n    this.writer = continuously(() => this.onWrite(), this.intervalMs);\r\n  }\r\n\r\n  clear() {\r\n    this.queue = queueMutable<string>();\r\n  }\r\n\r\n  writable() {\r\n    if (this.stream === undefined) this.stream = this.createWritable();\r\n    return this.stream;\r\n  }\r\n\r\n  private createWritable() {\r\n    //eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    const b = this;\r\n    return new WritableStream<string>({\r\n      write(chunk) {\r\n        b.add(chunk);\r\n      },\r\n      close() {\r\n        b.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  async onWrite(): Promise<boolean> {\r\n    if (this.queue.isEmpty) {\r\n      //console.warn(`WriteBuffer.onWrite: queue empty`);\r\n      return false; // Stop continuously\r\n    }\r\n\r\n    if (this.paused) {\r\n      console.warn(`WriteBuffer.onWrite: paused...`);\r\n      return true; // Keep going tho\r\n    }\r\n\r\n    // Dequeue and send\r\n    const s = this.queue.dequeue();\r\n    if (s === undefined) return false;\r\n    await this.onData(s);\r\n\r\n    return true;\r\n  }\r\n\r\n  add(str: string) {\r\n    // Add whole string or chunked string\r\n    if (this.chunkSize > 0) {\r\n      this.queue.enqueue(...splitByLength(str, this.chunkSize));\r\n    } else {\r\n      this.queue.enqueue(str);\r\n    }\r\n\r\n    // Run continuously loop if it's not already running\r\n    this.writer.start();\r\n  }\r\n}","import {integer as guardInteger} from '../Guards.js';\r\nimport {sleep} from './Sleep.js';\r\n\r\nexport type CancelToken = {\r\n  readonly cancel:boolean\r\n};\r\n\r\n/**\r\n * Keeps executing `calback` until it runs without an exception being thrown.\r\n * \r\n * ```\r\n * // Retry up to five times, starting at 200ms delay\r\n * await retry(async () => {\r\n *  // Do something, sometimes throwing an error\r\n * }, 5, 200);\r\n * ```\r\n * \r\n * Each loop will run at twice the duration of the last, beginning at `startingTimeoutMs`.\r\n * \r\n * @param callback Async code to run\r\n * @param attempts Number of times to try\r\n * @param startingTimeoutMs Time to sleep for first iteration\r\n * @param cancelToken If provided, this is checked before and after each sleep to see if retry should continue. If cancelled, promise will be rejected\r\n * @returns \r\n */\r\nexport const retry = async <V>(callback:() => Promise<V>, attempts:number = 5, startingTimeoutMs:number = 200, cancelToken?:CancelToken):Promise<V> => {\r\n  guardInteger(attempts, `positive`, `attempts`);\r\n  guardInteger(startingTimeoutMs, `positive`, `startingTimeoutMs`);\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let timeout = startingTimeoutMs;\r\n  //eslint-disable-next-line functional/no-let\r\n  let totalSlept = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (attempts > 0) {\r\n    try {\r\n      return await callback();\r\n    } catch (ex) {\r\n      attempts--;\r\n    }\r\n    totalSlept += timeout;\r\n\r\n    if (cancelToken && cancelToken.cancel) throw new Error(`Cancelled`);\r\n    await sleep(timeout);\r\n    if (cancelToken && cancelToken.cancel) throw new Error(`Cancelled`);\r\n\r\n    timeout *= 2;\r\n  }\r\n  throw new Error(`Retry failed after ${attempts} attempts over ${totalSlept} ms.`);\r\n\r\n};","import {SimpleEventEmitter} from \"../Events.js\";\r\nimport { StateMachine} from \"../flow/StateMachine.js\";\r\nimport {indexOfCharCode, omitChars} from \"../Text.js\";\r\nimport {Codec} from \"./Codec.js\";\r\nimport {StringReceiveBuffer} from \"./StringReceiveBuffer.js\";\r\nimport {StringWriteBuffer} from \"./StringWriteBuffer.js\";\r\nimport {retry} from \"../flow/Retry.js\";\r\nimport {Events} from \"./Espruino.js\";\r\n\r\nexport type Opts = {\r\n  readonly service:string\r\n  readonly rxGattCharacteristic:string\r\n  readonly txGattCharacteristic:string\r\n  readonly chunkSize:number\r\n  readonly name:string\r\n  readonly connectAttempts:number\r\n  readonly debug:boolean\r\n}\r\n\r\nexport class BleDevice extends SimpleEventEmitter<Events> {\r\n  states: StateMachine;\r\n  codec: Codec;\r\n  rx: BluetoothRemoteGATTCharacteristic | undefined;\r\n  tx: BluetoothRemoteGATTCharacteristic | undefined;\r\n  gatt: BluetoothRemoteGATTServer | undefined;\r\n  verboseLogging = false;\r\n\r\n  rxBuffer: StringReceiveBuffer;\r\n  txBuffer: StringWriteBuffer;\r\n\r\n  constructor(private device: BluetoothDevice, private config:Opts) {\r\n    super();\r\n    this.verboseLogging = config.debug;\r\n    this.txBuffer = new StringWriteBuffer(async data => {\r\n      await this.writeInternal(data);\r\n    }, config.chunkSize);\r\n\r\n    this.rxBuffer = new StringReceiveBuffer(line => {\r\n      this.fireEvent(`data`, { data:line });\r\n    });\r\n\r\n    this.codec = new Codec();\r\n    this.states = new StateMachine(`ready`, {\r\n      ready: `connecting`,\r\n      connecting: [`connected`, `closed`],\r\n      connected: [`closed`],\r\n      closed: `connecting`\r\n    });\r\n\r\n    this.states.addEventListener(`change`, evt => {\r\n      this.fireEvent(`change`, evt);\r\n      this.verbose(`${evt.priorState} -> ${evt.newState}`);\r\n      if (evt.priorState === `connected`) {\r\n        // Clear out buffers\r\n        this.rxBuffer.clear();\r\n        this.txBuffer.clear();\r\n      }\r\n    });\r\n\r\n    device.addEventListener(`gattserverdisconnected`, () => {\r\n      if (this.isClosed) return;\r\n      this.verbose(`GATT server disconnected`);\r\n      this.states.state = `closed`;\r\n    });\r\n\r\n    this.verbose(`ctor ${device.name} ${device.id}`);\r\n  }\r\n\r\n  get isConnected():boolean {\r\n    return this.states.state === `connected`;\r\n  }\r\n\r\n  get isClosed():boolean {\r\n    return this.states.state === `closed`;\r\n  }\r\n\r\n  write(txt: string) {\r\n    if (this.states.state !== `connected`) throw new Error(`Cannot write while state is ${this.states.state}`);\r\n    this.txBuffer.add(txt);\r\n  }\r\n\r\n  private async writeInternal(txt: string) {\r\n    this.verbose(`writeInternal ${txt}`);\r\n    const tx = this.tx;\r\n    if (tx === undefined) throw new Error(`Unexpectedly without tx characteristic`);\r\n    try {\r\n      await tx.writeValue(this.codec.toBuffer(txt));\r\n    } catch (ex:unknown) {\r\n      this.warn(ex);\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.states.state !== `connected`) return;\r\n    this.gatt?.disconnect();\r\n  }\r\n\r\n  async connect() {\r\n    const attempts = this.config.connectAttempts ?? 3;\r\n\r\n    this.states.state = `connecting`;\r\n\r\n    this.verbose(`connect`);\r\n    const gatt = this.device.gatt;\r\n    if (gatt === undefined) throw new Error(`Gatt not available on device`);\r\n\r\n    await retry(async () => {\r\n      const server = await gatt.connect();\r\n      this.verbose(`Getting primary service`);\r\n      const service = await server.getPrimaryService(this.config.service);\r\n      this.verbose(`Getting characteristics`);\r\n      const rx = await service.getCharacteristic(this.config.rxGattCharacteristic);\r\n      const tx = await service.getCharacteristic(this.config.txGattCharacteristic);\r\n  \r\n      rx.addEventListener(`characteristicvaluechanged`, (evt) => this.onRx(evt));\r\n      this.rx = rx;\r\n      this.tx = tx;\r\n      this.gatt = gatt;\r\n      this.states.state = `connected`;\r\n  \r\n      await rx.startNotifications();\r\n    }, attempts, 200);\r\n  }\r\n\r\n  private onRx(evt: Event) {\r\n    const rx = this.rx;\r\n    if (rx === undefined) return;\r\n\r\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const view = (evt.target as any).value as DataView;\r\n    if (view === undefined) return;\r\n\r\n    //eslint-disable-next-line functional/no-let\r\n    let str = this.codec.fromBuffer(view.buffer);\r\n\r\n    // Check for flow control chars\r\n    const plzStop = indexOfCharCode(str, 19);\r\n    const plzStart = indexOfCharCode(str, 17);\r\n\r\n    // Remove if found\r\n    if (plzStart && plzStop < plzStart) {\r\n      this.verbose(`Tx plz start`);\r\n      str = omitChars(str, plzStart, 1);\r\n      this.txBuffer.paused = false;\r\n    }\r\n    if (plzStop && plzStop > plzStart) {\r\n      this.verbose(`Tx plz stop`);\r\n      str = omitChars(str, plzStop, 1);\r\n      this.txBuffer.paused = true;\r\n    }\r\n\r\n    this.rxBuffer.add(str);\r\n  }\r\n\r\n  protected verbose(m: string) {\r\n    if (this.verboseLogging) console.info(`${this.config.name} `, m);\r\n  }\r\n\r\n  protected log(m: string) {\r\n    console.log(`${this.config.name} `, m);\r\n  }\r\n\r\n  protected warn(m:unknown) {\r\n    console.warn(`${this.config.name} `, m);\r\n  }\r\n}\r\n\r\n","import {Arrays} from \"../collections/index.js\";\r\nimport AudioVisualiser from \"./AudioVisualiser.js\";\r\nimport {number as guardNumber, integer as guardInteger} from \"../Guards.js\";\r\nimport {isPowerOfTwo} from \"../Util.js\";\r\n\r\n/**\r\n * Options for audio processing\r\n * \r\n * fftSize: Must be a power of 2, from 32 - 32768. Higher number means\r\n * more precision and higher CPU overhead\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\r\n * \r\n * smoothingTimeConstant: Range from 0-1, default is 0.8.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\r\n * \r\n * debug: If true, additonal console logging will happen\r\n */\r\nexport type Opts = Readonly<{\r\n  readonly showVis?:boolean\r\n  /**\r\n   * FFT size. Must be a power of 2, from 32 - 32768. Higher number means\r\n   * more precision and higher CPU overhead\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\r\n   */\r\n  readonly fftSize?:number\r\n  /**\r\n   * Range from 0-1, default is 0.8\r\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant\r\n   */\r\n  readonly smoothingTimeConstant?:number\r\n  readonly debug?:boolean\r\n}>;\r\n\r\nexport type DataAnalyser = (node:AnalyserNode, analyser:AudioAnalyser) => void;\r\n\r\n/**\r\n * Basic audio analyser. Returns back waveform and FFT analysis. Use {@link peakLevel} if you want sound level, or {@link freq} if you just want FFT results.\r\n * \r\n * ```js\r\n * const onData = (freq, wave, analyser) => {\r\n *  // Demo: Get FFT results just for 100Hz-1KHz.\r\n *  const freqSlice = analyser.sliceByFrequency(100,1000,freq);\r\n * \r\n *  // Demo: Get FFT value for a particular frequency (1KHz)\r\n *  const amt = freq[analyser.getIndexForFrequency(1000)];\r\n * }\r\n * basic(onData, {fftSize: 512});\r\n * ```\r\n * \r\n * An `Analyser` instance is returned and can be controlled:\r\n * ```js\r\n * const analyser = basic(onData);\r\n * analyser.paused = true;\r\n * ```\r\n * \r\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler. \r\n * \r\n * @param onData Handler for data\r\n * @param opts Options\r\n * @returns Analyser instance\r\n */\r\nexport const basic = (onData:(freq:Float32Array, wave:Float32Array, analyser:AudioAnalyser) => void, opts:Opts = {}):AudioAnalyser => new AudioAnalyser((node, analyser) => {\r\n  // Get frequency and amplitude data\r\n  const freq = new Float32Array(node.frequencyBinCount);\r\n  const wave = new Float32Array(node.fftSize);\r\n\r\n  // Load arrays with data\r\n  node.getFloatFrequencyData(freq);\r\n  node.getFloatTimeDomainData(wave);\r\n\r\n  // Send back\r\n  onData(freq, wave, analyser);\r\n}, opts);\r\n\r\n/**\r\n * Basic audio analyser. Returns FFT analysis. Use {@link peakLevel} if you want the sound level, or {@link basic} if you also want the waveform.\r\n * \r\n * ```js\r\n * const onData = (freq, analyser) => {\r\n *  // Demo: Print out each sound frequency (Hz) and amount of energy in that band\r\n *  for (let i=0;i<freq.length;i++) {\r\n *    const f = analyser.getFrequencyAtIndex(0);\r\n *    console.log(`${i}. frequency: ${f} amount: ${freq[i]}`);\r\n *  }\r\n * }\r\n * freq(onData, {fftSize:512});\r\n * ```\r\n * \r\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler. \r\n * \r\n * @param onData \r\n * @param opts \r\n * @returns \r\n */\r\nexport const freq = (onData:(freq:Float32Array, analyser:AudioAnalyser)=>void, opts:Opts={}):AudioAnalyser => new AudioAnalyser((node, analyser) => {\r\n  const freq = new Float32Array(node.frequencyBinCount);\r\n  node.getFloatFrequencyData(freq);\r\n  onData(freq, analyser);\r\n}, opts);\r\n\r\n/**\r\n * Basic audio analyser which reports the peak sound level.\r\n * \r\n * ```js\r\n * peakLevel(level => {\r\n *  console.log(level);\r\n * });\r\n * ```\r\n * \r\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler. \r\n * @param onData \r\n * @param opts \r\n * @returns \r\n */\r\nexport const peakLevel = (onData:(level:number, analyser:AudioAnalyser)=>void, opts:Opts={}):AudioAnalyser => new AudioAnalyser((node, analyser) => {\r\n  const wave = new Float32Array(node.fftSize);\r\n  node.getFloatTimeDomainData(wave);\r\n  onData(Arrays.maxFast(wave), analyser);\r\n}, opts);\r\n\r\n/**\r\n * Helper for doing audio analysis. It takes case of connecting the audio stream, running in a loop and pause capability.\r\n * \r\n * Provide a function which works with an [AnalyserNode](https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode), and does something with the result.\r\n * ```js\r\n * const myAnalysis = (node, analyser) => {\r\n *  const freq = new Float32Array(node.frequencyBinCount);\r\n *  node.getFloatFrequencyData(freq);\r\n *  // Do something with frequency data...\r\n * }\r\n * const a = new Analyser(myAnalysis);\r\n * ```\r\n * \r\n * Two helper functions provide ready-to-use Analysers:\r\n * * {@link peakLevel} peak decibel reading\r\n * * {@link freq} FFT results\r\n * * {@link basic} FFT results and waveform\r\n * \r\n * Note: Browers won't allow microphone access unless the call has come from a user-interaction, eg pointerup event handler.\r\n *\r\n */\r\nexport class AudioAnalyser {\r\n  showVis:boolean;\r\n  fftSize:number;\r\n  smoothingTimeConstant:number;\r\n  #isPaused = false;\r\n  debug:boolean;\r\n  #initInProgress = false;\r\n\r\n  visualiser:AudioVisualiser|undefined;  \r\n  audioCtx:AudioContext|undefined;\r\n  analyserNode:AnalyserNode|undefined;\r\n\r\n  analyse:DataAnalyser;\r\n\r\n  constructor(analyse:DataAnalyser, opts:Opts = {}) {\r\n    this.showVis = opts.showVis ?? false;\r\n    this.fftSize = opts.fftSize ?? 1024;\r\n    this.debug = opts.debug ?? false;\r\n    this.smoothingTimeConstant = opts.smoothingTimeConstant ?? 0.8;\r\n\r\n    guardInteger(this.fftSize, `positive`, `opts.fftSize`);\r\n    guardNumber(this.smoothingTimeConstant, `percentage`, `opts.smoothingTimeConstant`);\r\n\r\n    if (!isPowerOfTwo(this.fftSize)) throw new Error(`fftSize must be a power of two from 32 to 32768 (${this.fftSize})`);\r\n    if(this.fftSize < 32) throw new Error(`fftSize must be at least 32`);\r\n    if (this.fftSize > 32768) throw new Error(`fftSize must be no greater than 32768`);\r\n\r\n    this.analyse = analyse;\r\n    this.paused = false;\r\n\r\n    this.init();\r\n\r\n    const visualiserEl = document.getElementById(`audio-visualiser`);\r\n    if (visualiserEl) {\r\n      const visualiser = new AudioVisualiser(visualiserEl, this);\r\n      visualiser.setExpanded(this.showVis);\r\n      this.visualiser = visualiser;\r\n    }\r\n  }\r\n\r\n  init() {\r\n    if (this.#initInProgress) {\r\n      if (this.debug) console.debug(`Init already in progress`);\r\n      return;\r\n    }\r\n    this.#initInProgress = true;\r\n\r\n    // Initalise microphone\r\n    navigator.mediaDevices.getUserMedia({audio: true})\r\n      .then(stream => {     \r\n        this.onMicSuccess(stream);\r\n      })\r\n      .catch(err => {\r\n        this.#initInProgress = false;\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  get paused():boolean {\r\n    return this.#isPaused;\r\n  }\r\n\r\n  set paused(v:boolean) {\r\n    if (v === this.#isPaused) return;\r\n    this.#isPaused = v;\r\n    if (!v) {\r\n      if (this.debug) console.log(`Unpaused`);\r\n      window.requestAnimationFrame(this.analyseLoop.bind(this));\r\n    } else {\r\n      if (this.debug) console.log(`Paused`);\r\n    }\r\n  }\r\n\r\n  private setup(audioCtx:AudioContext, stream:MediaStream) {\r\n    const analyser = audioCtx.createAnalyser();\r\n\r\n    // fftSize must be a power of 2. Higher values slower, more detailed\r\n    // Range is 32-32768\r\n    analyser.fftSize = this.fftSize;\r\n\r\n    // smoothingTimeConstant ranges from 0.0 to 1.0\r\n    // 0 = no averaging. Fast response, jittery\r\n    // 1 = maximum averaging. Slow response, smooth\r\n    analyser.smoothingTimeConstant = this.smoothingTimeConstant;\r\n\r\n    // Microphone -> analyser\r\n    const micSource = audioCtx.createMediaStreamSource(stream);\r\n    micSource.connect(analyser);\r\n    return analyser;\r\n  }\r\n\r\n  // Microphone successfully initalised, now have access to audio data\r\n  private onMicSuccess(stream:MediaStream) {\r\n    try {\r\n      const audioCtx = new AudioContext();\r\n\r\n      audioCtx.addEventListener(`statechange`, () => {\r\n        if (this.debug) console.log(`Audio context state: ${audioCtx.state}`);\r\n      });\r\n\r\n      this.audioCtx = audioCtx;\r\n      this.analyserNode = this.setup(audioCtx, stream);\r\n\r\n      // Start loop\r\n      window.requestAnimationFrame(this.analyseLoop.bind(this));\r\n    } catch (ex) {\r\n      this.#initInProgress = false;\r\n      console.error(ex);\r\n    }\r\n  }\r\n\r\n  private analyseLoop() {\r\n    if (this.paused) {\r\n      if (this.debug) console.log(`Paused`);\r\n      return;\r\n    }\r\n\r\n    const a = this.analyserNode;\r\n    if (a === undefined) {\r\n      console.warn(`Analyser undefined`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Perform analysis\r\n      this.analyse(a, this);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // Run again\r\n    window.requestAnimationFrame(this.analyseLoop.bind(this));\r\n  }\r\n\r\n  // visualise(wave, freq) {\r\n  //   if (!this.visualiser) return;\r\n  //   this.visualiser.renderWave(wave, true);\r\n  //   this.visualiser.renderFreq(freq);\r\n  // }\r\n\r\n  /**\r\n   * Returns the maximum FFT value within the given frequency range\r\n   */\r\n  getFrequencyRangeMax(lowFreq:number, highFreq:number, freqData:readonly number[]):number {\r\n    const samples = this.sliceByFrequency(lowFreq, highFreq, freqData);\r\n    return Arrays.max(...samples);\r\n  }\r\n\r\n  /**\r\n   * Returns a sub-sampling of frequency analysis data that falls between\r\n   * `lowFreq` and `highFreq`.\r\n   * @param lowFreq Low frequency\r\n   * @param highFreq High frequency\r\n   * @param freqData Full-spectrum frequency data\r\n   * @returns Sub-sampling of analysis\r\n   */\r\n  sliceByFrequency(lowFreq:number, highFreq:number, freqData:readonly number[]) {\r\n    const lowIndex = this.getIndexForFrequency(lowFreq);\r\n    const highIndex = this.getIndexForFrequency(highFreq);\r\n\r\n    // Grab a 'slice' of the array between these indexes\r\n    const samples = freqData.slice(lowIndex, highIndex);\r\n    return samples;\r\n  }\r\n\r\n  /**\r\n   * Returns the starting frequency for a given binned frequency index.\r\n   * @param index Array index\r\n   * @returns Sound frequency\r\n   */\r\n  getFrequencyAtIndex(index:number):number {\r\n    const a = this.analyserNode;\r\n    const ctx = this.audioCtx;\r\n    if (a === undefined) throw new Error(`Analyser not available`);\r\n    if (ctx === undefined) throw new Error(`Audio context not available`);\r\n\r\n    guardInteger(index, `positive`, `index`);\r\n    if (index > a.frequencyBinCount) throw new Error(`Index ${index} exceeds frequency bin count ${a.frequencyBinCount}`);\r\n\r\n    return index * ctx.sampleRate / (a.frequencyBinCount * 2);\r\n  }\r\n\r\n  /**\r\n   * Returns a binned array index for a given frequency\r\n   * @param freq Sound frequency\r\n   * @returns Array index into frequency bins\r\n   */\r\n  getIndexForFrequency(freq:number):number {\r\n    const a = this.analyserNode;\r\n    if (a === undefined) throw new Error(`Analyser not available`);\r\n\r\n    const nyquist = a.context.sampleRate / 2.0;\r\n    const index = Math.round(freq / nyquist * a.frequencyBinCount);\r\n    if (index < 0) return 0;\r\n    if (index >= a.frequencyBinCount) return a.frequencyBinCount - 1;\r\n    return index;\r\n  }\r\n}","/**\r\n * Visualiser component\r\n *\r\n * Usage: import visualiser.js. Instantiate on document load, and pass in the\r\n * parent element into the constructor.\r\n *\r\n * eg: const v = new Visualiser(document.getElementById('renderer'));\r\n *\r\n * Data must be passed to the component via renderFreq or renderWave.\r\n * \r\n * Draws on https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API\r\n */\r\n\r\nimport {Arrays} from '../collections/index.js';\r\nimport {Points} from '../geometry/index.js';\r\nimport {numberTracker} from '../data/NumberTracker.js';\r\nimport {AudioAnalyser} from './AudioAnalyser.js';\r\n\r\n// TODO: This is an adaption of old code. Needs to be smartened up further\r\nexport default class AudioVisualiser {\r\n  freqMaxRange = 200;\r\n  audio:AudioAnalyser;\r\n  parent:HTMLElement;\r\n \r\n  lastPointer:Points.Point = {x:0, y:0};\r\n  pointerDown = false;\r\n  pointerClicking = false;\r\n  pointerClickDelayMs = 100;\r\n  pointerDelaying = false;\r\n\r\n  waveTracker;\r\n  freqTracker;\r\n  el:HTMLElement;\r\n\r\n  constructor(parentElem:HTMLElement, audio:AudioAnalyser) {\r\n    this.audio = audio;\r\n    this.parent = parentElem;\r\n    this.waveTracker = numberTracker();\r\n    this.freqTracker = numberTracker();\r\n   \r\n    // Add HTML\r\n    parentElem.innerHTML = `\r\n    <section>\r\n      <button id=\"rendererComponentToggle\">🔼</button>\r\n      <div>\r\n        <h1>Visualiser</h1>\r\n        <div style=\"display:flex; flex-wrap: wrap\">\r\n          <div class=\"visPanel\">\r\n            <h2>Frequency distribution</h2>\r\n            <br />\r\n            <canvas id=\"rendererComponentFreqData\" height=\"200\" width=\"400\"></canvas>\r\n          </div>\r\n          <div class=\"visPanel\">\r\n            <h2>Waveform</h2>\r\n            <button id=\"rendererComponentWaveReset\">Reset</button>\r\n            <div>\r\n              Press and hold on wave to measure\r\n            </div>\r\n            <br />\r\n            <canvas id=\"rendererComponentWaveData\" height=\"200\" width=\"400\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    `;\r\n    this.el = parentElem.children[0] as HTMLElement;\r\n\r\n    document.getElementById(`rendererComponentToggle`)?.addEventListener(`click`, () => {\r\n      this.setExpanded(!this.isExpanded());\r\n    });\r\n    this.el.addEventListener(`pointermove`, (e) => this.onPointer(e));\r\n    //this.el.addEventListener(`touchbegin`, (e) => this.onPointer(e));\r\n    this.el.addEventListener(`pointerup`, () => { \r\n      this.pointerDelaying = false; \r\n      this.pointerDown = false;\r\n    });\r\n    this.el.addEventListener(`pointerdown`, () => {\r\n      this.pointerDelaying = true;\r\n      setTimeout(() => {\r\n        if (this.pointerDelaying) { this.pointerDelaying = false; this.pointerDown = true; }\r\n      }, this.pointerClickDelayMs);\r\n    });\r\n    this.el.addEventListener(`pointerleave`, () => { \r\n      this.pointerDelaying = false; \r\n      this.pointerDown = false; });\r\n\r\n    document.getElementById(`rendererComponentWaveReset`)?.addEventListener(`click`, () => {\r\n      this.clear();\r\n    });\r\n  }\r\n\r\n  renderFreq(freq:readonly number[]) {\r\n    if (!this.isExpanded()) return; // Don't render if collapsed\r\n    if (!freq) return; // Data is undefined/null\r\n\r\n    const canvas = document.getElementById(`rendererComponentFreqData`) as HTMLCanvasElement;\r\n    if (canvas === null) throw new Error(`Cannot find canvas element`);\r\n    const g = canvas.getContext(`2d`);\r\n    if (g === null) throw new Error(`Cannot create drawing context`);\r\n\r\n    const bins = freq.length;\r\n    const canvasWidth = canvas.clientWidth;\r\n    const canvasHeight = canvas.clientHeight;\r\n    g.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    const pointer = this.getPointerRelativeTo(canvas);\r\n    const width = (canvasWidth / bins);\r\n    const minMax = Arrays.minMaxAvg(freq);\r\n\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i = 0; i < bins; i++) {\r\n      if (!Number.isFinite(freq[i])) continue;\r\n\r\n      const value = freq[i] - minMax.min;\r\n      const valueRelative = value / this.freqMaxRange;\r\n      const height = Math.abs(canvasHeight * valueRelative);\r\n      const offset = canvasHeight - height;\r\n\r\n      const hue = i / bins * 360;\r\n      const left = i * width;\r\n      g.fillStyle = `hsl(` + hue + `, 100%, 50%)`;\r\n\r\n      // Show info about data under pointer\r\n      if (pointer.y > 0 && pointer.y <= canvasHeight && pointer.x >= left && pointer.x <= left + width) {\r\n        // Keep track of data\r\n        if (this.freqTracker.id !== i.toString()) {\r\n          this.freqTracker = numberTracker(i.toString());\r\n        }\r\n        this.freqTracker.seen(freq[i]);\r\n\r\n        const freqMma = this.freqTracker.getMinMaxAvg();\r\n\r\n        // Display\r\n        g.fillStyle = `black`;\r\n        if (this.audio) { \r\n          g.fillText(`Frequency (${i}) at pointer: ${this.audio.getFrequencyAtIndex(i).toLocaleString(`en`)} - ${this.audio.getFrequencyAtIndex(i + 1).toLocaleString(`en`)}`, 2, 10); \r\n        }\r\n        g.fillText(`Raw value: ${freq[i].toFixed(2)}`, 2, 20);\r\n        g.fillText(`Min: ${freqMma.min.toFixed(2)}`, 2, 40);\r\n        g.fillText(`Max: ${freqMma.max.toFixed(2)}`, 60, 40);\r\n        g.fillText(`Avg: ${freqMma.avg.toFixed(2)}`, 120, 40);\r\n\r\n      }\r\n      g.fillRect(left, offset, width, height);\r\n    }\r\n  }\r\n\r\n  isExpanded() {\r\n    const contentsElem = this.el.querySelector(`div`);\r\n    if (contentsElem === null) throw new Error(`contents div not found`);\r\n    return (contentsElem.style.display === ``);\r\n  }\r\n\r\n  setExpanded(value:boolean) {\r\n    const contentsElem = this.el.querySelector(`div`);\r\n    const button = this.el.querySelector(`button`);\r\n\r\n    if (button === null) throw new Error(`Button element not found`);\r\n    if (contentsElem === null) throw new Error(`Contents element not found`);\r\n    if (value) {\r\n      contentsElem.style.display = ``;\r\n      button.innerText = `🔼`;\r\n    } else {\r\n      contentsElem.style.display = `none`;\r\n      button.innerText = `🔽`;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.clearCanvas(document.getElementById(`rendererComponentFreqData`) as HTMLCanvasElement);\r\n    this.clearCanvas(document.getElementById(`rendererComponentWaveData`) as HTMLCanvasElement);\r\n  }\r\n\r\n  // Clears a canvas to white\r\n  clearCanvas(canvas:HTMLCanvasElement|null) {\r\n    if (canvas === null) throw new Error(`Canvas is null`);\r\n    const g = canvas.getContext(`2d`);\r\n    if (g === null) throw new Error(`Cannot create drawing context`);\r\n    g.fillStyle = `white`;\r\n    g.fillRect(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n  }\r\n\r\n  // Renders waveform data.\r\n  // Adapted from MDN's AnalyserNode.getFloatTimeDomainData() example\r\n  renderWave(wave:readonly number[], bipolar = true) {\r\n    if (!this.isExpanded()) return; // Don't render if collapsed\r\n    if (!wave) return; // Undefined or null data\r\n    const canvas = document.getElementById(`rendererComponentWaveData`) as HTMLCanvasElement;\r\n    if (canvas === null) throw new Error(`Cannot find wave canvas`);\r\n    \r\n    const g = canvas.getContext(`2d`);\r\n    if (g === null) throw new Error(`Cannot create drawing context for wave`);\r\n\r\n    const canvasWidth = canvas.clientWidth;\r\n    const canvasHeight = canvas.clientHeight;\r\n    const pointer = this.getPointerRelativeTo(canvas);\r\n    const infoAreaHeight = 20;\r\n    const infoAreaWidth = 60;\r\n    const bins = wave.length;\r\n    g.fillStyle = `white`;\r\n    g.fillRect(0, 0, infoAreaWidth, infoAreaHeight);\r\n\r\n    const width = canvasWidth / bins;\r\n\r\n    // Clears the screen with very light tint of white\r\n    // to fade out last waveform. Set this higher to remove effect\r\n    g.fillStyle = `rgba(255, 255, 255, 0.03)`;\r\n    g.fillRect(0, 20, canvasWidth, canvasHeight);\r\n\r\n    g.fillStyle = `red`;\r\n    if (bipolar) {\r\n      g.fillRect(0, canvasHeight / 2, canvasWidth, 1);\r\n    } else {\r\n      g.fillRect(0, canvasHeight - 1, canvasWidth, 1);\r\n    }\r\n\r\n    g.lineWidth = 1;\r\n    g.strokeStyle = `black`;\r\n    g.beginPath();\r\n\r\n    //eslint-disable-next-line functional/no-let\r\n    let x = 0;\r\n\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i = 0; i < bins; i++) {\r\n      const height = wave[i] * canvasHeight;\r\n      const y = bipolar ? (canvasHeight / 2) - height : canvasHeight - height;\r\n\r\n      if (i === 0) {\r\n        g.moveTo(x, y);\r\n      } else {\r\n        g.lineTo(x, y);\r\n      }\r\n      x += width;\r\n\r\n      if (this.pointerDown) this.waveTracker.seen(wave[i]);\r\n    }\r\n    g.lineTo(canvasWidth, bipolar ? canvasHeight / 2 : canvasHeight);//canvas.height / 2);\r\n    g.stroke();\r\n\r\n    // Draw\r\n    if (this.pointerDown) {\r\n      const waveMma = this.waveTracker.getMinMaxAvg();\r\n      g.fillStyle = `rgba(255,255,0,1)`;\r\n      g.fillRect(infoAreaWidth, 0, 150, 20);\r\n      g.fillStyle = `black`;\r\n      g.fillText(`Min: ` + waveMma.min.toFixed(2), 60, 10);\r\n      g.fillText(`Max: ` + waveMma.max.toFixed(2), 110, 10);\r\n      g.fillText(`Avg: ` + waveMma.avg.toFixed(2), 160, 10);\r\n    } else {\r\n      this.waveTracker.reset();\r\n    }\r\n\r\n    // Show info about data under pointer\r\n    if (pointer.y > 0 && pointer.y <= canvasHeight && pointer.x >= 0 && pointer.x <= canvasWidth) {\r\n      g.fillStyle = `black`;\r\n      g.fillText(`Level: ` + (1.0 - (pointer.y / canvasHeight)).toFixed(2), 2, 10);\r\n    }\r\n\r\n  }\r\n\r\n  // Yields pointer position relative to given element\r\n  getPointerRelativeTo(elem:HTMLElement) {\r\n    const rect = elem.getBoundingClientRect();\r\n    return {\r\n      x: this.lastPointer.x - rect.left - window.scrollX, //elem.offsetLeft + window.scrollX,\r\n      y: this.lastPointer.y - rect.top - window.scrollY//elem.offsetTop + window.scrollY\r\n    };\r\n  }\r\n\r\n  // Keeps track of last pointer position in page coordinate space\r\n  onPointer(evt:MouseEvent|PointerEvent) {\r\n    this.lastPointer = {\r\n      x: evt.pageX,\r\n      y: evt.pageY\r\n    };\r\n    evt.preventDefault();\r\n  }\r\n\r\n  // getMinMax(data, start = 0, end = data.length) {\r\n  //   if (end > data.length) throw new Error(`end is past size of array`);\r\n  //   if (start < 0) throw new Error(`start should be at least 0`);\r\n  //   if (end <= start) throw new Error(`end should be greater than start`);\r\n\r\n  //   let max = Number.MIN_SAFE_INTEGER;\r\n  //   let min = Number.MAX_SAFE_INTEGER;\r\n  //   for (let i = start; i < end; i++) {\r\n  //     max = Math.max(data[i], max);\r\n  //     min = Math.min(data[i], min);\r\n  //   }\r\n  //   if (!Number.isFinite(max)) max = 0;\r\n  //   if (!Number.isFinite(min)) min = 0;\r\n\r\n  //   return {max: max, min: min};\r\n  // }\r\n}","import {repeat} from \"../flow/index.js\";\r\nimport {GetOrGenerate, getOrGenerate} from \"../collections/Map.js\";\r\n\r\nexport type Timestamped<V> = V & {\r\n  readonly at:number\r\n};\r\n\r\n/**\r\n * Options\r\n */\r\nexport type TrackedValueOpts = {\r\n  /**\r\n   * If true, intermediate points are stored. False by default\r\n   */\r\n  readonly storeIntermediate?:boolean\r\n  /**\r\n   * If above zero, tracker will reset after this many samples\r\n   */\r\n  readonly resetAfterSamples?:number\r\n}\r\n\r\nexport abstract class TrackerBase<V> {\r\n  /**\r\n   * @ignore\r\n   */\r\n  seenCount:number;\r\n\r\n  /**\r\n  * @ignore\r\n  */\r\n  protected storeIntermediate:boolean;\r\n  \r\n  /**\r\n  * @ignore\r\n  */\r\n  protected resetAfterSamples:number;\r\n\r\n  constructor(readonly id:string, opts:TrackedValueOpts = {}) {\r\n    this.storeIntermediate = opts.storeIntermediate ?? false;\r\n    this.resetAfterSamples = opts.resetAfterSamples ?? -1;\r\n    this.seenCount = 0;\r\n  }\r\n\r\n  /**\r\n   * Reset tracker\r\n   */\r\n  reset() {\r\n    this.seenCount = 0;\r\n    this.onReset();\r\n  }\r\n\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  seen(...p:V[]):any {    \r\n    if (this.resetAfterSamples > 0 && this.seenCount > this.resetAfterSamples) {\r\n      this.reset();\r\n    }\r\n\r\n    this.seenCount += p.length;\r\n    const t = this.seenImpl(p);\r\n    this.onSeen(t);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param p \r\n   */\r\n  abstract seenImpl(p:V[]):V[];\r\n\r\n  abstract get last():V|undefined;\r\n\r\n  /**\r\n   * Returns the initial value, or undefined\r\n   */\r\n  abstract get initial():V|undefined;\r\n\r\n  /**\r\n   * Returns the elapsed milliseconds since the initial value\r\n   */\r\n  abstract get elapsed():number;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  //eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  onSeen(_p:V[]) {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  abstract onReset():void;\r\n} \r\n\r\nexport class PrimitiveTracker<V extends number|string> extends TrackerBase<V> {\r\n  values:V[];\r\n  timestamps:number[];\r\n\r\n  constructor(id:string, opts:TrackedValueOpts) {\r\n    super(id, opts);\r\n    this.values = [];\r\n    this.timestamps = [];\r\n  }\r\n\r\n  get last():V|undefined {\r\n    return this.values.at(-1);\r\n  }\r\n\r\n  get initial():V|undefined {\r\n    return this.values.at(0);\r\n  }\r\n\r\n  /**\r\n * Returns number of recorded values (this can include the initial value)\r\n */\r\n  get size() {\r\n    return this.values.length;\r\n  }\r\n  \r\n  /**\r\n   * Returns the elapsed time, in milliseconds since the instance was created\r\n   */\r\n  get elapsed():number {\r\n    if (this.values.length < 0) throw new Error(`No values seen yet`);\r\n    return Date.now() - this.timestamps[0];\r\n  }\r\n\r\n  onReset() {\r\n    this.values = [];\r\n    this.timestamps = [];\r\n  }\r\n\r\n  /**\r\n   * Tracks a value\r\n   */\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  seenImpl(p:V[]):V[] {\r\n    const last = p.at(-1) as Timestamped<V>;\r\n    const now = Date.now();\r\n    if (this.storeIntermediate) {\r\n      this.values.push(...p);\r\n      this.timestamps.push(...repeat(p.length, () => now));\r\n    } else if (this.values.length === 0) {\r\n      // Add as initial value\r\n      this.values.push(last);\r\n      this.timestamps.push(now);\r\n    }\r\n    else if (this.values.length === 2) {\r\n      // Replace last value\r\n      this.values[1] = last;\r\n      this.timestamps[1] = now;\r\n    } else if (this.values.length === 1) {\r\n      // Add last value\r\n      this.values.push(last);\r\n      this.timestamps.push(now);\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * A tracked value of type `V`.\r\n */\r\nexport class ObjectTracker<V> extends TrackerBase<V> {\r\n  values:Timestamped<V>[];\r\n\r\n  constructor(id:string, opts:TrackedValueOpts) {\r\n    super(id, opts);\r\n    this.values = [];\r\n  }\r\n\r\n  /**\r\n   * Allows sub-classes to be notified when a reset happens\r\n   * @ignore\r\n   */\r\n  onReset() {\r\n    this.values = []; //this.values.slice(1);\r\n  }\r\n\r\n  /**\r\n   * Tracks a value\r\n   * @ignore\r\n   */\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  seenImpl(p:V[]|Timestamped<V>[]):Timestamped<V>[] {\r\n    // Make sure values have a timestamp\r\n    const ts = p.map(v => ((`at` in v) ? v : {\r\n      ...v,\r\n      at: Date.now()\r\n    }));\r\n\r\n    const last = ts.at(-1) as Timestamped<V>;\r\n  \r\n    if (this.storeIntermediate) this.values.push(...ts);\r\n    else if (this.values.length === 0) {\r\n      // Add as initial value\r\n      this.values.push(last);\r\n    }\r\n    else if (this.values.length === 2) {\r\n      // Replace last value\r\n      this.values[1] = last;\r\n    } else if (this.values.length === 1) {\r\n      // Add last value\r\n      this.values.push(last);\r\n    }\r\n\r\n    return ts;\r\n  }\r\n\r\n  /**\r\n   * Last seen value. If no values have been added, it will return the initial value\r\n   */\r\n  get last() {\r\n    if (this.values.length === 1) return this.values[0];\r\n    //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    return this.values.at(-1)!;\r\n  }\r\n\r\n  /**\r\n   * Returns the initial value\r\n   */\r\n  get initial() {\r\n    return this.values.at(0);\r\n  }\r\n  \r\n  /**\r\n   * Returns number of recorded values (includes the initial value in the count)\r\n   */\r\n  get size() {\r\n    return this.values.length;\r\n  }\r\n\r\n  /**\r\n   * Returns the elapsed time, in milliseconds since the initial value\r\n   */\r\n  get elapsed():number {\r\n    return Date.now() - this.values[0].at;\r\n  }\r\n}\r\n\r\nexport class TrackedValueMap<V>  {\r\n  store:Map<string, TrackerBase<V>>;\r\n  gog:GetOrGenerate<string, TrackerBase<V>, V>;\r\n\r\n  constructor(creator:(key:string, start:V|undefined) => TrackerBase<V>) {\r\n    this.store = new Map();\r\n    this.gog = getOrGenerate<string, TrackerBase<V>, V>(this.store, creator);\r\n  }\r\n\r\n  /**\r\n   * Return number of named points being tracked\r\n   */\r\n  get size() {\r\n    return this.store.size;\r\n  }\r\n\r\n  /**\r\n   * Returns true if `id` is stored\r\n   * @param id \r\n   * @returns \r\n   */\r\n  has(id:string) {\r\n    return this.store.has(id);\r\n  }\r\n\r\n  /**\r\n   * For a given id, note that we have seen one or more values.\r\n   * @param id Id\r\n   * @param values Values(s)\r\n   * @returns Information about start to last value\r\n   */\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  public async seen(id:string, ...values:V[]):Promise<any> {\r\n    const trackedValue = await this.getTrackedValue(id, ...values);\r\n    \r\n    // Pass it over to the TrackedValue\r\n    return trackedValue.seen(...values);\r\n  }\r\n\r\n  /**\r\n   * Creates or returns a TrackedValue instance for `id`.\r\n   * @param id \r\n   * @param values \r\n   * @returns \r\n   */\r\n  protected async getTrackedValue(id:string, ...values:V[]) {\r\n    if (id === null) throw new Error(`id parameter cannot be null`);\r\n    if (id === undefined) throw new Error(`id parameter cannot be undefined`);\r\n\r\n    // Create or recall TrackedValue by id\r\n    const trackedValue = await this.gog(id, values[0]);\r\n    return trackedValue;\r\n  }\r\n\r\n  /**\r\n   * Remove a tracked value by id.\r\n   * Use {@link reset} to clear them all.\r\n   * @param id\r\n   */\r\n  delete(id:string) {\r\n    this.store.delete(id);\r\n  }\r\n\r\n  /**\r\n   * Remove all tracked values.\r\n   * Use {@link delete} to remove a single value by id.\r\n   */\r\n  reset() {\r\n    this.store = new Map();\r\n  }\r\n\r\n  /**\r\n   * Enumerate ids\r\n   */\r\n  *ids() {\r\n    yield* this.store.keys();\r\n  }\r\n\r\n  /**\r\n   * Enumerate tracked values\r\n   */\r\n  *values() {\r\n    yield* this.store.values();\r\n  }\r\n\r\n  /**\r\n   * Returns TrackedValues ordered with oldest first\r\n   * @returns \r\n   */\r\n  trackedByAge():readonly TrackerBase<V>[] {\r\n    const tp = Array.from(this.store.values());\r\n    tp.sort((a, b) => {\r\n      const aa = a.elapsed;\r\n      const bb = b.elapsed;\r\n      if (aa === bb) return 0;\r\n      if (aa > bb) return -1;\r\n      return 1;\r\n    });\r\n    return tp;\r\n  }\r\n\r\n  valuesByAge():readonly V[] {\r\n    const tb = this.trackedByAge();\r\n    // @ts-ignore\r\n    return tb.map(t => t.last);\r\n  }\r\n\r\n  /**\r\n   * Enumerate last received values\r\n   * \r\n   * @example Calculate centroid of latest-received values\r\n   * ```js\r\n   * const pointers = pointTracker();\r\n   * const c = Points.centroid(...Array.from(pointers.lastPoints()));\r\n   * ```\r\n   */\r\n  *last() {\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const p of this.store.values()) {\r\n      yield p.last;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enumerate starting values\r\n   */\r\n  *initialValues() {\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const p of this.store.values()) {\r\n      yield p.initial;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a tracked value by id, or undefined if not found\r\n   * @param id \r\n   * @returns \r\n   */\r\n  get(id:string):TrackerBase<V>|undefined {\r\n    return this.store.get(id);\r\n  }\r\n}\r\n\r\n\r\n","import { TrackedValueOpts as TrackOpts, Timestamped, PrimitiveTracker} from \"./TrackedValue.js\";\r\n\r\n\r\nexport class NumberTracker extends PrimitiveTracker<number> {\r\n  //samples = 0;\r\n  total = 0;\r\n  min = Number.MAX_SAFE_INTEGER;\r\n  max = Number.MIN_SAFE_INTEGER;\r\n\r\n  get avg() { \r\n    return this.total / this.seenCount;\r\n  }\r\n\r\n  // resetAvg(newId: string | null = null) {\r\n  //   if (newId !== null) this.id = newId;\r\n  //   this.total = 0;\r\n  //   this.samples = 0;\r\n  // }\r\n\r\n\r\n  /**\r\n   * Difference between last value and initial.\r\n   * Eg. if last value was 10 and initial value was 5, 5 is returned (10 - 5)\r\n   * If either of those is missing, undefined is returned\r\n   */\r\n  difference():number|undefined {\r\n    if (this.last === undefined) return;\r\n    if (this.initial === undefined) return;\r\n    return this.last - this.initial;\r\n  }\r\n\r\n  /**\r\n   * Relative difference between last value and initial.\r\n   * Eg if last value was 10 and initial value was 5, 2 is returned (200%)\r\n   */\r\n  relativeDifference():number|undefined {\r\n    if (this.last === undefined) return;\r\n    if (this.initial === undefined) return;\r\n    return this.last / this.initial;\r\n  }\r\n\r\n  onReset() {\r\n    this.min = Number.MAX_SAFE_INTEGER;\r\n    this.max = Number.MIN_SAFE_INTEGER;\r\n    this.total = 0;\r\n    super.onReset();\r\n  }\r\n\r\n  onSeen(values:Timestamped<number>[]) {\r\n    if (values.some(v => Number.isNaN(v))) throw Error(`Cannot add NaN`);\r\n    this.total = values.reduce((acc, v) => acc+v, this.total);\r\n    this.min = Math.min(...values, this.min);\r\n    this.max = Math.max(...values, this.max);\r\n  }\r\n\r\n  getMinMaxAvg() {\r\n    return {\r\n      min: this.min,\r\n      max: this.max,\r\n      avg: this.avg,\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Keeps track of the min, max and avg in a stream of values without actually storing them.\r\n * \r\n * Usage:\r\n * \r\n * ```js\r\n *  const t = numberTracker(); \r\n *  t.seen(10);\r\n * \r\n *  t.avg / t.min/ t.max / t.getMinMax()\r\n * ```\r\n * \r\n * Use `reset()` to clear everything, or `resetAvg()` to only reset averaging calculation.\r\n * \r\n * Trackers can automatically reset after a given number of samples\r\n * ```\r\n * // reset after 100 samples\r\n * const t = numberTracker(`something`, 100);\r\n * ```\r\n * @class NumberTracker\r\n */\r\nexport const numberTracker = (id?:string, opts?:TrackOpts) => new NumberTracker(id ?? ``, opts ?? {});\r\n\r\n","import {EspruinoBleDevice} from \"./EspruinoBleDevice\";\r\nimport {defaultOpts as NordicDefaults } from \"./NordicBleDevice.js\";\r\nimport {StateChangeEvent} from \"../flow/StateMachine.js\";\r\nimport {ISimpleEventEmitter} from \"../Events.js\";\r\nimport {string as randomString} from \"../Random.js\";\r\nimport {waitFor} from \"../flow/WaitFor.js\";\r\nimport {EspruinoSerialDevice, EspruinoSerialDeviceOpts} from \"./EspruinoSerialDevice.js\";\r\n\r\nexport {EspruinoBleDevice, EspruinoSerialDevice, EspruinoSerialDeviceOpts};\r\n\r\nexport type DataEvent = {\r\n  readonly data:string\r\n}\r\n\r\nexport type Events = {\r\n  readonly data: DataEvent\r\n  readonly change: StateChangeEvent\r\n};\r\n\r\n/**\r\n * Options for device\r\n */\r\nexport type Options = {\r\n  /**\r\n   * Default milliseconds to wait before giving up on a well-formed reply. 5 seconds is the default.\r\n   */\r\n  readonly evalTimeoutMs?: number;\r\n  /**\r\n   * Name of device. Only used for printing log mesages to the console\r\n   */\r\n  readonly name?: string;\r\n\r\n  /**\r\n   * If true, additional logging information is printed\r\n   */\r\n  readonly debug?: boolean;\r\n}\r\n\r\n/**\r\n * Options for code evaluation\r\n */\r\nexport type EvalOpts = {\r\n  /**\r\n   * Milliseconds to wait before giving up on well-formed reply. 5 seconds is the default.\r\n   */\r\n  readonly timeoutMs?: number\r\n  /**\r\n   * If true (default), it assumes that anything received from the board\r\n   * is a response to the eval\r\n   */\r\n  readonly assumeExclusive?: boolean\r\n};\r\n\r\n\r\n/**\r\n * Instantiates a Puck.js. See {@link EspruinoBleDevice} for more info.\r\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\r\n */\r\nexport const puck = async (opts:{readonly name?:string, readonly debug?:boolean} = {}) => {\r\n  const name = opts.name ?? `Puck`;\r\n  const debug = opts.debug ?? false;\r\n\r\n  const device = await navigator.bluetooth.requestDevice({\r\n    filters: [\r\n      {namePrefix: `Puck.js`},\r\n      // {namePrefix: 'Pixl.js'},\r\n      // {namePrefix: 'MDBT42Q'},\r\n      // {namePrefix: 'RuuviTag'},\r\n      // {namePrefix: 'iTracker'},\r\n      // {namePrefix: 'Thingy'},\r\n      // {namePrefix: 'Espruino'},\r\n      {services: [NordicDefaults.service]}\r\n    ], optionalServices: [NordicDefaults.service]\r\n  });\r\n  const d = new EspruinoBleDevice(device, {name, debug});\r\n  await d.connect();\r\n  return d;\r\n};\r\n\r\n/**\r\n * Create a serial-connected Espruino device. See {@link EspruinoSerialDevice} for more info.\r\n * @param opts \r\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\r\n */\r\nexport const serial = async (opts:{readonly name?:string, readonly debug?:boolean, readonly evalTimeoutMs?:number} = {}) => {\r\n  const d = new EspruinoSerialDevice(opts);\r\n  await d.connect();\r\n  return d;\r\n};\r\n\r\n\r\n/**\r\n * Connects to a generic Espruino BLE device. See  {@link EspruinoBleDevice} for more info.\r\n * Use {@link puck} if you're connecting to a Puck.js\r\n * @returns Returns a connected instance, or throws exception if user cancelled or could not connect.\r\n */\r\nexport const connectBle = async () => {\r\n  const device = await navigator.bluetooth.requestDevice({\r\n    filters: [\r\n      {namePrefix: `Puck.js`},\r\n      {namePrefix: `Pixl.js`},\r\n      {namePrefix: `MDBT42Q`},\r\n      {namePrefix: `RuuviTag`},\r\n      {namePrefix: `iTracker`},\r\n      {namePrefix: `Thingy`},\r\n      {namePrefix: `Espruino`},\r\n      {services: [NordicDefaults.service]}\r\n    ], optionalServices: [NordicDefaults.service]\r\n  });\r\n  const d = new EspruinoBleDevice(device, {name:`Espruino`});\r\n  await d.connect();\r\n  return d;\r\n};\r\n\r\nexport interface EspruinoDevice extends ISimpleEventEmitter<Events> {\r\n  write(m:string):void\r\n  get evalTimeoutMs():number\r\n}\r\n\r\nexport const deviceEval = async (code:string, opts:EvalOpts = {}, device:EspruinoDevice, evalReplyPrefix:string, debug:boolean, warn:(m:string) => void):Promise<string> => {\r\n  const timeoutMs = opts.timeoutMs ?? device.evalTimeoutMs;\r\n  const assumeExclusive = opts.assumeExclusive ?? true;\r\n\r\n  if (typeof code !== `string`) throw new Error(`code parameter should be a string`);\r\n    \r\n  return new Promise((resolve, reject) => {\r\n    // Generate a random id so reply can be matched up with this request\r\n    const id = randomString(5);\r\n\r\n    const onData = (d:DataEvent) => {\r\n      try {\r\n        // Parse reply, expecting JSON.\r\n        const dd = JSON.parse(d.data);\r\n\r\n        // Check for reply field, and that it matches\r\n        if (`reply` in dd) {\r\n          if (dd.reply === id) {\r\n            done(); // Stop waiting for result\r\n            if (`result` in dd) {\r\n              resolve(dd.result);\r\n            }\r\n          } else {\r\n            warn(`Expected reply ${id}, got ${dd.reply}`);\r\n          }\r\n        }\r\n      } catch (ex:unknown) {\r\n        // If there was a syntax error, response won't be JSON\r\n        if (assumeExclusive) {\r\n          // Fail with unexpected reply as the message\r\n          done(d.data);\r\n        } else {\r\n          // Unexpected reply, but we cannot be sure if it's in response to eval or\r\n          // some other code running on board. So just warn and eventually timeout\r\n          warn(ex as string);\r\n        }\r\n      }\r\n    };\r\n\r\n    const onStateChange = (e:StateChangeEvent) => {\r\n      if (e.newState !== `connected`) done(`State changed to '${e.newState}', aborting`);\r\n    };\r\n\r\n    device.addEventListener(`data`, onData);\r\n    device.addEventListener(`change`, onStateChange);\r\n\r\n    // Init waitFor\r\n    const done = waitFor(timeoutMs, (reason:string) => {\r\n      reject(reason);\r\n    }, () => {\r\n      // If we got a response or there was a timeout, remove event listeners\r\n      device.removeEventListener(`data`, onData);\r\n      device.removeEventListener(`change`, onStateChange);\r\n    });\r\n\r\n    const src = `\\x10${evalReplyPrefix}(JSON.stringify({reply:\"${id}\", result:JSON.stringify(${code})}))\\n`;\r\n    if (debug) warn(src);\r\n    device.write(src);\r\n  });\r\n};","import {EvalOpts, Options,  deviceEval} from \"./Espruino.js\";\r\nimport {NordicBleDevice} from \"./NordicBleDevice.js\";\r\n\r\n/**\r\n * An Espruino BLE-connection\r\n * \r\n * Use the `puck` function to initialise and connect to a Puck.js.\r\n * It must be called in a UI event handler for browser security reasons.\r\n * \r\n * ```js\r\n * const e = await puck();\r\n * ```\r\n * \r\n * Listen for events:\r\n * ```js\r\n * // Received something\r\n * e.addEventListener(`data`, d => console.log(d.data));\r\n * // Monitor connection state\r\n * e.addEventListener(`change`, c => console.log(`${d.priorState} -> ${d.newState}`));\r\n * ```\r\n * \r\n * Write to the device (note the \\n for a new line at the end of the string). This will\r\n * execute the code on the Espruino.\r\n * \r\n * ```js\r\n * e.write(`digitalPulse(LED1,1,[10,500,10,500,10]);\\n`);\r\n * ```\r\n * \r\n * Run some code and return result:\r\n * ```js\r\n * const result = await e.eval(`2+2\\n`);\r\n * ```\r\n */\r\nexport class EspruinoBleDevice extends NordicBleDevice {\r\n  evalTimeoutMs:number;\r\n  evalReplyBluetooth = true;\r\n\r\n  /**\r\n   * Creates instance. You probably would rather use {@link puck} to create.\r\n   * @param device\r\n   * @param opts \r\n   */\r\n  constructor(device:BluetoothDevice, opts:Options = {}) {\r\n    super(device, opts);\r\n    this.evalTimeoutMs = opts.evalTimeoutMs ?? 5*1000;\r\n  }\r\n\r\n  /**\r\n   * Writes a script to Espruino.\r\n   * \r\n   * It will first send a CTRL+C to cancel any previous input, `reset()` to clear the board,\r\n   * and then the provided `code` followed by a new line.\r\n   * \r\n   * Use {@link eval} instead to execute remote code and get the result back.\r\n   * \r\n   * ```js\r\n   * // Eg from https://www.espruino.com/Web+Bluetooth\r\n   * writeScript(`\r\n   *  setInterval(() => Bluetooth.println(E.getTemperature()), 1000);\r\n   *  NRF.on('disconnect',()=>reset());\r\n   * `);\r\n   * ```\r\n   * \r\n   * @param code Code to send. A new line is added automatically.\r\n   */\r\n  async writeScript(code:string) {\r\n    this.write(`\\x03\\x10reset();\\n`);\r\n    this.write(`\\x10${code}\\n`);\r\n  }\r\n\r\n  /**\r\n   * Sends some code to be executed on the Espruino. The result\r\n   * is packaged into JSON and sent back to your code. An exception is\r\n   * thrown if code can't be executed for some reason.\r\n   * \r\n   * ```js\r\n   * const sum = await e.eval(`2+2`);\r\n   * ```\r\n   * \r\n   * It will wait for a period of time for a well-formed response from the\r\n   * Espruino. This might not happen if there is a connection problem\r\n   * or a syntax error in the code being evaled. In cases like the latter,\r\n   * it will take up to `timeoutMs` (default 5 seconds) before we give up\r\n   * waiting for a correct response and throw an error.\r\n   * \r\n   * Tweaking of the timeout may be required if `eval()` is giving up too quickly\r\n   * or too slowly. A default timeout can be given when creating the class.\r\n   * \r\n   * Options:\r\n   *  timeoutMs: Timeout for execution. 5 seconds by default\r\n   *  assumeExclusive If true, eval assumes all replies from controller are in response to eval. True by default\r\n   * @param code Code to run on the Espruino.\r\n   * @param opts Options\r\n   */\r\n  async eval(code:string, opts:EvalOpts = {}):Promise<string> {\r\n    return deviceEval(code, opts, this, `Bluetooth.println`, false, (msg) => {\r\n      this.warn(msg);\r\n    });\r\n  }\r\n  /*\r\n    const timeoutMs = opts.timeoutMs ?? this.evalTimeoutMs;\r\n    const assumeExclusive = opts.assumeExclusive ?? true;\r\n\r\n    if (typeof code !== `string`) throw new Error(`code parameter should be a string`);\r\n      \r\n    return new Promise((resolve, reject) => {\r\n      // Generate a random id so reply can be matched up with this request\r\n      const id = randomString(5);\r\n\r\n      const onData = (d:DataEvent) => {\r\n        try {\r\n          // Parse reply, expecting JSON.\r\n          const dd = JSON.parse(d.data);\r\n\r\n          // Check for reply field, and that it matches\r\n          if (`reply` in dd) {\r\n            if (dd.reply === id) {\r\n              done(); // Stop waiting for result\r\n              if (`result` in dd) {\r\n                resolve(dd.result);\r\n              }\r\n            } else {\r\n              this.warn(`Expected reply ${id}, got ${dd.reply}`);\r\n            }\r\n          }\r\n        } catch (ex:unknown) {\r\n          // If there was a syntax error, response won't be JSON\r\n          if (assumeExclusive) {\r\n            // Fail with unexpected reply as the message\r\n            done(d.data);\r\n          } else {\r\n            // Unexpected reply, but we cannot be sure if it's in response to eval or\r\n            // some other code running on board. So just warn and eventually timeout\r\n            this.warn(ex);\r\n          }\r\n        }\r\n      };\r\n\r\n      const onStateChange = (e:StateChangeEvent) => {\r\n        if (e.newState !== `connected`) done(`State changed to '${e.newState}', aborting`);\r\n      };\r\n\r\n      this.addEventListener(`data`, onData);\r\n      this.addEventListener(`change`, onStateChange);\r\n\r\n      // Init waitFor\r\n      const done = waitFor(timeoutMs, (reason:string) => {\r\n        reject(reason);\r\n      }, () => {\r\n        // If we got a response or there was a timeout, remove event listeners\r\n        this.removeEventListener(`data`, onData);\r\n        this.removeEventListener(`change`, onStateChange);\r\n      });\r\n\r\n      this.write(`\\x10Bluetooth.println(JSON.stringify({reply:\"${id}\", result:JSON.stringify(${code})}))\\n`);\r\n    });\r\n  */\r\n}\r\n\r\n","import {JsonDevice, JsonDeviceOpts, JsonDeviceEvents, JsonDataEvent} from \"./JsonDevice.js\";\r\n\r\nexport {JsonDeviceEvents, JsonDeviceOpts, JsonDataEvent};\r\n\r\nexport type SerialOpts = JsonDeviceOpts & {\r\n  readonly filters?:ReadonlyArray<SerialPortFilter>\r\n  readonly baudRate?:number;\r\n}\r\n\r\n/**\r\n * Serial device. Assumes data is sent with new line characters (\\r\\n) between messages.\r\n * \r\n * ```\r\n * const s = new Device();\r\n * s.addEventListener(`change`, evt => {\r\n *  console.log(`State change ${evt.priorState} -> ${evt.newState}`);\r\n *  if (evt.newState === `connected`) {\r\n *    // Do something when connected...\r\n *  }\r\n * });\r\n * \r\n * // In a UI event handler...\r\n * s.connect();\r\n * ```\r\n * \r\n * Reading incoming data:\r\n * ```\r\n * // Parse incoming data as JSON\r\n * s.addEventListener(`data`, evt => {\r\n *  try {\r\n *    const o = JSON.parse(evt.data);\r\n *    // If we get this far, JSON is legit \r\n *  } catch (ex) {\r\n *  }\r\n * });\r\n * ```\r\n * \r\n * Writing to the microcontroller\r\n * ```\r\n * s.write(JSON.stringify({msg:\"hello\"}));\r\n * ```\r\n */\r\nexport class Device extends JsonDevice {\r\n  port:SerialPort|undefined;\r\n  tx:WritableStreamDefaultWriter<string>|undefined;\r\n\r\n  baudRate:number;\r\n\r\n  constructor(private config:SerialOpts = {}) {\r\n    super(config);\r\n    this.baudRate = config.baudRate ?? 9600;\r\n    if (config.name === undefined) super.name = `Serial.Device`;\r\n\r\n    // Serial.println on microcontroller == \\r\\n\r\n    this.rxBuffer.separator = `\\r\\n`;\r\n  }\r\n\r\n  /**\r\n   * Writes text collected in buffer\r\n   * @param txt \r\n   */\r\n  protected async writeInternal(txt: string) {\r\n    if (this.tx === undefined) throw new Error(`tx not ready`);\r\n    try {\r\n      this.tx.write(txt);\r\n    } catch (ex:unknown) {\r\n      this.warn(ex);\r\n    }\r\n  }\r\n\r\n  onClosed(): void {\r\n    try {\r\n      this.port?.close();\r\n    } catch (ex) {\r\n      this.warn(ex);\r\n    }\r\n    this.states.state = `closed`; \r\n  }\r\n\r\n  onPreConnect(): Promise<void> {\r\n    return Promise.resolve();\r\n  }\r\n\r\n  async onConnectAttempt(): Promise<void> {\r\n    //eslint-disable-next-line functional/no-let\r\n    let reqOpts:SerialPortRequestOptions = { };\r\n    const openOpts:SerialOptions = {\r\n      baudRate: this.baudRate\r\n    };\r\n\r\n    if (this.config.filters) reqOpts = { filters: [...this.config.filters] };\r\n    this.port = await navigator.serial.requestPort(reqOpts);\r\n\r\n    this.port.addEventListener(`disconnect`, _ => {\r\n      this.close();\r\n    });\r\n\r\n    await this.port.open(openOpts);\r\n\r\n    const txW = this.port.writable;\r\n    const txText = new TextEncoderStream();\r\n    if (txW !== null) {\r\n      txText.readable.pipeTo(txW);\r\n      this.tx = txText.writable.getWriter();\r\n    }\r\n\r\n    const rxR = this.port.readable;\r\n    const rxText = new TextDecoderStream();\r\n    if (rxR !== null) {\r\n      rxR.pipeTo(rxText.writable);\r\n      rxText.readable.pipeTo(this.rxBuffer.writable());\r\n    }\r\n  }\r\n}\r\n","import {SimpleEventEmitter} from \"../Events.js\";\r\nimport {StateChangeEvent, StateMachine} from \"../flow/StateMachine\";\r\nimport {indexOfCharCode, omitChars} from \"../Text\";\r\nimport {Codec} from \"./Codec\";\r\nimport {StringReceiveBuffer} from \"./StringReceiveBuffer\";\r\nimport {StringWriteBuffer} from \"./StringWriteBuffer\";\r\nimport {retry} from \"../flow/Retry.js\";\r\n\r\n/**\r\n * Options for JsonDevice\r\n */\r\nexport type JsonDeviceOpts = {\r\n  /**\r\n   * How much data to transfer at a time\r\n   */\r\n  readonly chunkSize?: number\r\n  /**\r\n   * Name of device. This is only used for assisting the console.log output\r\n   */\r\n  readonly name?: string\r\n  /**\r\n   * Number of times to automatically try to reconnect\r\n   */\r\n  readonly connectAttempts?: number\r\n  /**\r\n   * If true, additional logging will be done\r\n   */\r\n  readonly debug?: boolean\r\n}\r\n\r\n/**\r\n * Data received event\r\n */\r\nexport type JsonDataEvent = {\r\n  /**\r\n   * Data received\r\n   */\r\n  readonly data: string\r\n}\r\n\r\n/**\r\n * Events emitted by JsonDevice\r\n */\r\nexport type JsonDeviceEvents = {\r\n  /**\r\n   * Data received\r\n   */\r\n  readonly data: JsonDataEvent\r\n  /**\r\n   * State changed\r\n   */\r\n  readonly change: StateChangeEvent\r\n};\r\n\r\nexport abstract class JsonDevice extends SimpleEventEmitter<JsonDeviceEvents> {\r\n  states: StateMachine;\r\n  codec: Codec;\r\n\r\n  verboseLogging = false;\r\n  name:string;\r\n  connectAttempts:number;\r\n  chunkSize:number;\r\n\r\n  rxBuffer: StringReceiveBuffer;\r\n  txBuffer: StringWriteBuffer;\r\n\r\n  constructor(config: JsonDeviceOpts = {}) {\r\n    super();\r\n\r\n    // Init\r\n    this.verboseLogging = config.debug ?? false;\r\n    this.chunkSize = config.chunkSize ?? 1024;\r\n    this.connectAttempts = config.connectAttempts ?? 3;\r\n    this.name = config.name ?? `JsonDevice`;\r\n\r\n    // Transmit buffer\r\n    this.txBuffer = new StringWriteBuffer(async data => {\r\n      // When we have data to actually write to device\r\n      await this.writeInternal(data);\r\n    }, config.chunkSize);\r\n\r\n    // Receive buffer\r\n    this.rxBuffer = new StringReceiveBuffer(line => {\r\n      this.fireEvent(`data`, {data: line});\r\n    });\r\n\r\n    this.codec = new Codec();\r\n    this.states = new StateMachine(`ready`, {\r\n      ready: `connecting`,\r\n      connecting: [`connected`, `closed`],\r\n      connected: [`closed`],\r\n      closed: `connecting`\r\n    });\r\n\r\n    this.states.addEventListener(`change`, evt => {\r\n      this.fireEvent(`change`, evt);\r\n      this.verbose(`${evt.priorState} -> ${evt.newState}`);\r\n      if (evt.priorState === `connected`) {\r\n        // Clear out buffers\r\n        this.rxBuffer.clear();\r\n        this.txBuffer.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  get isConnected(): boolean {\r\n    return this.states.state === `connected`;\r\n  }\r\n\r\n  get isClosed(): boolean {\r\n    return this.states.state === `closed`;\r\n  }\r\n\r\n  write(txt: string) {\r\n    if (this.states.state !== `connected`) throw new Error(`Cannot write while state is ${this.states.state}`);\r\n    this.txBuffer.add(txt);\r\n  }\r\n\r\n  /**\r\n   * Writes text to output device\r\n   * @param txt \r\n   */\r\n  protected abstract writeInternal(txt: string):void;\r\n\r\n  close() {\r\n    if (this.states.state !== `connected`) return;\r\n    \r\n    this.onClosed();\r\n  }\r\n\r\n  /**\r\n   * Must change state\r\n   */\r\n  abstract onClosed():void;\r\n\r\n  abstract onPreConnect():Promise<void>;\r\n\r\n  async connect() {\r\n    const attempts = this.connectAttempts;\r\n\r\n    this.states.state = `connecting`;\r\n    await this.onPreConnect();\r\n    \r\n    await retry(async () => {\r\n      await this.onConnectAttempt();   \r\n      this.states.state = `connected`;\r\n    }, attempts, 200);\r\n  }\r\n\r\n  /**\r\n   * Should throw if did not succeed.\r\n   */\r\n  protected abstract onConnectAttempt():Promise<void>;\r\n\r\n  private onRx(evt: Event) {\r\n    //const rx = this.rx;\r\n    //if (rx === undefined) return;\r\n\r\n    //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const view = (evt.target as any).value as DataView;\r\n    if (view === undefined) return;\r\n\r\n    //eslint-disable-next-line functional/no-let\r\n    let str = this.codec.fromBuffer(view.buffer);\r\n\r\n    // Check for flow control chars\r\n    const plzStop = indexOfCharCode(str, 19);\r\n    const plzStart = indexOfCharCode(str, 17);\r\n\r\n    // Remove if found\r\n    if (plzStart && plzStop < plzStart) {\r\n      this.verbose(`Tx plz start`);\r\n      str = omitChars(str, plzStart, 1);\r\n      this.txBuffer.paused = false;\r\n    }\r\n    if (plzStop && plzStop > plzStart) {\r\n      this.verbose(`Tx plz stop`);\r\n      str = omitChars(str, plzStop, 1);\r\n      this.txBuffer.paused = true;\r\n    }\r\n\r\n    this.rxBuffer.add(str);\r\n  }\r\n\r\n  protected verbose(m: string) {\r\n    if (this.verboseLogging) console.info(`${this.name} `, m);\r\n  }\r\n\r\n  protected log(m: string) {\r\n    console.log(`${this.name} `, m);\r\n  }\r\n\r\n  protected warn(m: unknown) {\r\n    console.warn(`${this.name} `, m);\r\n  }\r\n}\r\n\r\n","import { deviceEval, EvalOpts} from \"./Espruino.js\";\r\nimport {Device as SerialDevice, SerialOpts} from \"./Serial.js\";\r\n\r\nexport type EspruinoSerialDeviceOpts = SerialOpts & {\r\n  readonly evalTimeoutMs?:number\r\n};\r\n\r\nexport class EspruinoSerialDevice extends SerialDevice {\r\n  evalTimeoutMs:number;\r\n  evalReplyBluetooth = false;\r\n\r\n  constructor(opts?:EspruinoSerialDeviceOpts) {\r\n    super(opts);\r\n\r\n    if (opts === undefined) opts = {};\r\n    this.evalTimeoutMs = opts.evalTimeoutMs ?? 5*1000;  \r\n  }\r\n\r\n  /**\r\n   * Writes a script to Espruino.\r\n   * \r\n   * It will first send a CTRL+C to cancel any previous input, `reset()` to clear the board,\r\n   * and then the provided `code` followed by a new line.\r\n   * \r\n   * Use {@link eval} instead to execute remote code and get the result back.\r\n   * \r\n   * ```js\r\n   * // Eg from https://www.espruino.com/Web+Bluetooth\r\n   * writeScript(`\r\n   *  setInterval(() => Bluetooth.println(E.getTemperature()), 1000);\r\n   *  NRF.on('disconnect',()=>reset());\r\n   * `);\r\n   * ```\r\n   * \r\n   * @param code Code to send. A new line is added automatically.\r\n   */\r\n  async writeScript(code:string) {\r\n    this.write(`\\x03\\x10reset();\\n`);\r\n    this.write(`\\x10${code}\\n`);\r\n  }\r\n\r\n  /**\r\n   * Sends some code to be executed on the Espruino. The result\r\n   * is packaged into JSON and sent back to your code. An exception is\r\n   * thrown if code can't be executed for some reason.\r\n   * \r\n   * ```js\r\n   * const sum = await e.eval(`2+2`);\r\n   * ```\r\n   * \r\n   * It will wait for a period of time for a well-formed response from the\r\n   * Espruino. This might not happen if there is a connection problem\r\n   * or a syntax error in the code being evaled. In cases like the latter,\r\n   * it will take up to `timeoutMs` (default 5 seconds) before we give up\r\n   * waiting for a correct response and throw an error.\r\n   * \r\n   * Tweaking of the timeout may be required if `eval()` is giving up too quickly\r\n   * or too slowly. A default timeout can be given when creating the class.\r\n   * \r\n   * Options:\r\n   *  timeoutMs: Timeout for execution. 5 seconds by default\r\n   *  assumeExclusive If true, eval assumes all replies from controller are in response to eval. True by default\r\n   * @param code Code to run on the Espruino.\r\n   * @param opts Options\r\n   */\r\n  async eval(code:string, opts:EvalOpts = {}):Promise<string> {\r\n    return deviceEval(code, opts, this, `console.log`, true, (msg) => {\r\n      this.warn(msg);\r\n    });\r\n  }\r\n}","import * as Rects from '../geometry/Rect.js';\r\n\r\n/**\r\n * Print available media devices to console\r\n * @param filterKind Defaults `videoinput`\r\n */\r\nexport const dumpDevices = async (filterKind = `videoinput`) => {\r\n  const devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n  devices.forEach(d => {\r\n    if (d.kind !== filterKind) return;\r\n    console.log(d.label);\r\n    console.log(` Kind: ${d.kind}`);\r\n    console.log(` Device id: ${d.deviceId}`);\r\n  });\r\n};\r\n\r\n/**\r\n * Constraints when requesting a camera source\r\n */\r\nexport type Constraints = {\r\n  /**\r\n   * Camera facing: user is front-facing, environment is a rear camera\r\n   */\r\n  readonly facingMode?: `user`|`environment`,\r\n  /**\r\n   * Maximum resolution\r\n   */\r\n  readonly max?:Rects.Rect,\r\n  /**\r\n   * Minimum resolution\r\n   */\r\n  readonly min?:Rects.Rect\r\n}\r\n\r\n/**\r\n * Result from starting a camera\r\n */\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type StartResult = {\r\n  /**\r\n   * Call dispose to stop the camera feed and remove any created resources, \r\n   * such as a VIDEO element\r\n   */\r\n  readonly dispose:() => void;\r\n  /**\r\n   * Video element camera is connected to\r\n   */\r\n  readonly videoEl:HTMLVideoElement;\r\n}\r\n/**\r\n * Attempts to start a video-only stream from a camera into a hidden\r\n * VIDEO element for frame capture. The VIDEO element is created automatically.\r\n * \r\n * \r\n * ```js\r\n * import {Camera} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * try \r\n *  const { videoEl, dispose } = await Camera.start();\r\n *  for await (const frame of frames(videoEl)) {\r\n *   // Do something with pixels...\r\n *  }\r\n * } catch (ex) {\r\n *  console.error(`Video could not be started`);\r\n * }\r\n * ```\r\n * \r\n * Be sure to call the dispose() function to stop the video stream and remov\r\n * the created VIDEO element.\r\n * \r\n * _Constraints_ can be specified to select a camera and resolution:\r\n * ```js\r\n * import {Camera} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * try \r\n *  const { videoEl, dispose } = await Camera.start({\r\n *    facingMode: `environment`,\r\n *    max: { width: 640, height: 480 }\r\n *  });\r\n *  for await (const frame of frames(videoEl)) {\r\n *   // Do something with pixels...\r\n *  }\r\n * } catch (ex) {\r\n *  console.error(`Video could not be started`);\r\n * }\r\n * ```\r\n * @param constraints \r\n * @returns Returns `{ videoEl, dispose }`, where `videoEl` is the created VIDEO element, and `dispose` is a function for removing the element and stopping the video.\r\n */\r\nexport const start = async (constraints:Constraints = {}): Promise<StartResult|undefined> => {\r\n  const videoEl = document.createElement(`VIDEO`) as HTMLVideoElement;\r\n  //eslint-disable-next-line functional/immutable-data\r\n  videoEl.style.display = `none`;\r\n  videoEl.classList.add(`ixfx-camera`);\r\n  \r\n  document.body.appendChild(videoEl);\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let stopVideo = () => { /* no-op */ };\r\n\r\n  const dispose = () => {\r\n    try {\r\n      // Stop source\r\n      stopVideo();\r\n    } catch {\r\n      /* no-op */\r\n    }\r\n\r\n    // Remove the element we created\r\n    videoEl.remove();\r\n  };\r\n\r\n  try {\r\n    // Attempt to start video\r\n    const r = await startWithVideoEl(videoEl, constraints);\r\n    stopVideo = r.dispose;\r\n    return  {videoEl, dispose};\r\n  } catch (ex) {\r\n    // If it didn't work, delete the created element \r\n    console.error(ex);\r\n    dispose();\r\n    throw ex;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Attempts to start a video-only stream from a camera into the designated VIDEO element.\r\n * @param videoEl \r\n * @param constraints \r\n * @returns Result contains videoEl and dispose function\r\n */\r\nconst startWithVideoEl = async (videoEl:HTMLVideoElement, constraints:Constraints = {}):Promise<StartResult> => {\r\n  if (videoEl === undefined) throw new Error(`videoEl undefined`);\r\n  if (videoEl === null) throw new Error(`videoEl null`);\r\n\r\n  const facingMode = constraints.facingMode ?? `user`;\r\n  const maxRes = constraints.max;\r\n  const minRes = constraints.min;\r\n\r\n  // Setup constraints\r\n  const c = {\r\n    audio: false,\r\n    video: {\r\n      facingMode,\r\n      width: {},\r\n      height: {}\r\n    }\r\n  };\r\n\r\n  if (maxRes) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    c.video.width = {\r\n      max: maxRes.width\r\n    };\r\n    //eslint-disable-next-line functional/immutable-data\r\n    c.video.height = {\r\n      max: maxRes.height\r\n    };\r\n  }\r\n  if (minRes) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    c.video.width = {\r\n      min: minRes.width\r\n    };\r\n    //eslint-disable-next-line functional/immutable-data\r\n    c.video.height = {\r\n      min: minRes.height\r\n    };\r\n  }\r\n\r\n  // Clean-up function\r\n  const dispose = () => {\r\n    console.log(`Camera:dispose`);\r\n    videoEl.pause();\r\n    const t = stream.getTracks();\r\n    t.forEach(track => track.stop());\r\n  };\r\n\r\n  // Request stream\r\n  const stream = await navigator.mediaDevices.getUserMedia(c);\r\n\r\n  // Assign to VIDEO element\r\n  //eslint-disable-next-line functional/immutable-data\r\n  videoEl.srcObject = stream;\r\n\r\n  const ret = {videoEl, dispose};\r\n  const p = new Promise<StartResult>((resolve, reject) => {\r\n    videoEl.addEventListener(`loadedmetadata`,  () => {\r\n      videoEl.play().then(() => {\r\n        resolve(ret);\r\n      }).catch((ex) => {\r\n        reject(ex);\r\n      });\r\n    });\r\n  });\r\n  return p;\r\n};","/* eslint-disable @typescript-eslint/no-non-null-assertion,functional/immutable-data */\r\nimport {continuously, delayLoop } from \"../flow/index.js\";\r\n\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type Capturer = {\r\n  start():void;\r\n  cancel():void;\r\n  readonly canvasEl:HTMLCanvasElement;\r\n}\r\n\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type ManualCapturer = {\r\n  capture():ImageData;\r\n  readonly canvasEl:HTMLCanvasElement;\r\n  dispose():void;\r\n};\r\n\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type CaptureOpts = {\r\n  readonly maxIntervalMs?:number;\r\n  readonly showCanvas?:boolean;\r\n  readonly workerScript?:string;\r\n  readonly onFrame?:(pixels:ImageData) => void;\r\n};\r\n\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type ManualCaptureOpts = {\r\n  /**\r\n   * If true, the intermediate canvas is shown\r\n   * The intermediate canvas is where captures from the source are put in order\r\n   * to get the ImageData\r\n   */\r\n  readonly showCanvas?:boolean\r\n  /**\r\n   * If specified, this function will be called after ImageData is captured\r\n   * from the intermediate canvs. This allows for drawing on top of the\r\n   * captured image.\r\n   */\r\n  readonly postCaptureDraw?:(ctx:CanvasRenderingContext2D, width:number, height:number) => void\r\n}\r\n\r\n/**\r\n * Options for frames generator\r\n */\r\nexport type FramesOpts = {\r\n  /**\r\n   * Max frame rate (millis per frame), or 0 for animation speed\r\n   */\r\n  readonly maxIntervalMs?:number;\r\n  /**\r\n   * False by default, created canvas will be hidden\r\n   */\r\n  readonly showCanvas?:boolean;\r\n  /**\r\n   * If provided, this canvas will be used as the buffer rather than creating one.\r\n   */\r\n  readonly canvasEl?:HTMLCanvasElement;\r\n}\r\n\r\n/**\r\n * Generator that yields frames from a video element as [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\r\n * \r\n * ```js\r\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * \r\n * const ctx = canvasEl.getContext(`2d`); \r\n * for await (const frame of Video.frames(videoEl)) {\r\n *   // TODO: Some processing of pixels\r\n *\r\n *   // Draw image on to the visible canvas\r\n *   ctx.putImageData(frame, 0, 0);\r\n * }\r\n * ```\r\n * \r\n * Under the hood it creates a hidden canvas where frames are drawn to. This is necessary\r\n * to read back pixel data. An existing canvas can be used if it is passed in as an option.\r\n * \r\n * Options:\r\n * * `canvasEl`: CANVAS element to use as a buffer (optional)\r\n * * `maxIntervalMs`: Max frame rate (0 by default, ie runs as fast as possible)\r\n * * `showCanvas`: Whether buffer canvas will be shown (false by default)\r\n * @param sourceVideoEl \r\n * @param opts \r\n */\r\n//eslint-disable-next-line func-style\r\nexport async function* frames(sourceVideoEl:HTMLVideoElement, opts:FramesOpts = {}):AsyncIterable<ImageData>  {\r\n  // TODO: Ideally use OffscreenCanvas when it has wider support?\r\n  // TODO: When ImageBitmap has possibility to get pixels, that might also help to avoid having to write to hidden canvas\r\n\r\n  const maxIntervalMs = opts.maxIntervalMs ?? 0;\r\n  const showCanvas = opts.showCanvas ?? false;\r\n  //eslint-disable-next-line functional/no-let\r\n  let canvasEl = opts.canvasEl;\r\n  //eslint-disable-next-line functional/no-let\r\n  let w, h;\r\n  w = h = 0;\r\n\r\n  // Create & setup canvas\r\n  if (canvasEl === undefined) {\r\n    canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\r\n    canvasEl.classList.add(`ixfx-frames`);\r\n    if (!showCanvas) {\r\n      canvasEl.style.display = `none`;\r\n    }\r\n    document.body.appendChild(canvasEl);\r\n  }\r\n  \r\n  // Update size of canvas based on video\r\n  const updateSize = () => {\r\n    if (canvasEl === undefined) return;\r\n    w = sourceVideoEl.videoWidth;\r\n    h = sourceVideoEl.videoHeight;\r\n    canvasEl.width = w;\r\n    canvasEl.height = h;\r\n  };\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let c:CanvasRenderingContext2D|null = null;\r\n\r\n  const looper = delayLoop(maxIntervalMs);\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  for await (const _ of looper) {\r\n    // If we don't yet have the size of video, get it\r\n    if (w === 0 || h === 0) updateSize();\r\n    \r\n    // If there is still no dimensions (ie stream has not started), there's nothing to do yet\r\n    if (w === 0 || h === 0) continue;\r\n\r\n    // Draw current frame from video element to hidden canvas\r\n    if (c === null) c = canvasEl.getContext(`2d`);\r\n    if (c === null) return;\r\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\r\n\r\n    // Get pixels\r\n    const pixels = c.getImageData(\r\n      0, 0, w, h\r\n    );\r\n    yield pixels;\r\n  }\r\n}\r\n\r\n/**\r\n * Captures frames from a video element. It can send pixel data to a function or post to a worker script.\r\n * \r\n * @example Using a function\r\n * ```js\r\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * \r\n * // Capture from a VIDEO element, handling frame data\r\n * // imageData is ImageData type: https://developer.mozilla.org/en-US/docs/Web/API/ImageData\r\n * Video.capture(sourceVideoEl, {\r\n *  onFrame(imageData => {\r\n *    // Do something with pixels...\r\n *  });\r\n * });\r\n * ```\r\n * \r\n * @example Using a worker\r\n * ```js\r\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * \r\n * Video.capture(sourceVideoEl, {\r\n *  workerScript: `./frameProcessor.js`\r\n * });\r\n * ```\r\n * \r\n * In frameProcessor.js:\r\n * ```\r\n * const process = (frame) => {\r\n *  // ...process frame\r\n * \r\n *  // Send image back?\r\n *  self.postMessage({frame});\r\n * };\r\n * \r\n * self.addEventListener(`message`, evt => {\r\n *   const {pixels, width, height} = evt.data;\r\n *   const frame = new ImageData(new Uint8ClampedArray(pixels),\r\n *     width, height);\r\n *\r\n *   // Process it\r\n *   process(frame);\r\n * });\r\n * ```\r\n * \r\n * Options:\r\n * * `canvasEl`: CANVAS element to use as a buffer (optional)\r\n * * `maxIntervalMs`: Max frame rate (0 by default, ie runs as fast as possible)\r\n * * `showCanvas`: Whether buffer canvas will be shown (false by default)\r\n * * `workerScript`: If this specified, this URL will be loaded as a Worker, and frame data will be automatically posted to it\r\n * \r\n * Implementation: frames are captured using a animation-speed loop to a hidden canvas. From there\r\n * the pixel data is extracted and sent to either destination. In future the intermediate drawing to a\r\n * canvas could be skipped if it becomes possible to get pixel data from an ImageBitmap.\r\n * @param sourceVideoEl Source VIDEO element\r\n * @param opts \r\n * @returns \r\n */\r\nexport const capture = (sourceVideoEl: HTMLVideoElement, opts:CaptureOpts = {}):Capturer => {\r\n  const maxIntervalMs = opts.maxIntervalMs ?? 0;\r\n  const showCanvas = opts.showCanvas ?? false;\r\n  const onFrame = opts.onFrame;\r\n\r\n  // Ideally use OffscreenCanvas when it has support?\r\n  const w = sourceVideoEl.videoWidth;\r\n  const h = sourceVideoEl.videoHeight;\r\n\r\n  // Create canvas\r\n  const canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\r\n  canvasEl.classList.add(`ixfx-capture`);\r\n  \r\n  if (!showCanvas) {\r\n    canvasEl.style.display = `none`;\r\n  }\r\n  canvasEl.width = w;\r\n  canvasEl.height = h;\r\n  //eslint-disable-next-line functional/no-let\r\n  let c:CanvasRenderingContext2D|null = null;\r\n  //eslint-disable-next-line functional/no-let\r\n  let worker:Worker|undefined;\r\n  if (opts.workerScript) {\r\n    worker = new Worker(opts.workerScript);\r\n  }\r\n\r\n  // Should we get image data?\r\n  const getPixels = worker || onFrame;\r\n  if (!getPixels && !showCanvas) {\r\n    console.warn(`Video will be captured to hidden element without any processing. Is this what you want?`);\r\n  }\r\n\r\n  const loop = continuously(() => {\r\n    // Draw current frame from video element to hidden canvas\r\n    if (c === null) c = canvasEl.getContext(`2d`);\r\n    if (c === null) return;\r\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\r\n    //eslint-disable-next-line functional/no-let\r\n    let pixels:ImageData|undefined;\r\n\r\n    if (getPixels) {\r\n      // ImageData necessary\r\n      pixels = c.getImageData(\r\n        0, 0, w, h\r\n      );\r\n    }\r\n\r\n    if (worker) {\r\n      // Send to worker\r\n      worker.postMessage({\r\n        pixels: pixels!.data.buffer,\r\n        width: w,\r\n        height: h,\r\n        channels: 4\r\n      }, [pixels!.data.buffer]); \r\n    }\r\n    if (onFrame) {\r\n      // Send to callback\r\n      try {\r\n        onFrame(pixels!);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  \r\n  }, maxIntervalMs);\r\n\r\n  return {\r\n    start: () => loop.start(),\r\n    cancel: () => loop.cancel(),\r\n    canvasEl\r\n  };\r\n};\r\n\r\n\r\nexport const manualCapture =(sourceVideoEl: HTMLVideoElement, opts:ManualCaptureOpts = {}):ManualCapturer => {\r\n  const showCanvas = opts.showCanvas ?? false;\r\n    \r\n  // Ideally use OffscreenCanvas when it has support?\r\n  const w = sourceVideoEl.videoWidth;\r\n  const h = sourceVideoEl.videoHeight;\r\n  \r\n  // Create canvas\r\n  const canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\r\n  canvasEl.classList.add(`ixfx-capture`);\r\n  document.body.append(canvasEl);\r\n\r\n  if (!showCanvas) canvasEl.style.display = `none`;\r\n  \r\n  canvasEl.width = w;\r\n  canvasEl.height = h;\r\n\r\n  const capture = ():ImageData => {\r\n    //eslint-disable-next-line functional/no-let\r\n    let c:CanvasRenderingContext2D|null = null;\r\n\r\n    // Draw current frame from video element to hidden canvas\r\n    if (c === null) c = canvasEl.getContext(`2d`);\r\n    if (c === null) throw new Error(`Could not create graphics context`);\r\n    c.drawImage(sourceVideoEl, 0, 0, w, h);\r\n    //eslint-disable-next-line functional/no-let\r\n    const pixels=  c.getImageData(\r\n      0, 0, w, h\r\n    );\r\n\r\n    if (opts.postCaptureDraw) opts.postCaptureDraw(c, w, h);\r\n    return pixels;\r\n  };\r\n\r\n  const dispose = ():void => {\r\n    try {\r\n      canvasEl.remove();\r\n    } catch (_) {\r\n      // no-op\r\n    }\r\n  };\r\n\r\n  const c:ManualCapturer = {\r\n    canvasEl,\r\n    capture,\r\n    dispose\r\n  };\r\n  return c;\r\n};","export type Sources = ``| `camera`;\r\nimport * as Camera from './Camera.js';\r\nimport * as Video from '../visual/Video.js';\r\n\r\ntype State = `ready`|`initialised`|`disposed`;\r\n\r\n//eslint-disable-next-line functional/no-mixed-type\r\nexport type FrameProcessorOpts = {\r\n  readonly showCanvas?:boolean\r\n  readonly showPreview?:boolean\r\n  /**\r\n   * If specified, this function will be called after ImageData is captured\r\n   * from the intermediate canvs. This allows for drawing on top of the\r\n   * captured image.\r\n   */\r\n   readonly postCaptureDraw?:(ctx:CanvasRenderingContext2D, width:number, height:number) => void\r\n}\r\n\r\nexport class FrameProcessor {\r\n  private _source:Sources;\r\n  private _state:State;\r\n  private _teardownNeeded = false;\r\n  \r\n  private _cameraConstraints:Camera.Constraints|undefined;\r\n  private _cameraStartResult:Camera.StartResult|undefined;\r\n  private _cameraCapture:Video.ManualCapturer|undefined;\r\n\r\n  private _showCanvas:boolean;\r\n  private _showPreview:boolean;\r\n  private _postCaptureDraw;\r\n  private _timer:number;\r\n\r\n  constructor(opts:FrameProcessorOpts = {}) {\r\n    this._state = `ready`;\r\n    this._source = ``;\r\n    this._timer = performance.now();\r\n    this._showCanvas = opts.showCanvas ?? false;\r\n    this._showPreview = opts.showPreview ?? false;\r\n    this._postCaptureDraw = opts.postCaptureDraw;\r\n  }\r\n\r\n  showPreview(enabled:boolean) {\r\n    if (this._state === `disposed`) throw new Error(`Disposed`);\r\n    //eslint-disable-next-line functional/no-let\r\n    let el:HTMLElement|undefined;\r\n\r\n    switch (this._source) {\r\n    case `camera`:\r\n      el = this._cameraStartResult?.videoEl;\r\n      if (el !== undefined) el.style.display = enabled ? `block` : `none`;\r\n      break;\r\n    }\r\n\r\n    this._showPreview = enabled;\r\n  }\r\n\r\n  showCanvas(enabled:boolean) {\r\n    if (this._state === `disposed`) throw new Error(`Disposed`);\r\n    //eslint-disable-next-line functional/no-let\r\n    let el:HTMLElement|undefined;\r\n    switch (this._source) {\r\n    case `camera`:\r\n      el = this._cameraCapture?.canvasEl;\r\n      if (el !== undefined) el.style.display = enabled ? `block` : `none`;  \r\n      break;\r\n    }  \r\n\r\n    this._showCanvas = enabled;\r\n  }\r\n\r\n  getCapturer():Video.ManualCapturer|undefined {\r\n    if (this._state === `disposed`) throw new Error(`Disposed`);\r\n    switch (this._source) {\r\n    case `camera`:\r\n      return this._cameraCapture;\r\n    }\r\n  }\r\n\r\n  async useCamera(constraints?:Camera.Constraints) {\r\n    if (this._state === `disposed`) throw new Error(`Disposed`);\r\n\r\n    this._source  = `camera`;\r\n    if (this._teardownNeeded) this.teardown();\r\n    this._cameraConstraints = constraints;\r\n    await this.init();\r\n  }\r\n\r\n  private async initCamera() {\r\n    const r = await Camera.start(this._cameraConstraints);\r\n    if (r === undefined) throw new Error(`Could not start camera`);\r\n\r\n    if (this._showPreview) r.videoEl.style.display = `block`;\r\n\r\n    // Set up manual capturer\r\n    this._cameraCapture = Video.manualCapture(r.videoEl, {\r\n      postCaptureDraw:this._postCaptureDraw,\r\n      showCanvas: this._showCanvas\r\n    });\r\n\r\n    this._cameraStartResult = r;\r\n    this._teardownNeeded = true;\r\n    this._cameraStartResult = r;\r\n  }\r\n\r\n  dispose() {\r\n    if (this._state === `disposed`) return;\r\n    this.teardown();\r\n    this._state = `disposed`;\r\n  }\r\n\r\n  private async init() {\r\n    this._timer = performance.now();\r\n    switch (this._source) {\r\n    case `camera`:\r\n      await this.initCamera();\r\n      break;\r\n    }\r\n    this._state = `initialised`;\r\n  }\r\n\r\n  private teardown() {\r\n    if (!this._teardownNeeded) return;\r\n    switch (this._source) {\r\n    case `camera`:\r\n      this._cameraCapture?.dispose();\r\n      this._cameraStartResult?.dispose();\r\n\r\n      break;\r\n    }\r\n    this._teardownNeeded = false;\r\n  }\r\n\r\n  getFrame():ImageData|undefined {\r\n    if (this._state === `disposed`) throw new Error(`Disposed`);\r\n\r\n    switch (this._source) {\r\n    case `camera`:\r\n      return this.getFrameCamera();\r\n    }\r\n  }\r\n\r\n  getTimestamp():number {\r\n    return performance.now() - this._timer;\r\n  }\r\n\r\n  private getFrameCamera():ImageData|undefined {\r\n    return this._cameraCapture?.capture();\r\n  }\r\n} \r\n","import * as Drawing from './Drawing.js';\r\nimport * as Svg from './Svg.js';\r\nimport * as Plot from './Plot.js';\r\nimport * as Plot2 from './Plot2.js';\r\n\r\nimport * as Palette from  './Palette';\r\nimport * as Colour from './Colour.js';\r\nimport * as SceneGraph from './SceneGraph.js';\r\nimport * as Video from './Video.js';\r\n\r\n/**\r\n * Colour interpolation, scale generation and parsing\r\n * \r\n * Overview\r\n * * {@link interpolate}: Blend colours\r\n * * {@link scale}: Produce colour scale\r\n * * {@link opacity}: Give a colour opacity\r\n * * {@link randomHue}: Generate a random hue\r\n * * {@link goldenAngleColour}: Pick perceptually different shades\r\n * \r\n * CSS\r\n * * {@link getCssVariable}: Parse a CSS-defined colour\r\n * \r\n * Conversions: convert from 'blue', 'rgb(255,0,0)',  'hsl(0, 100%, 50%)' etc:\r\n * * {@link toHex}: to a hex format string\r\n * * {@link toHsl}: to a `{h, s, l}` object\r\n * * {@link toRgb}: to a `{r, g, b}` object\r\n */\r\nexport {Colour};\r\n\r\n/**\r\n * Working with video, either playback from a file or stream from a video camera.\r\n * \r\n * Overview\r\n * * {@link frames}: Yields frames from a video camera\r\n * * {@link capture}: Capture frames from a VIDEO element\r\n * \r\n * @example Importing\r\n * ```js\r\n * // If library is stored two directories up under `ixfx/`\r\n * import {Video} from '../../ixfx/dist/visual.js';\r\n * // Import from web\r\n * import {Video} from 'https://unpkg.com/ixfx/dist/visual.js'\r\n * ```\r\n */\r\nexport {Video};\r\n\r\nexport {Palette,  Drawing, Svg, Plot, Plot2, SceneGraph};\r\n\r\ntry {\r\n  if (typeof window !== `undefined`) {\r\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\r\n    (window as any).ixfx = {...(window as any).ixfx, Visuals: {SceneGraph, Plot2, Drawing, Svg, Plot, Palette, Colour, Video}};\r\n  }\r\n} catch { /* no-op */ }\r\n","import * as Points from '../geometry/Point.js';\r\nimport * as Paths from '../geometry/Path.js';\r\nimport * as Lines from '../geometry/Line.js';\r\nimport * as Triangles from '../geometry/Triangle.js';\r\nimport {array as guardArray} from '../Guards.js';\r\nimport * as Circles from '../geometry/Circle.js';\r\nimport * as Arcs from '../geometry/Arc.js';\r\nimport * as Beziers from '../geometry/Bezier.js';\r\nimport * as Rects from '../geometry/Rect.js';\r\nimport * as Ellipses from'../geometry/Ellipse.js';\r\nimport * as Colours from '../visual/Colour.js';\r\n\r\n//import * as color2k from 'color2k';\r\n\r\nimport {stack, Stack} from '../collections/index.js';\r\nimport {resolveEl} from '../dom/Util.js';\r\nimport {roundUpToMultiple} from '../Util.js';\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst PIPI = Math.PI * 2;\r\n\r\nexport type CanvasCtxQuery = null | string | CanvasRenderingContext2D | HTMLCanvasElement;\r\n\r\n/**\r\n * Gets a 2d drawing context from canvas element or query, or throws an error\r\n * @param canvasElCtxOrQuery Canvas element reference or DOM query\r\n * @returns Drawing context.\r\n */\r\nexport const getCtx = (canvasElCtxOrQuery:CanvasCtxQuery): CanvasRenderingContext2D => {\r\n  if (canvasElCtxOrQuery === null) throw Error(`canvasElCtxOrQuery null. Must be a 2d drawing context or Canvas element`);\r\n  if (canvasElCtxOrQuery === undefined) throw Error(`canvasElCtxOrQuery undefined. Must be a 2d drawing context or Canvas element`);\r\n  \r\n  const ctx = (canvasElCtxOrQuery instanceof CanvasRenderingContext2D) ?\r\n    canvasElCtxOrQuery : (canvasElCtxOrQuery instanceof HTMLCanvasElement) ?\r\n      canvasElCtxOrQuery.getContext(`2d`) : (typeof canvasElCtxOrQuery === `string`) ?\r\n        resolveEl<HTMLCanvasElement>(canvasElCtxOrQuery).getContext(`2d`): canvasElCtxOrQuery;\r\n  if (ctx === null) throw new Error(`Could not create 2d context for canvas`);\r\n  return ctx;\r\n};\r\n\r\n/**\r\n * Makes a helper object that wraps together a bunch of drawing functions that all use the same drawing context\r\n * @param ctxOrCanvasEl Drawing context or canvs element reference\r\n * @param canvasBounds Bounds of drawing (optional). Used for limiting `textBlock`\r\n * @returns \r\n */\r\nexport const makeHelper = (ctxOrCanvasEl:CanvasCtxQuery, canvasBounds?:Rects.Rect) => {\r\n  // TODO: Is there a way of automagically defining makeHelper to avoid repetition and keep typesafety and JSDoc?\r\n  const ctx = getCtx(ctxOrCanvasEl);\r\n  return {\r\n    paths(pathsToDraw: Paths.Path[], opts?: DrawingOpts): void {\r\n      paths(ctx, pathsToDraw, opts);\r\n    },\r\n    line(lineToDraw: Lines.Line|Lines.Line[], opts?: DrawingOpts): void {\r\n      line(ctx, lineToDraw, opts);\r\n    },\r\n    rect(rectsToDraw:Rects.RectPositioned|Rects.RectPositioned[], opts?:DrawingOpts & { filled?:boolean}): void {\r\n      rect(ctx, rectsToDraw, opts);\r\n    },\r\n    bezier(bezierToDraw: Beziers.QuadraticBezier|Beziers.CubicBezier, opts?:DrawingOpts): void {\r\n      bezier(ctx, bezierToDraw, opts);\r\n    },\r\n    connectedPoints(pointsToDraw: Points.Point[], opts?: DrawingOpts & {loop?: boolean}): void {\r\n      connectedPoints(ctx, pointsToDraw, opts);\r\n    },\r\n    pointLabels(pointsToDraw: Points.Point[], opts?:DrawingOpts): void {\r\n      pointLabels(ctx, pointsToDraw, opts);\r\n    },\r\n    dot(dotPosition: Points.Point|Points.Point[], opts?: DrawingOpts & {radius: number, outlined?: boolean, filled?: boolean}): void {\r\n      dot(ctx, dotPosition, opts);\r\n    },\r\n    circle(circlesToDraw:Circles.CirclePositioned|Circles.CirclePositioned[], opts:DrawingOpts):void {\r\n      circle(ctx, circlesToDraw, opts);\r\n    },\r\n    arc(arcsToDraw:Arcs.ArcPositioned|Arcs.ArcPositioned[], opts:DrawingOpts):void {\r\n      arc(ctx, arcsToDraw, opts);\r\n    },\r\n    textBlock(lines:string[], opts:DrawingOpts & { anchor:Points.Point, anchorPadding?:number, bounds?: Rects.RectPositioned}):void {\r\n      if (opts.bounds === undefined && canvasBounds !== undefined) opts = {...opts, bounds: {...canvasBounds, x:0, y:0 }};\r\n      textBlock(ctx, lines, opts);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Drawing options\r\n */\r\nexport type DrawingOpts = {\r\n  /**\r\n   * Stroke style\r\n   */\r\n  readonly strokeStyle?:string\r\n  /**\r\n   * Fill style\r\n   */\r\n  readonly fillStyle?:string\r\n  /**\r\n   * If true, diagnostic helpers will be drawn\r\n   */\r\n  readonly debug?:boolean\r\n};\r\n\r\nexport type LineOpts = {\r\n  readonly lineWidth?:number\r\n  readonly lineCap?:CanvasLineCap\r\n  readonly lineJoin?:CanvasLineJoin\r\n}\r\n\r\n/**\r\n * Creates a drawing op to apply provided options\r\n * @param opts Drawing options that apply\r\n * @returns Stack\r\n */\r\nconst optsOp = (opts:DrawingOpts):StackOp => coloringOp(opts.strokeStyle, opts.fillStyle);\r\n\r\n/**\r\n * Applies drawing options to `ctx`, returning a {@link DrawingStack}\r\n * @param ctx Context\r\n * @param opts Options\r\n * @returns \r\n */\r\nconst applyOpts = (ctx:CanvasRenderingContext2D, opts:DrawingOpts = {}, ...additionalOps:readonly StackOp[]):DrawingStack => {\r\n  if (ctx === undefined) throw Error(`ctx undefined`);\r\n\r\n  // Create a drawing stack, pushing an op generated from drawing options\r\n  const stack = drawingStack(ctx).push(optsOp(opts), ...additionalOps);\r\n  \r\n  \r\n  // Apply stack to context\r\n  stack.apply();\r\n  return stack;\r\n};\r\n\r\n/**\r\n * Draws one or more arcs.\r\n * @param ctx \r\n * @param arcs \r\n * @param opts \r\n */\r\nexport const arc = (ctx:CanvasRenderingContext2D, arcs:Arcs.ArcPositioned|ReadonlyArray<Arcs.ArcPositioned>, opts:DrawingOpts = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (arc:Arcs.ArcPositioned) => {\r\n    ctx.beginPath();\r\n    ctx.arc(arc.x, arc.y, arc.radius, arc.startRadian, arc.endRadian);\r\n    ctx.stroke();\r\n  };\r\n\r\n  if (Array.isArray(arcs)) {\r\n    arcs.forEach(draw);\r\n  } else draw(arcs as Arcs.ArcPositioned);\r\n};\r\n\r\n/**\r\n * A drawing stack operation\r\n */\r\nexport type StackOp = (ctx:CanvasRenderingContext2D) => void;\r\n\r\n/**\r\n * A drawing stack (immutable)\r\n */\r\nexport type DrawingStack = Readonly<{\r\n  /**\r\n   * Push a new drawing op\r\n   * @param op Operation to add\r\n   * @returns stack with added op\r\n   */\r\n  push(...ops:readonly StackOp[]):DrawingStack\r\n  /**\r\n   * Pops an operatiomn\r\n   * @returns Drawing stack with item popped\r\n   */\r\n  pop():DrawingStack\r\n  /**\r\n   * Applies drawing stack\r\n   */\r\n  apply():DrawingStack\r\n}>\r\n\r\n/**\r\n * Colouring drawing op. Applies `fillStyle` and `strokeStyle`\r\n * @param strokeStyle \r\n * @param fillStyle \r\n * @returns \r\n */\r\nconst coloringOp = (strokeStyle:string|CanvasGradient|CanvasPattern|undefined, fillStyle:string|CanvasGradient|CanvasPattern|undefined):StackOp => {\r\n  const apply = (ctx:CanvasRenderingContext2D) => {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (fillStyle) ctx.fillStyle = fillStyle;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (strokeStyle) ctx.strokeStyle = strokeStyle;\r\n  };\r\n  return apply;\r\n};\r\n\r\nconst lineOp = (lineWidth:number|undefined, lineJoin:CanvasLineJoin|undefined, lineCap:CanvasLineCap|undefined):StackOp => {\r\n  const apply = (ctx:CanvasRenderingContext2D) => {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (lineWidth) ctx.lineWidth = lineWidth;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (lineJoin) ctx.lineJoin = lineJoin;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (lineCap) ctx.lineCap = lineCap;\r\n\r\n  };\r\n  return apply;\r\n};\r\n\r\n/**\r\n * Creates and returns an immutable drawing stack for a context\r\n * @param ctx Context\r\n * @param stk Initial stack operations\r\n * @returns \r\n */\r\nexport const drawingStack = (ctx:CanvasRenderingContext2D, stk?:Stack<StackOp>):DrawingStack => {\r\n  if (stk === undefined) stk = stack<StackOp>();\r\n\r\n  const push = (...ops:StackOp[]):DrawingStack => {\r\n    if (stk === undefined) stk = stack<StackOp>();\r\n    const s = stk.push(...ops);\r\n    ops.forEach(o => o(ctx));\r\n    return drawingStack(ctx, s);\r\n  };\r\n\r\n  const pop = ():DrawingStack => {\r\n    const s = stk?.pop();\r\n    return drawingStack(ctx, s);\r\n  };\r\n\r\n  const apply = ():DrawingStack => {\r\n    if (stk === undefined) return drawingStack(ctx);\r\n    stk.forEach(op => op(ctx));\r\n    return drawingStack(ctx, stk);\r\n  };\r\n\r\n  return {push, pop, apply};\r\n};\r\n\r\nexport const lineThroughPoints = (ctx:CanvasRenderingContext2D, points:readonly Points.Point[], opts?:DrawingOpts):void => {\r\n  applyOpts(ctx, opts);\r\n  \r\n  // https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas\r\n  ctx.moveTo((points[0].x), points[0].y);\r\n\r\n  points.forEach((p, index) => {\r\n    if (index + 2 >= points.length) return;\r\n    const pNext = points[index+1];\r\n    const mid = {\r\n      x: (p.x + pNext.x) / 2,\r\n      y: (p.y + pNext.y) / 2\r\n    };\r\n    const cpX1 = (mid.x + p.x) / 2;\r\n    const cpX2 = (mid.x + pNext.x) / 2;\r\n    ctx.quadraticCurveTo(cpX1, pNext.y, mid.x, mid.y);\r\n    ctx.quadraticCurveTo(cpX2, pNext.y, pNext.x, pNext.y);\r\n  });\r\n};\r\n\r\n/**\r\n * Draws one or more circles. Will draw outline/fill depending on\r\n * whether `strokeStyle` or `fillStyle` params are present in the drawing options.\r\n * \r\n * ```js\r\n * // Draw a circle with radius of 10 at 0,0\r\n * circle(ctx, {radius:10});\r\n * \r\n * // Draw a circle of radius 10 at 100,100\r\n * circle(ctx, {radius: 10, x: 100, y: 100});\r\n * \r\n * // Draw two blue outlined circles\r\n * circle(ctx, [ {radius: 5}, {radius: 10} ], {strokeStyle:`blue`});\r\n * ```\r\n * @param ctx Drawing context\r\n * @param circlesToDraw Circle(s) to draw\r\n * @param opts Drawing options\r\n */\r\nexport const circle = (ctx:CanvasRenderingContext2D, circlesToDraw:Circles.CirclePositioned|readonly Circles.CirclePositioned[], opts:DrawingOpts = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (c:Circles.CirclePositioned) => {\r\n    ctx.beginPath();\r\n    ctx.arc(c.x, c.y, c.radius, 0, PIPI);\r\n    if (opts.strokeStyle) ctx.stroke();\r\n    if (opts.fillStyle) ctx.fill();\r\n  };\r\n  if (Array.isArray(circlesToDraw)) circlesToDraw.forEach(draw);\r\n  else draw(circlesToDraw as Circles.CirclePositioned);\r\n};\r\n\r\n/**\r\n * Draws one or more ellipses. Will draw outline/fill depending on\r\n * whether `strokeStyle` or `fillStyle` params are present in the drawing options.\r\n * @param ctx \r\n * @param ellipsesToDraw \r\n * @param opts \r\n */\r\nexport const ellipse = (ctx:CanvasRenderingContext2D, ellipsesToDraw:Ellipses.EllipsePositioned|readonly Ellipses.EllipsePositioned[], opts:DrawingOpts = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (e:Ellipses.EllipsePositioned) => {\r\n    ctx.beginPath();\r\n    const rotation = e.rotation ?? 0;\r\n    const startAngle =e.startAngle ?? 0;\r\n    const endAngle = e.endAngle ?? PIPI;\r\n    ctx.ellipse(e.x, e.y, e.radiusX, e.radiusY, rotation, startAngle, endAngle);\r\n    if (opts.strokeStyle) ctx.stroke();\r\n    if (opts.fillStyle) ctx.fill();\r\n  };\r\n  if (Array.isArray(ellipsesToDraw)) ellipsesToDraw.forEach(draw);\r\n  else draw(ellipsesToDraw as Ellipses.EllipsePositioned);\r\n};\r\n\r\n/**\r\n * Draws one or more paths.\r\n * supported paths are quadratic beziers and lines.\r\n * @param ctx\r\n * @param pathsToDraw \r\n * @param opts \r\n */\r\nexport const paths = (ctx: CanvasRenderingContext2D, pathsToDraw: readonly Paths.Path[]|Paths.Path, opts: Readonly<{readonly strokeStyle?: string, readonly debug?: boolean}> = {}) =>  {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (path:Paths.Path) => {\r\n    // Call appropriate drawing function depending on the type of path\r\n    if (Beziers.isQuadraticBezier(path)) quadraticBezier(ctx, path, opts);\r\n    else if (Lines.isLine(path)) line(ctx, path, opts);\r\n    else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\r\n  };\r\n\r\n  if (Array.isArray(pathsToDraw)) pathsToDraw.forEach(draw);\r\n  else draw(pathsToDraw as Paths.Path);\r\n};\r\n\r\n/**\r\n * Draws a line between all the given points.\r\n * If a fillStyle is specified, it will be filled.\r\n * \r\n * See also: \r\n * * {@link line}: Draw one or more lines \r\n *\r\n * @param ctx\r\n * @param pts\r\n */\r\nexport const connectedPoints = (ctx: CanvasRenderingContext2D, pts: readonly Points.Point[], opts: {readonly loop?: boolean, readonly fillStyle?:string, readonly strokeStyle?: string} = {}) => {\r\n  const shouldLoop = opts.loop ?? false;\r\n\r\n  guardArray(pts);\r\n  if (pts.length === 0) return;\r\n\r\n  // Throw an error if any point is invalid\r\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  // Draw points\r\n  ctx.beginPath();\r\n  ctx.moveTo(pts[0].x, pts[0].y);\r\n  pts.forEach((pt) => ctx.lineTo(pt.x, pt.y));\r\n\r\n  if (shouldLoop) ctx.lineTo(pts[0].x, pts[0].y);\r\n  \r\n  // if (opts.strokeStyle) ctx.strokeStyle = opts.strokeStyle;\r\n  if (opts.strokeStyle || (opts.strokeStyle === undefined && opts.fillStyle === undefined)) {\r\n    ctx.stroke();\r\n  }\r\n  if (opts.fillStyle) {\r\n    ctx.fill();\r\n  }\r\n};\r\n\r\n/**\r\n * Draws labels for a set of points\r\n * @param ctx \r\n * @param pts Points to draw\r\n * @param opts \r\n * @param labels Labels for points\r\n */\r\nexport const pointLabels = (ctx: CanvasRenderingContext2D, pts: readonly Points.Point[], opts: {readonly fillStyle?:string} = {}, labels?:readonly string[]) => {\r\n  if (pts.length === 0) return;\r\n\r\n  // Throw an error if any point is invalid\r\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  pts.forEach((pt, i) => {\r\n    const label = (labels !== undefined && i<labels.length) ? labels[i] : i.toString();\r\n    ctx.fillText(label.toString(), pt.x, pt.y);    \r\n  });\r\n};\r\n\r\n/**\r\n * Returns `point` with the canvas's translation matrix applied\r\n * @param ctx \r\n * @param point \r\n * @returns \r\n */\r\nexport const translatePoint = (ctx:CanvasRenderingContext2D, point: Points.Point): Points.Point => {\r\n  const m = ctx.getTransform();\r\n  return {\r\n    x: point.x * m.a + point.y * m.c + m.e,\r\n    y: point.x * m.b + point.y * m.d + m.f\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a new HTML IMG element with a snapshot of the\r\n * canvas. Element will need to be inserted into the document.\r\n * \r\n * ```\r\n * const myCanvas = document.getElementById('someCanvas');\r\n * const el = copyToImg(myCanvas);\r\n * document.getElementById('images').appendChild(el);\r\n * ```\r\n * @param canvasEl \r\n * @returns \r\n */\r\nexport const copyToImg = (canvasEl:HTMLCanvasElement): HTMLImageElement => {\r\n  const img = document.createElement(`img`);\r\n  //eslint-disable-next-line functional/immutable-data\r\n  img.src = canvasEl.toDataURL(`image/jpeg`);\r\n  return img;\r\n};\r\n\r\n/**\r\n * Draws filled circle(s) at provided point(s)\r\n * @param ctx\r\n * @param pos \r\n * @param opts \r\n */\r\nexport const dot = (ctx: CanvasRenderingContext2D, pos: Points.Point|readonly Points.Point[], opts?: DrawingOpts & {readonly radius?: number, readonly outlined?: boolean, readonly filled?: boolean})  => {\r\n  if (opts === undefined) opts = {};\r\n  const radius = opts.radius ?? 10;\r\n  \r\n  applyOpts(ctx, opts);\r\n\r\n  ctx.beginPath();\r\n\r\n  // x&y for arc is the center of circle\r\n  if (Array.isArray(pos)) {\r\n    pos.forEach(p => {\r\n      ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\r\n    });\r\n  } else {\r\n    const p = pos as Points.Point;\r\n    ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\r\n  }\r\n\r\n  if (opts.filled || !opts.outlined) ctx.fill();\r\n  if (opts.outlined) ctx.stroke();\r\n};\r\n\r\n\r\n/**\r\n * Draws a cubic or quadratic bezier\r\n * @param ctx \r\n * @param bezierToDraw \r\n * @param opts \r\n */\r\nexport const bezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.QuadraticBezier|Beziers.CubicBezier, opts?: DrawingOpts) => {\r\n  if (Beziers.isQuadraticBezier(bezierToDraw)) {\r\n    quadraticBezier(ctx, bezierToDraw, opts);\r\n  } else if (Beziers.isCubicBezier(bezierToDraw)) {\r\n    cubicBezier(ctx, bezierToDraw, opts);\r\n  }\r\n};\r\n\r\nconst cubicBezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.CubicBezier, opts: DrawingOpts = {}) => {\r\n  // eslint-disable-next-line functional/no-let\r\n  let stack = applyOpts(ctx, opts);\r\n\r\n  const {a, b, cubic1, cubic2} = bezierToDraw;\r\n  const isDebug = opts.debug ?? false;\r\n\r\n  if (isDebug) {\r\n    /*\r\n     * const ss = ctx.strokeStyle;\r\n     * ctx.strokeStyle = ss;\r\n     */\r\n  }\r\n  ctx.beginPath();\r\n  ctx.moveTo(a.x, a.y);\r\n  ctx.bezierCurveTo(cubic1.x, cubic1.y, cubic2.x, cubic2.y, b.x, b.y);\r\n  ctx.stroke();\r\n\r\n  if (isDebug) {\r\n    stack = stack.push(optsOp({...opts, \r\n      strokeStyle: Colours.opacity(opts.strokeStyle ?? `silver`, 0.6),\r\n      fillStyle: Colours.opacity(opts.fillStyle ?? `yellow`, 0.4)}));\r\n\r\n    stack.apply();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.lineTo(cubic1.x, cubic1.y);\r\n    ctx.stroke();\r\n    ctx.moveTo(b.x, b.y);\r\n    ctx.lineTo(cubic2.x, cubic2.y);\r\n    ctx.stroke();\r\n\r\n    ctx.fillText(`a`, a.x + 5, a.y);\r\n    ctx.fillText(`b`, b.x + 5, b.y);\r\n    ctx.fillText(`c1`, cubic1.x + 5, cubic1.y);\r\n    ctx.fillText(`c2`, cubic2.x + 5, cubic2.y);\r\n\r\n    dot(ctx, cubic1, {radius: 3});\r\n    dot(ctx, cubic2, {radius: 3});\r\n    dot(ctx, a, {radius: 3});\r\n    dot(ctx, b, {radius: 3});\r\n    stack = stack.pop();\r\n    stack.apply();\r\n  }\r\n};\r\n\r\nconst quadraticBezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.QuadraticBezier, opts: DrawingOpts = {}) => {\r\n  const {a, b, quadratic} = bezierToDraw;\r\n  const isDebug = opts.debug ?? false;\r\n  // eslint-disable-next-line functional/no-let\r\n  let stack = applyOpts(ctx, opts);\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(a.x, a.y);\r\n  ctx.quadraticCurveTo(quadratic.x, quadratic.y, b.x, b.y);\r\n  ctx.stroke();\r\n\r\n  if (isDebug) {\r\n    /*\r\n     * const fs = ctx.fillStyle;\r\n     * const ss = ctx.strokeStyle;\r\n     * ctx.fillStyle = opts.strokeStyle ?? `gray`;\r\n     * ctx.strokeStyle = opts.strokeStyle ?? `gray`;\r\n     */\r\n    stack = stack.push(optsOp({...opts, \r\n      strokeStyle: Colours.opacity(opts.strokeStyle ?? `silver`, 0.6),\r\n      fillStyle: Colours.opacity(opts.fillStyle ?? `yellow`, 0.4)}));\r\n    connectedPoints(ctx, [a, quadratic, b]);\r\n\r\n    ctx.fillText(`a`, a.x + 5, a.y);\r\n    ctx.fillText(`b`, b.x + 5, b.y);\r\n    ctx.fillText(`h`, quadratic.x + 5, quadratic.y);\r\n    dot(ctx, quadratic, {radius: 3});\r\n    dot(ctx, a, {radius: 3});\r\n    dot(ctx, b, {radius: 3});\r\n    /*\r\n     * ctx.fillStyle = fs;\r\n     * ctx.strokeStyle = ss;\r\n     */\r\n    stack = stack.pop();\r\n    stack.apply();\r\n  }\r\n};\r\n\r\n/**\r\n * Draws one or more lines. \r\n * \r\n * Each line is drawn independently, ie it's not assumed lines are connected.\r\n * \r\n * See also:\r\n * * {@link connectedPoints}: Draw a series of connected points\r\n * @param ctx\r\n * @param toDraw \r\n * @param opts \r\n */\r\nexport const line = (ctx: CanvasRenderingContext2D, toDraw: Lines.Line|readonly Lines.Line[], opts: LineOpts & DrawingOpts = {}) => {\r\n  const isDebug = opts.debug ?? false;\r\n  const o = lineOp(opts.lineWidth, opts.lineJoin, opts.lineCap);\r\n  applyOpts(ctx, opts, o);\r\n\r\n  const draw = (d:Lines.Line) => {\r\n    const {a, b} = d;\r\n    ctx.beginPath();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.lineTo(b.x, b.y);\r\n    if (isDebug) { \r\n      ctx.fillText(`a`, a.x, a.y);\r\n      ctx.fillText(`b`, b.x, b.y);\r\n      dot(ctx, a, {radius: 5, strokeStyle: `black`});\r\n      dot(ctx, b, {radius: 5, strokeStyle: `black`});\r\n    }\r\n    ctx.stroke();\r\n  };\r\n\r\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\r\n  else draw(toDraw as Lines.Line);\r\n};\r\n\r\n/**\r\n * Draws one or more triangles\r\n * @param ctx\r\n * @param toDraw \r\n * @param opts \r\n */\r\nexport const triangle = (ctx: CanvasRenderingContext2D, toDraw: Triangles.Triangle|readonly Triangles.Triangle[], opts: DrawingOpts & {readonly filled?:boolean} = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (t:Triangles.Triangle) => {\r\n    connectedPoints(ctx, Triangles.corners(t), {...opts, loop: true});\r\n    \r\n    if (opts.debug) {\r\n      pointLabels(ctx, Triangles.corners(t), undefined, [`a`, `b`, `c`]);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\r\n  else draw(toDraw as Triangles.Triangle);\r\n};\r\n\r\n// export const arrowFromTip = (ctx:CanvasRenderingContext2D, tipPos: Points.Point, tailLength:number, opts:DrawingOpts) => {\r\n//   if (opts.fillStyle) ctx.fillStyle = opts.fillStyle;\r\n//   if (opts.strokeStyle) ctx.strokeStyle = opts.strokeStyle;\r\n\r\n//   ctx.save();\r\n//   ctx.translate \r\n//   ctx.restore();\r\n// }\r\n\r\n/**\r\n * Draws one or more rectangles\r\n * @param ctx\r\n * @param toDraw \r\n * @param opts \r\n */\r\nexport const rect = (ctx: CanvasRenderingContext2D, toDraw: Rects.RectPositioned|readonly Rects.RectPositioned[], opts: DrawingOpts & {readonly filled?:boolean} = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (d:Rects.RectPositioned) => {\r\n    if (opts.filled) ctx.fillRect(d.x, d.y, d.width, d.height);\r\n    ctx.strokeRect(d.x, d.y, d.width, d.height);\r\n\r\n    if (opts.debug) {\r\n      pointLabels(ctx, Rects.corners(d), undefined, [`NW`, `NE`, `SE`, `SW`]);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\r\n  else draw(toDraw as Rects.RectPositioned);\r\n};\r\n\r\n/**\r\n * Returns the width of `text`. Rounds number up to nearest multiple if provided. If\r\n * text is empty or undefined, 0 is returned.\r\n * @param ctx \r\n * @param text \r\n * @param widthMultiple \r\n * @returns \r\n */\r\nexport const textWidth = (ctx:CanvasRenderingContext2D, text?:string|null, padding = 0, widthMultiple?:number):number => {\r\n  if (text === undefined || text === null || text.length === 0) return 0;\r\n  const m = ctx.measureText(text);\r\n  if (widthMultiple) return roundUpToMultiple(m.width, widthMultiple) + padding;\r\n  return m.width + padding;\r\n};\r\n\r\n/**\r\n * Draws a block of text. Each array item is considered a line.\r\n * @param ctx\r\n * @param lines \r\n * @param opts \r\n */\r\nexport const textBlock = (ctx:CanvasRenderingContext2D, lines:readonly string[], opts:DrawingOpts & {readonly anchor:Points.Point, readonly anchorPadding?:number, readonly bounds?: Rects.RectPositioned}) => {\r\n  applyOpts(ctx, opts);\r\n  const anchorPadding = opts.anchorPadding ?? 0;\r\n\r\n  const anchor = opts.anchor;\r\n  const bounds = opts.bounds ?? {x:0, y:0, width:1000000, height:1000000};\r\n\r\n  // Measure each line\r\n  const blocks = lines.map(l => ctx.measureText(l));\r\n\r\n  // Get width and height\r\n  const widths = blocks.map(tm => tm.width);\r\n  const heights = blocks.map(tm => tm.actualBoundingBoxAscent + tm.actualBoundingBoxDescent);\r\n\r\n  // Find extremes\r\n  const maxWidth = Math.max(...widths);\r\n  const totalHeight = heights.reduce((acc, val) => acc+val, 0);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let {x, y} = anchor;\r\n\r\n  if (anchor.x + maxWidth > bounds.width) x = bounds.width - (maxWidth + anchorPadding);\r\n  else x -= anchorPadding;\r\n  \r\n  if (x < bounds.x) x = bounds.x + anchorPadding;\r\n\r\n  if (anchor.y + totalHeight > bounds.height) y = bounds.height - (totalHeight + anchorPadding);\r\n  else y -= anchorPadding;\r\n\r\n  if (y < bounds.y) y = bounds.y + anchorPadding;\r\n\r\n  lines.forEach((line, i) => {\r\n    ctx.fillText(line, x, y);\r\n    y += heights[i];\r\n  });\r\n};\r\n\r\nexport type HorizAlign = `left` | `right` | `center`;\r\nexport type VertAlign = `top` | `center` | `bottom`;\r\n\r\n/**\r\n * Draws an aligned text block\r\n */\r\nexport const textBlockAligned = (ctx:CanvasRenderingContext2D, text:readonly string[]|string, opts:DrawingOpts & { readonly bounds: Rects.RectPositioned, readonly horiz?: HorizAlign, readonly vert?:VertAlign}) => {\r\n  const {bounds} = opts;\r\n  const {horiz = `left`, vert = `top`} = opts;\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let lines:readonly string[];\r\n  if (typeof text === `string`) lines = [text];\r\n  else lines = text;\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  ctx.save();\r\n  ctx.translate(bounds.x, bounds.y);\r\n  //eslint-disable-next-line functional/immutable-data\r\n  ctx.textAlign = `left`;\r\n  //eslint-disable-next-line functional/immutable-data\r\n  ctx.textBaseline = `top`;\r\n  const middleX = bounds.width / 2;\r\n  const middleY = bounds.height / 2;\r\n\r\n  // Measure each line\r\n  const blocks = lines.map(l => ctx.measureText(l));\r\n  const heights = blocks.map(tm => tm.actualBoundingBoxAscent + tm.actualBoundingBoxDescent);\r\n  const totalHeight = heights.reduce((acc, val) => acc+val, 0);\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let y = 0;\r\n  if (vert === `center`) y = middleY - totalHeight /2;\r\n  else if (vert === `bottom`) {\r\n    y = bounds.height - totalHeight;\r\n  } \r\n\r\n  lines.forEach((line, i) => {\r\n    //eslint-disable-next-line functional/no-let\r\n    let x = 0;\r\n    if (horiz === `center`) x  = middleX - blocks[i].width / 2;\r\n    else if (horiz === `right`) x = bounds.width - blocks[i].width;\r\n    ctx.fillText(lines[i], x, y);\r\n    y += heights[i];\r\n  });\r\n\r\n  ctx.restore();\r\n};","/* eslint-disable */\r\nimport * as d3Colour from 'd3-color';\r\nimport * as d3Interpolate from 'd3-interpolate';\r\nimport {defaultRandom, RandomSource} from '../Random.js';\r\nimport {number as guardNumber} from '../Guards.js'\r\n\r\nexport type Hsl = {h:number, s:number, l:number, opacity?:number};\r\nexport type Rgb = {r:number, g:number, b:number, opacity?:number}\r\nexport type Spaces = `hsl` | `rgb` | `lab` | `hcl` | `cubehelix`;\r\n/**\r\n * @private\r\n */\r\nexport type Colour = d3Colour.RGBColor | d3Colour.HSLColor;\r\n\r\n/**\r\n * A representation of colour. Eg: `blue`, `rgb(255,0,0)`, `hsl(20,100%,50%)`\r\n */\r\nexport type Colourish = string|d3Colour.ColorCommonInstance;\r\n\r\n/**\r\n * Options for interpolation\r\n */\r\nexport type InterpolationOpts = {\r\n  /**\r\n   * Gamma correction. Eg 4 brightens values. Only applies to rgb and cubehelix\r\n   * [Read more](https://github.com/d3/d3-interpolate#interpolate_gamma)\r\n   */\r\n  gamma?:number\r\n  /**\r\n   * Colour space\r\n   */\r\n  space?:Spaces\r\n  /**\r\n   * If true, interpolation happens the longer distance. Only applies to hsl, hcl and cubehelix\r\n   */\r\n  long?:boolean\r\n}\r\n\r\n/**\r\n * Parses colour to `{ h, s, l }`. `opacity` field is added if it exists on source.\r\n * @param colour \r\n * @returns \r\n */\r\nexport const toHsl = (colour:Colourish):Hsl => {\r\n  const rgb = toRgb(colour);\r\n  const hsl = rgbToHsl(rgb.r, rgb.b, rgb.g);\r\n  if (rgb.opacity) return {...hsl, opacity: rgb.opacity};\r\n  else return hsl;\r\n}\r\n\r\n\r\n/**\r\n * Returns a full HSL colour string (eg `hsl(20,50%,75%)`) based on a index.\r\n * It's useful for generating perceptually different shades as the index increments.\r\n * \r\n * ```\r\n * el.style.backgroundColor = goldenAgeColour(10);\r\n * ```\r\n * \r\n * Saturation and lightness can be specified, as numeric ranges of 0-1.\r\n * \r\n * @param saturation Saturation (0-1), defaults to 0.5\r\n * @param lightness Lightness (0-1), defaults to 0.75\r\n * @param alpha Opacity (0-1), defaults to 1.0\r\n * @returns HSL colour string eg `hsl(20,50%,75%)`\r\n */\r\nexport const goldenAngleColour = (index: number, saturation = 0.5, lightness = 0.75, alpha = 1.0) => {\r\n  guardNumber(index, `positive`, `index`);\r\n  guardNumber(saturation, `percentage`, `saturation`);\r\n  guardNumber(lightness, `percentage`, `lightness`);\r\n  guardNumber(alpha, `percentage`, `alpha`);\r\n\r\n  // Via Stackoverflow\r\n  const hue = index * 137.508; // use golden angle approximation\r\n  if (alpha === 1) return `hsl(${hue},${saturation*100}%,${lightness*100}%)`;\r\n  else  `hsl(${hue},${saturation*100}%,${lightness*100}%,${alpha*100}%)`\r\n}\r\n\r\n/**\r\n * Returns a random hue component\r\n * ```\r\n * // Generate hue\r\n * const h =randomHue(); // 0-359\r\n * \r\n * // Generate hue and assign as part of a HSL string\r\n * el.style.backgroundColor = `hsl(${randomHue(), 50%, 75%})`;\r\n * ```\r\n * \r\n * \r\n * @param rand \r\n * @returns \r\n */\r\nexport const randomHue = (rand:RandomSource = defaultRandom): number => {\r\n  const r = rand();\r\n  return r * 360;\r\n};\r\n\r\n/**\r\n * Parses colour to `{ r, g, b }`. `opacity` field is added if it exists on source.\r\n * @param colour \r\n * @returns \r\n */\r\nexport const toRgb = (colour:Colourish):Rgb => {\r\n  const c = resolveColour(colour);\r\n  const rgb = c.rgb();\r\n  if (c.opacity < 1) return {r:rgb.r, g:rgb.g, b:rgb.b, opacity: c.opacity};\r\n  else return {r:rgb.r, g:rgb.g, b:rgb.b}\r\n}\r\n\r\nconst resolveColour = (c:Colourish):Colour => {\r\n  if (typeof c === `string`) {\r\n    const css = d3Colour.color(c);\r\n    if (css !== null) return css;\r\n  } else {\r\n    if (isHsl(c)) return d3Colour.hsl(c.h, c.s, c.l);\r\n    if (isRgb(c)) return d3Colour.rgb(c.r, c.g, c.b); \r\n  }\r\n  throw new Error(`Could not resolve colour ${JSON.stringify(c)}`);\r\n}\r\n\r\n/**\r\n * Returns a colour in hex format `#000000`\r\n * @param colour\r\n * @returns Hex format, including #\r\n */\r\nexport const toHex = (colour:Colourish):string => {\r\n  const c = resolveColour(colour);\r\n  return c.formatHex();\r\n}\r\n\r\n/**\r\n * Returns a variation of colour with its opacity multiplied by `amt`.\r\n * \r\n * ```js\r\n * // Return a colour string for blue that is 50% opaque\r\n * opacity(`blue`, 0.5);\r\n * // eg: `rgba(0,0,255,0.5)`\r\n * \r\n * // Returns a colour string that is 50% more opaque\r\n * opacity(`hsla(200,100%,50%,50%`, 0.5);\r\n * // eg: `hsla(200,100%,50%,25%)` \r\n * ```\r\n * @param colour A valid CSS colour\r\n * @param amt Amount to multiply opacity by\r\n * @returns String representation of colour\r\n */\r\nexport const opacity = (colour:Colourish, amt:number):string => {\r\n  const c = resolveColour(colour);\r\n  c.opacity *= amt;\r\n  return c.toString(); \r\n}\r\n\r\n/**\r\n * Gets a CSS variable.\r\n * @example Fetch --accent variable, or use `yellow` if not found.\r\n * ```\r\n * getCssVariable(`accent`, `yellow`);\r\n * ```\r\n * @param name Name of variable. Do not starting `--`\r\n * @param fallbackColour Fallback colour if not found\r\n * @param root  Element to search variable from\r\n * @returns Colour or fallback.\r\n */\r\n export const getCssVariable = (name:string, fallbackColour:string = `black`, root?:HTMLElement):string => {\r\n  if (root === undefined) root = document.body;\r\n  const fromCss = getComputedStyle(root).getPropertyValue(`--${name}`).trim();\r\n  if (fromCss === undefined || fromCss.length === 0) return fallbackColour;\r\n  return fromCss;\r\n};\r\n\r\n/**\r\n * Interpolates between two colours, returning a string\r\n * \r\n * @example\r\n * ```js\r\n * // Get 50% between blue and red\r\n * interpolate(0.5, `blue`, `red`); \r\n * \r\n * // Get midway point, with specified colour space\r\n * interpolate(0.5, `hsl(200, 100%, 50%)`, `pink`, {space: `hcl`});\r\n * ```\r\n * @param amount Amount (0 = from, 0.5 halfway, 1= to)\r\n * @param from Starting colour\r\n * @param to Final colour\r\n * @param optsOrSpace Options for interpolation, or string name for colour space, eg `hsl`.\r\n * @returns String representation of colour, eg. `rgb(x,x,x)`\r\n */\r\nexport const interpolate = (amount:number, from:Colourish, to:Colourish, optsOrSpace?:string|InterpolationOpts):string => {\r\n  guardNumber(amount, `percentage`, `amount`);\r\n  if (typeof from !== `string`) throw new Error(`Expected string for 'from' param`);\r\n  if (typeof to !== `string`) throw new Error(`Expected string for 'to' param`);\r\n\r\n  let opts:InterpolationOpts;\r\n  if (typeof optsOrSpace === `undefined`) opts = {};\r\n  else if (typeof optsOrSpace === `string`) opts = { space: optsOrSpace as Spaces};\r\n  else opts = optsOrSpace as InterpolationOpts;\r\n\r\n\r\n  const inter = getInterpolator(opts, [from, to]);\r\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\r\n  return inter(amount);\r\n}\r\n\r\nconst getInterpolator = (optsOrSpace:InterpolationOpts|string, colours:Colourish[]): ((t: number) => string) | undefined => {\r\n  if (!Array.isArray(colours)) throw new Error(`Expected one or more colours as parameters`);\r\n  \r\n  let opts:InterpolationOpts;\r\n  if (typeof optsOrSpace === `undefined`) opts = {};\r\n  else if (typeof optsOrSpace === `string`) opts = { space: optsOrSpace as Spaces};\r\n  else opts = optsOrSpace as InterpolationOpts;\r\n\r\n  if (!Array.isArray(colours)) throw new Error(`Expected array for colours parameter`);\r\n  if (colours.length < 2) throw new Error(`Interpolation expects at least two colours`);\r\n  const {space = `rgb`, long = false} = opts;\r\n  let inter;\r\n\r\n  switch (space) {\r\n  case `lab`:\r\n    inter = d3Interpolate.interpolateLab;\r\n    break;\r\n  case `hsl`:\r\n    inter = long ? d3Interpolate.interpolateHslLong : d3Interpolate.interpolateHsl;\r\n    break;\r\n  case `hcl`:\r\n    inter = long ? d3Interpolate.interpolateHclLong : d3Interpolate.interpolateHcl;\r\n    break;\r\n  case `cubehelix`:\r\n    inter = long ? d3Interpolate.interpolateCubehelixLong : d3Interpolate.interpolateCubehelix;\r\n    break;\r\n  case `rgb`:\r\n    inter = d3Interpolate.interpolateRgb;\r\n  default:\r\n    inter = d3Interpolate.interpolateRgb;\r\n  }\r\n\r\n  if (opts.gamma) {\r\n    if (space === `rgb` || space === `cubehelix`) {\r\n      inter = (inter as d3Interpolate.ColorGammaInterpolationFactory).gamma(opts.gamma);      \r\n    }\r\n  }\r\n\r\n  if (colours.length > 2) {\r\n    return d3Interpolate.piecewise(inter, colours);\r\n  } else return inter(colours[0], colours[1]);\r\n}\r\n\r\n/**\r\n * Produces a scale of colours as a string array\r\n * \r\n * @example\r\n * ```js\r\n * // Yields array of 5 colour strings\r\n * const s = scale(5, {space:`hcl`}, `blue`, `red`);\r\n * // Produces scale between three colours\r\n * const s = scale(5, {space:`hcl`}, `blue`, `yellow`, `red`);\r\n * ```\r\n * @param steps Number of colours\r\n * @param opts Options for interpolation, or string colour space eg `hsl`\r\n * @param colours From/end colours (or more)\r\n * @returns \r\n */\r\nexport const scale = (steps:number, opts:InterpolationOpts|string, ...colours:Colourish[]):string[] => {\r\n  guardNumber(steps, `aboveZero`, `steps`);\r\n  if (!Array.isArray(colours)) throw new Error(`Expected one or more colours as parameters`);\r\n  const inter = getInterpolator(opts, colours);\r\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\r\n\r\n  const perStep = 1/(steps-1);\r\n  const r = [];\r\n  //eslint-disable-next-line functional/no-let\r\n  let amt = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0; i<steps; i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    r.push(inter(amt));\r\n    amt += perStep;\r\n    if (amt > 1) amt = 1;\r\n  }\r\n  return r;\r\n}\r\n\r\nconst isHsl = (p: Colour|d3Colour.ColorCommonInstance|Hsl): p is Hsl => {\r\n  if ((p as Hsl).h === undefined) return false;\r\n  if ((p as Hsl).s === undefined) return false;\r\n  if ((p as Hsl).l === undefined) return false;\r\n  return true;\r\n};\r\n\r\nconst isRgb = (p: Colour|d3Colour.ColorCommonInstance|Rgb): p is Rgb => {\r\n  if ((p as Rgb).r === undefined) return false;\r\n  if ((p as Rgb).g === undefined) return false;\r\n  if ((p as Rgb).b === undefined) return false;\r\n  return true;\r\n};\r\n\r\nconst rgbToHsl = (r:number, g:number, b:number):Hsl => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  var min = Math.min(r, g, b),\r\n    max = Math.max(r, g, b),\r\n    delta = max - min,\r\n    h, s, l;\r\n\r\n  h = 0;\r\n  if (max === min) {\r\n    h = 0;\r\n  }\r\n  else if (r === max) {\r\n    h = (g - b) / delta;\r\n  }\r\n  else if (g === max) {\r\n    h = 2 + (b - r) / delta;\r\n  }\r\n  else if (b === max) {\r\n    h = 4 + (r - g) / delta;\r\n  }\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  l = (min + max) / 2;\r\n\r\n  if (max === min) {\r\n    s = 0;\r\n  }\r\n  else if (l <= 0.5) {\r\n    s = delta / (max + min);\r\n  }\r\n  else {\r\n    s = delta / (2 - max - min);\r\n  }\r\n\r\n  return {h, s, l};\r\n};\r\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","import {CirclePositioned} from \"../geometry/Circle.js\";\r\nimport {markerPrebuilt} from \"./SvgMarkers.js\";\r\nimport * as Lines from \"../geometry/Line.js\";\r\nimport * as Points from \"../geometry/Point.js\";\r\nimport * as Elements from \"./SvgElements.js\";\r\nimport * as Rects from \"../geometry/Rect.js\";\r\n\r\nexport {Elements};\r\n\r\nexport type MarkerOpts = StrokeOpts & DrawingOpts & {\r\n  readonly id: string,\r\n  readonly markerWidth?: number,\r\n  readonly markerHeight?: number,\r\n  readonly orient?: string,\r\n  readonly viewBox?: string,\r\n  readonly refX?: number,\r\n  readonly refY?: number\r\n}\r\n\r\n/**\r\n * Drawing options\r\n */\r\nexport type DrawingOpts = {\r\n\r\n  /**\r\n   * Style for fill. Eg `black`.\r\n   * @see [fill](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill)\r\n   */\r\n  readonly fillStyle?:string\r\n  /**\r\n   * If true, debug helpers are drawn\r\n   */\r\n  readonly debug?:boolean\r\n\r\n};\r\n\r\nexport type StrokeOpts = {\r\n  /**\r\n   * Line cap\r\n   * @see [stroke-linecap](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap)\r\n   */\r\n  readonly strokeLineCap?: `butt` | `round` | `square`\r\n  /**\r\n   * Width of stroke, eg `2`\r\n   * @see [stroke-width](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-width)\r\n   */\r\n  readonly strokeWidth?:number\r\n  /**\r\n  * Stroke dash pattern, eg `5`\r\n  * @see [stroke-dasharray](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\r\n  */\r\n  readonly strokeDash?:string\r\n  /**\r\n   * Style for lines. Eg `white`.\r\n   * @see [stroke](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke)\r\n   */\r\n  readonly strokeStyle?:string\r\n}\r\n\r\n/**\r\n * Line drawing options\r\n */\r\nexport type LineDrawingOpts = DrawingOpts & MarkerDrawingOpts & StrokeOpts;\r\n\r\nexport type CircleDrawingOpts = DrawingOpts & StrokeOpts & MarkerDrawingOpts;\r\n\r\nexport type PathDrawingOpts = DrawingOpts & StrokeOpts & MarkerDrawingOpts;\r\n\r\nexport type MarkerDrawingOpts = {\r\n  readonly markerEnd?:MarkerOpts\r\n  readonly markerStart?:MarkerOpts\r\n  readonly markerMid?:MarkerOpts\r\n}\r\n\r\n\r\n/**\r\n * Text drawing options\r\n */\r\nexport type TextDrawingOpts = StrokeOpts & DrawingOpts & {\r\n  readonly anchor?: `start` | `middle` | `end`\r\n  readonly align?: `text-bottom` | `text-top` | `baseline` | `top` | `hanging` | `middle`\r\n}\r\n\r\n/**\r\n * Text path drawing options\r\n */\r\nexport type TextPathDrawingOpts = TextDrawingOpts & {\r\n  readonly method?: `align` |`stretch`\r\n  readonly side?: `left` | `right`\r\n  readonly spacing?: `auto` | `exact`\r\n  readonly startOffset?: number\r\n  readonly textLength?:number\r\n}\r\n\r\n/**\r\n * Creates and appends a SVG element. \r\n * \r\n * ```js\r\n * // Create a circle\r\n * const circleEl = createOrResolve(parentEl, `SVGCircleElement`);\r\n * ```\r\n * \r\n * If `queryOrExisting` is specified, it is used as a query to find an existing element. If\r\n * query starts with `#`, this will be set as the element id, if created.\r\n * \r\n * ```js\r\n * // Creates an element with id 'myCircle' if it doesn't exist\r\n * const circleEl = createOrResolve(parentEl, `SVGCircleElement`, `#myCircle`);\r\n * ```\r\n * @param parent Parent element\r\n * @param type Type of SVG element\r\n * @param queryOrExisting Query, eg `#id`\r\n * @returns \r\n */\r\nexport const createOrResolve = <V extends SVGElement>(parent:SVGElement, type:string, queryOrExisting?:string|V):V => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let existing = null;\r\n  if (queryOrExisting !== undefined) {\r\n    if (typeof queryOrExisting === `string`) existing = parent.querySelector(queryOrExisting);\r\n    else existing = queryOrExisting;\r\n  }\r\n  if (existing === null) {\r\n    const p = document.createElementNS(`http://www.w3.org/2000/svg`, type) as V;\r\n    parent.appendChild(p);\r\n    if (queryOrExisting && typeof queryOrExisting === `string`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      if (queryOrExisting.startsWith(`#`)) p.id = queryOrExisting.substring(1);\r\n    }\r\n    return p;\r\n  }\r\n  return existing as V;\r\n};\r\n\r\nexport const remove = <V extends SVGElement>(parent:SVGElement, queryOrExisting:string|V) => {\r\n  if (typeof queryOrExisting === `string`) {\r\n    const e = parent.querySelector(queryOrExisting);\r\n    if (e === null) return;\r\n    e.remove();\r\n  } else {\r\n    queryOrExisting.remove();\r\n  }\r\n};\r\n\r\nexport const clear = (parent:SVGElement) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let c = parent.lastElementChild;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (c) {\r\n    parent.removeChild(c);\r\n    c = parent.lastElementChild;\r\n  }\r\n};\r\n\r\n/**\r\n * Creates an element of `type` and with `id` (if specified)\r\n * @param type Element type, eg `circle` \r\n * @param id Optional id to assign to element\r\n * @returns Element\r\n */\r\nexport const createEl = <V extends SVGElement>(type:string, id?:string):V => {\r\n  const m = document.createElementNS(`http://www.w3.org/2000/svg`, type) as V;\r\n  if (id) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    m.id = id;\r\n  }\r\n  return m;\r\n};\r\n\r\n/**\r\n * Applies path drawing options to given element\r\n * Applies: markerEnd, markerStart, markerMid\r\n * @param elem Element (presumed path)\r\n * @param opts Options\r\n */\r\nexport const applyPathOpts = (elem:SVGElement, opts:PathDrawingOpts) => {\r\n  if (opts.markerEnd) elem.setAttribute(`marker-end`, markerPrebuilt(elem, opts.markerEnd, opts as DrawingOpts));\r\n  if (opts.markerStart) elem.setAttribute(`marker-end`, markerPrebuilt(elem, opts.markerStart, opts as DrawingOpts));\r\n  if (opts.markerMid) elem.setAttribute(`marker-end`, markerPrebuilt(elem, opts.markerMid, opts as DrawingOpts));\r\n};\r\n\r\n/**\r\n * Applies drawing options to given SVG element.\r\n * Applies: fillStyle, strokeStyle, strokeWidth, strokeDash\r\n * @param elem Element\r\n * @param opts Drawing options\r\n */\r\nexport const applyOpts = (elem:SVGElement, opts:DrawingOpts) => {\r\n  if (opts.fillStyle) elem.setAttributeNS(null, `fill`, opts.fillStyle);\r\n};\r\n\r\nexport const applyStrokeOpts = (elem:SVGElement, opts:StrokeOpts) => {\r\n  if (opts.strokeStyle) elem.setAttributeNS(null, `stroke`, opts.strokeStyle);\r\n  if (opts.strokeWidth) elem.setAttributeNS(null, `stroke-width`, opts.strokeWidth.toString());\r\n  if (opts.strokeDash) elem.setAttribute(`stroke-dasharray`, opts.strokeDash);\r\n  if (opts.strokeLineCap) elem.setAttribute(`stroke-linecap`, opts.strokeLineCap);\r\n};\r\n\r\n/**\r\n * Helper to make SVG elements with a common parent.\r\n *\r\n * Create with {@link makeHelper}.\r\n */\r\nexport type SvgHelper = {\r\n  remove(queryOrExisting:string|SVGElement):void\r\n  /**\r\n   * Creates a text element\r\n   * @param text Text\r\n   * @param pos Position\r\n   * @param opts Drawing options\r\n   * @param queryOrExisting DOM query to look up existing element, or the element instance \r\n   */\r\n  text(text:string, pos:Points.Point, opts?:TextDrawingOpts, queryOrExisting?:string|SVGTextElement):SVGTextElement\r\n  /**\r\n   * Creates text on a path\r\n   * @param pathRef Reference to path element\r\n   * @param text Text\r\n   * @param opts Drawing options\r\n   * @param queryOrExisting DOM query to look up existing element, or the element instance \r\n   */\r\n  textPath(pathRef:string, text:string, opts?:TextDrawingOpts, queryOrExisting?:string|SVGTextPathElement):SVGTextPathElement\r\n  /**\r\n   * Creates a line\r\n   * @param line Line\r\n   * @param opts Drawing options\r\n   * @param queryOrExisting DOM query to look up existing element, or the element instance \r\n   */\r\n  line(line:Lines.Line, opts?:LineDrawingOpts, queryOrExisting?:string|SVGLineElement):SVGLineElement\r\n  /**\r\n   * Creates a circle\r\n   * @param circle Circle\r\n   * @param opts Drawing options\r\n   * @param queryOrExisting DOM query to look up existing element, or the element instance \r\n   */\r\n  circle(circle:CirclePositioned, opts?:CircleDrawingOpts, queryOrExisting?:string|SVGCircleElement):SVGCircleElement\r\n  /**\r\n   * Creates a path\r\n   * @param svgStr Path description, or empty string\r\n   * @param opts Drawing options\r\n   * @param queryOrExisting DOM query to look up existing element, or the element instance \r\n   */\r\n  path(svgStr:string|readonly string[], opts?:PathDrawingOpts, queryOrExisting?:string|SVGPathElement) :SVGPathElement\r\n  /**\r\n   * Creates a grid of horizontal and vertical lines inside of a group\r\n   * @param center Grid origin\r\n   * @param spacing Cell size\r\n   * @param width Width of grid\r\n   * @param height Height of grid\r\n   * @param opts Drawing options\r\n   */\r\n  grid(center:Points.Point, spacing:number, width:number, height:number, opts?:LineDrawingOpts):SVGGElement\r\n  /**\r\n   * Returns an element if it exists in parent\r\n   * @param selectors Eg `#path`\r\n   */\r\n  query<V extends SVGElement>(selectors:string):V|null\r\n  /**\r\n   * Gets/sets the width of the parent\r\n   */\r\n  get width():number \r\n  set width(width:number) \r\n  /**\r\n   * Gets the parent\r\n   */\r\n  get parent():SVGElement\r\n  /**\r\n   * Gets/sets the height of the parent\r\n   */ \r\n  get height():number \r\n  set height(height:number) \r\n  /**\r\n   * Deletes all child elements\r\n   */\r\n  clear():void \r\n};\r\n\r\n/**\r\n * Get the bounds of an SVG element (determined by its width/height attribs)\r\n * @param svg\r\n * @returns \r\n */\r\nexport const getBounds = (svg:SVGElement):Rects.Rect => {\r\n  const w = svg.getAttributeNS(null, `width`);\r\n  const width = w === null ? 0 : parseFloat(w);\r\n  const h = svg.getAttributeNS(null, `height`);\r\n  const height = h === null ? 0 : parseFloat(h);\r\n  return { width, height};\r\n};\r\n\r\n/**\r\n * Set the bounds of an element, using its width/height attribs.\r\n * @param svg\r\n * @param bounds \r\n */\r\nexport const setBounds = (svg:SVGElement, bounds:Rects.Rect):void => {\r\n  svg.setAttributeNS(null, `width`, bounds.width.toString());\r\n  svg.setAttributeNS(null, `height`, bounds.height.toString());\r\n};\r\n\r\n/**\r\n * Creates a {@link SvgHelper} for the creating and management of SVG elements.\r\n * @param parent \r\n * @param parentOpts \r\n * @returns \r\n */\r\nexport const makeHelper = (parent:SVGElement, parentOpts?:DrawingOpts & StrokeOpts):SvgHelper => {\r\n  if (parentOpts) {\r\n    applyOpts(parent, parentOpts);\r\n    applyStrokeOpts(parent, parentOpts);\r\n  }\r\n  \r\n  const o:SvgHelper = {\r\n    remove:(queryOrExisting:string|SVGElement) => remove(parent, queryOrExisting),\r\n    text:(text:string, pos:Points.Point, opts?:TextDrawingOpts, queryOrExisting?:string|SVGTextElement) => Elements.text(text, parent, pos, opts, queryOrExisting),\r\n    textPath:(pathRef:string, text:string, opts?:TextDrawingOpts, queryOrExisting?:string|SVGTextPathElement) => Elements.textPath(pathRef, text, parent, opts, queryOrExisting),\r\n    line:(line:Lines.Line, opts?:LineDrawingOpts, queryOrExisting?:string|SVGLineElement) => Elements.line(line, parent, opts, queryOrExisting),\r\n    circle:(circle:CirclePositioned, opts?:CircleDrawingOpts, queryOrExisting?:string|SVGCircleElement) => Elements.circle(circle, parent, opts,  queryOrExisting),\r\n    path:(svgStr:string|readonly string[], opts?:PathDrawingOpts, queryOrExisting?:string|SVGPathElement) => Elements.path(svgStr, parent, opts, queryOrExisting),\r\n    grid:(center:Points.Point, spacing:number, width:number, height:number, opts?:LineDrawingOpts) => Elements.grid(parent, center, spacing, width, height, opts),\r\n    query:<V extends SVGElement>(selectors:string):V|null => parent.querySelector(selectors),\r\n    get width():number {\r\n      const w = parent.getAttributeNS(null, `width`);\r\n      if (w === null) return 0;\r\n      return parseFloat(w);\r\n    },\r\n    set width(width:number) {\r\n      parent.setAttributeNS(null, `width`, width.toString());\r\n    },\r\n    get parent():SVGElement {\r\n      return parent;\r\n    },\r\n    get height():number {\r\n      const w = parent.getAttributeNS(null, `height`);\r\n      if (w === null) return 0;\r\n      return parseFloat(w);\r\n    },\r\n    set height(height:number) {\r\n      parent.setAttributeNS(null, `height`, height.toString());\r\n    },\r\n    clear: () => {\r\n      //eslint-disable-next-line functional/no-loop-statement\r\n      while (parent.firstChild) {\r\n        parent.removeChild(parent.lastChild as HTMLElement);\r\n      }\r\n    }\r\n  };\r\n  return o;\r\n};\r\n\r\n","\r\nimport {createOrResolve, MarkerOpts, createEl, DrawingOpts, applyOpts} from './Svg.js';\r\n\r\nexport const createMarker = (id:string, opts:MarkerOpts, childCreator?:()=>SVGElement):SVGMarkerElement => {\r\n  const m = createEl<SVGMarkerElement>(`marker`, id);\r\n  \r\n  if (opts.markerWidth) m.setAttribute(`markerWidth`, opts.markerWidth?.toString());\r\n  if (opts.markerHeight) m.setAttribute(`markerHeight`, opts.markerHeight?.toString());\r\n  if (opts.orient) m.setAttribute(`orient`, opts.orient.toString());\r\n  else m.setAttribute(`orient`, `auto-start-reverse`);\r\n\r\n  if (opts.viewBox) m.setAttribute(`viewBox`, opts.viewBox.toString());\r\n  if (opts.refX) m.setAttribute(`refX`, opts.refX.toString());\r\n  if (opts.refY) m.setAttribute(`refY`, opts.refY.toString());\r\n\r\n  if (childCreator) {\r\n    const c = childCreator();\r\n    m.appendChild(c);\r\n  }\r\n  return m;\r\n};\r\n\r\nexport const markerPrebuilt = (elem: SVGElement | null, opts: MarkerOpts, _context: DrawingOpts): string => {\r\n  if (elem === null) return `(elem null)`;\r\n\r\n  const parent = elem.ownerSVGElement;\r\n  if (parent === null) throw new Error(`parent for elem is null`);\r\n  const defsEl = createOrResolve<SVGDefsElement>(parent, `defs`, `defs`);\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let defEl = defsEl.querySelector(`#${opts.id}`) as SVGElement | null;\r\n\r\n  if (defEl !== null) {\r\n    return `url(#${opts.id})`;\r\n  }\r\n\r\n  if (opts.id === `triangle`) {\r\n    opts = {...opts, strokeStyle: `transparent`};\r\n    if (!opts.markerHeight) opts = {...opts, markerHeight: 6};\r\n    if (!opts.markerWidth) opts = {...opts, markerWidth: 6};\r\n    if (!opts.refX) opts = {...opts, refX: opts.markerWidth};\r\n    if (!opts.refY) opts = {...opts, refY: opts.markerHeight};\r\n    if (!opts.fillStyle || opts.fillStyle === `none`) opts = {...opts, fillStyle: `black`};\r\n    if (!opts.viewBox) opts = {...opts, viewBox: `0 0 10 10`};\r\n\r\n    defEl = createMarker(opts.id, opts, () => {\r\n      const tri = createEl<SVGPathElement>(`path`);\r\n      tri.setAttribute(`d`, `M 0 0 L 10 5 L 0 10 z`);\r\n      if (opts) applyOpts(tri, opts);\r\n      return tri;\r\n    });\r\n  } else throw new Error(`Do not know how to make ${opts.id}`);\r\n\r\n  //eslint-disable-next-line functional/immutable-data\r\n  defEl.id = opts.id;\r\n  defsEl.appendChild(defEl);\r\n\r\n  return `url(#${opts.id})`;\r\n};\r\n","\r\nimport {CirclePositioned} from \"../geometry/Circle.js\";\r\nimport * as Lines from \"../geometry/Line.js\";\r\nimport * as Points from \"../geometry/Point.js\";\r\nimport * as Svg from \"./Svg.js\";\r\nimport { getCssVariable } from \"./Colour.js\";\r\n//import {Palette} from \".\";\r\n\r\n\r\nconst numOrPercentage = (v:number):string => {\r\n  if (v >= 0 && v <= 1) return (v*100) + `%`;\r\n  return v.toString();\r\n};\r\n\r\n/**\r\n * Creates and adds an SVG path element\r\n * @example\r\n * ```js\r\n * const paths = [\r\n *  `M300,200`,\r\n *  `a25,25 -30 0,1 50, -25 l 50,-25`\r\n * ]\r\n * const pathEl = path(paths, parentEl);\r\n * ```\r\n * @param svgOrArray Path syntax, or array of paths. Can be empty if path data will be added later\r\n * @param parent SVG parent element\r\n * @param opts Options Drawing options\r\n * @returns \r\n */\r\nexport const path = (svgOrArray: string | readonly string[], parent: SVGElement, opts?: Svg.PathDrawingOpts, queryOrExisting?: string | SVGPathElement): SVGPathElement => {\r\n  const elem = Svg.createOrResolve<SVGPathElement>(parent, `path`, queryOrExisting);\r\n  const svg = typeof svgOrArray === `string` ? svgOrArray : svgOrArray.join(`\\n`);\r\n\r\n  elem.setAttributeNS(null, `d`, svg);\r\n  parent.appendChild(elem);\r\n  return pathUpdate(elem, opts);\r\n};\r\n\r\nexport const pathUpdate = (elem:SVGPathElement, opts?:Svg.PathDrawingOpts) => {\r\n  if (opts) Svg.applyOpts(elem, opts);\r\n  if (opts) Svg.applyStrokeOpts(elem, opts);\r\n  return elem;\r\n};\r\n\r\n/**\r\n * Updates an existing `SVGCircleElement` with potentially updated circle data and drawing options\r\n * @param elem Element\r\n * @param circle Circle\r\n * @param opts Drawing options\r\n * @returns SVGCircleElement\r\n */\r\nexport const circleUpdate = (elem: SVGCircleElement, circle: CirclePositioned, opts?: Svg.CircleDrawingOpts) => {\r\n  elem.setAttributeNS(null, `cx`, circle.x.toString());\r\n  elem.setAttributeNS(null, `cy`, circle.y.toString());\r\n  elem.setAttributeNS(null, `r`, circle.radius.toString());\r\n  if (opts) Svg.applyOpts(elem, opts);\r\n  if (opts) Svg.applyStrokeOpts(elem, opts);\r\n\r\n  return elem;\r\n};\r\n\r\n/**\r\n * Creates or reuses a `SVGCircleElement`.\r\n * \r\n * To update an existing element, use `circleUpdate`\r\n * @param circle \r\n * @param parent \r\n * @param opts \r\n * @param queryOrExisting \r\n * @returns \r\n */\r\nexport const circle = (circle: CirclePositioned, parent: SVGElement, opts?: Svg.CircleDrawingOpts, queryOrExisting?: string | SVGCircleElement): SVGCircleElement => {\r\n  const p = Svg.createOrResolve<SVGCircleElement>(parent, `circle`, queryOrExisting);\r\n  return circleUpdate(p, circle, opts);\r\n};\r\n\r\n/**\r\n * Creates or reuses a SVGLineElement.\r\n * \r\n * @param line \r\n * @param parent \r\n * @param opts \r\n * @param queryOrExisting \r\n * @returns \r\n */\r\nexport const line = (line: Lines.Line, parent: SVGElement, opts?: Svg.LineDrawingOpts, queryOrExisting?: string | SVGLineElement): SVGLineElement => {\r\n  const lineEl = Svg.createOrResolve<SVGLineElement>(parent, `line`, queryOrExisting);\r\n  return lineUpdate(lineEl, line, opts);\r\n};\r\n\r\n/**\r\n * Updates a SVGLineElement instance with potentially changed line and drawing data\r\n * @param lineEl\r\n * @param line \r\n * @param opts \r\n * @returns \r\n */\r\nexport const lineUpdate = (lineEl:SVGLineElement, line:Lines.Line, opts?:Svg.LineDrawingOpts) => {\r\n  lineEl.setAttributeNS(null, `x1`, line.a.x.toString());\r\n  lineEl.setAttributeNS(null, `y1`, line.a.y.toString());\r\n  lineEl.setAttributeNS(null, `x2`, line.b.x.toString());\r\n  lineEl.setAttributeNS(null, `y2`, line.b.y.toString());\r\n  if (opts) Svg.applyOpts(lineEl, opts);\r\n  if (opts) Svg.applyPathOpts(lineEl, opts);\r\n  if (opts) Svg.applyStrokeOpts(lineEl, opts);\r\n  return lineEl;\r\n};\r\n\r\n/**\r\n * Updates an existing SVGTextPathElement instance with text and drawing options\r\n * @param el \r\n * @param text \r\n * @param opts \r\n * @returns \r\n */\r\nexport const textPathUpdate = (el:SVGTextPathElement, text?:string, opts?:Svg.TextPathDrawingOpts) => {\r\n  if (opts?.method) el.setAttributeNS(null, `method`, opts.method);\r\n  if (opts?.side) el.setAttributeNS(null, `side`, opts.side);\r\n  if (opts?.spacing) el.setAttributeNS(null, `spacing`, opts.spacing);\r\n  if (opts?.startOffset) {\r\n    el.setAttributeNS(null, `startOffset`, numOrPercentage(opts.startOffset));\r\n  }\r\n  if (opts?.textLength) el.setAttributeNS(null, `textLength`, numOrPercentage(opts.textLength));\r\n  \r\n  if (text) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    el.textContent = text;\r\n  }\r\n  if (opts) Svg.applyOpts(el, opts);\r\n  if (opts) Svg.applyStrokeOpts(el, opts);\r\n  return el;\r\n};\r\n\r\n/**\r\n * Creates or reuses a SVGTextPathElement.\r\n * @param pathRef \r\n * @param text \r\n * @param parent \r\n * @param opts \r\n * @param queryOrExisting \r\n * @returns \r\n */\r\nexport const textPath = (pathRef:string, text:string, parent:SVGElement, opts?:Svg.TextPathDrawingOpts, queryOrExisting?:string|SVGTextPathElement):SVGTextPathElement => {\r\n  const textEl = Svg.createOrResolve<SVGTextElement>(parent, `text`, queryOrExisting+`-text`);\r\n  // Update text properties, but don't pass in position or text\r\n  textUpdate(textEl, undefined, undefined, opts);\r\n  \r\n  const p = Svg.createOrResolve<SVGTextPathElement>(textEl, `textPath`, queryOrExisting);\r\n  p.setAttributeNS(null, `href`, pathRef);\r\n  return textPathUpdate(p, text, opts);\r\n};\r\n\r\n/**\r\n * Updates an existing SVGTextElement instance with position, text and drawing options\r\n * @param el \r\n * @param pos \r\n * @param text \r\n * @param opts \r\n * @returns \r\n */\r\nexport const textUpdate = (el:SVGTextElement, pos?:Points.Point, text?:string, opts?:Svg.TextDrawingOpts) => {\r\n  if (pos) {\r\n    el.setAttributeNS(null, `x`, pos.x.toString());\r\n    el.setAttributeNS(null, `y`, pos.y.toString());  \r\n  }\r\n  if (text) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    el.textContent = text;\r\n  }\r\n\r\n  if (opts) {\r\n    Svg.applyOpts(el, opts);\r\n    if (opts) Svg.applyStrokeOpts(el, opts);\r\n\r\n    if (opts.anchor) el.setAttributeNS(null, `text-anchor`, opts.anchor);\r\n    if (opts.align) el.setAttributeNS(null, `alignment-baseline`, opts.align);\r\n  }\r\n  return el;\r\n};\r\n\r\n/**\r\n * Creates or reuses a SVGTextElement\r\n * @param pos Position of text\r\n * @param text Text\r\n * @param parent \r\n * @param opts \r\n * @param queryOrExisting \r\n * @returns \r\n */\r\nexport const text = (text:string, parent:SVGElement, pos?:Points.Point, opts?:Svg.TextDrawingOpts, queryOrExisting?:string|SVGTextElement): SVGTextElement => {\r\n  const p = Svg.createOrResolve<SVGTextElement>(parent, `text`, queryOrExisting);\r\n  return textUpdate(p, pos, text, opts);  \r\n};\r\n\r\n/**\r\n * Creates a square grid based at a center point, with cells having `spacing` height and width.\r\n * \r\n * It fits in as many cells as it can within `width` and `height`.\r\n * \r\n * Returns a SVG group, consisting of horizontal and vertical lines\r\n * @param parent Parent element\r\n * @param center Center point of grid\r\n * @param spacing Width/height of cells\r\n * @param width How wide grid should be\r\n * @param height How high grid should be\r\n * @param opts \r\n */\r\nexport const grid = (parent:SVGElement, center: Points.Point, spacing: number, width: number, height: number, opts:Svg.LineDrawingOpts = {}) => {\r\n  if (!opts.strokeStyle) opts = {...opts, strokeStyle: getCssVariable(`bg-dim`, `silver`) };\r\n  if (!opts.strokeWidth) opts = {...opts, strokeWidth: 1};\r\n\r\n  const g = Svg.createEl<SVGGElement>(`g`);\r\n  Svg.applyOpts(g, opts);\r\n  Svg.applyPathOpts(g, opts);\r\n  Svg.applyStrokeOpts(g, opts);\r\n\r\n  // Horizontals\r\n  //eslint-disable-next-line functional/no-let\r\n  let y = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (y < height) {\r\n    const horiz = Lines.fromNumbers(0, y, width, y);\r\n    line(horiz, g);\r\n    y += spacing;\r\n  }\r\n\r\n  // Verticals\r\n  //eslint-disable-next-line functional/no-let\r\n  let x = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (x < width) {\r\n    const vert = Lines.fromNumbers(x, 0, x, height);\r\n    line(vert, g);\r\n    x += spacing;\r\n  }\r\n  parent.appendChild(g);\r\n  return g;\r\n};\r\n","/* eslint-disable */\r\nimport { minMaxAvg } from '../collections/NumericArrays.js';\r\nimport { CircularArray, MapOfMutable } from '../collections/Interfaces.js';\r\nimport { mapCircularMutable, mapArray} from \"../collections/MapMultiMutable.js\"\r\n\r\nimport { Point, subtract as pointSubtract} from \"../geometry/Point.js\";\r\nimport { resolveEl, parentSizeCanvas } from \"../dom/Util.js\";\r\nimport {Rect} from '../geometry/Rect.js';\r\nimport {Colour, Drawing} from './index.js';\r\n\r\nexport type Plotter = {\r\n  add(value:number, series?:string, skipDrawing?:boolean):void\r\n  drawValue(index:number):void\r\n  /**\r\n   * Draws current data. Useful if skipDrawing was true for earlier add() calls.\r\n   */\r\n  draw():void\r\n  clear():void\r\n  dispose():void\r\n}\r\n\r\n/**\r\n * Series\r\n */\r\nexport type Series = {\r\n  min:number,\r\n  max:number,\r\n  range:number,\r\n  name:string,\r\n  colour:string,\r\n  lastValue?:number,\r\n  hoverValue?:number\r\n};\r\n\r\n/**\r\n * Drawing options\r\n */\r\nexport type DrawingOpts = PlotOpts & {\r\n  x:Axis\r\n  y:Axis\r\n  ctx: CanvasRenderingContext2D\r\n  textHeight: number\r\n  capacity:number\r\n  coalesce:boolean\r\n  margin:number\r\n  canvasSize:Rect\r\n  clearCanvas:boolean\r\n  translucentPlot?:boolean\r\n  highlightIndex?:number\r\n  leadingEdgeDot:boolean\r\n  debug:boolean\r\n  digitsPrecision:number\r\n  lineWidth:number\r\n  defaultSeriesColour: string\r\n  defaultSeriesVariable?: string\r\n  showLegend:boolean,\r\n  pointer: {x:number, y:number}\r\n}\r\n\r\n/**\r\n * Properties for an axis\r\n */\r\nexport type Axis = {\r\n  allowedSeries?:string[]\r\n  /**\r\n   * Name of axis, eg `x`\r\n   */\r\n  name:string,\r\n  /**\r\n   * Colour to use for axis labels\r\n   */\r\n  colour?:string,\r\n  /**\r\n   * Forced scale for values\r\n   */\r\n  scaleRange?:[number,number],\r\n  /**\r\n   * Forced range for labelling, by default\r\n   * uses scaleRange\r\n   */\r\n  labelRange?:[number,number],\r\n  /**\r\n   * Width of axis line\r\n   */\r\n  lineWidth:number,\r\n  /**\r\n   * How line ends\r\n   */\r\n  endWith: `none` | `arrow`,\r\n  /**\r\n   * Where to place the name of the axis\r\n   */\r\n  namePosition: `none` | `end` | `side`,\r\n  /**\r\n   * Width for y axis, height for x axis\r\n   */\r\n  textSize: number,\r\n  /**\r\n   * If true, axis labels (ie numeric scale) are shown. Default: true\r\n   */\r\n  showLabels:boolean,\r\n  /**\r\n   * If true, a line is drawn to represent axis. Default: true\r\n   */\r\n  showLine:boolean\r\n}\r\n\r\nexport type SeriesColours = {\r\n  [id:string]: string|undefined\r\n};\r\n\r\n/**\r\n * Plotter options\r\n */\r\nexport type PlotOpts = {\r\n  debug?:boolean,\r\n  seriesColours?:SeriesColours,\r\n  /**\r\n   * Default: 2\r\n   */\r\n  digitsPrecision?:number,\r\n  x?:Axis,\r\n  y?:Axis,\r\n  plotSize?:Rect\r\n  autoSizeCanvas?:boolean\r\n  style?:`connected` | `dots` | `none`\r\n  //palette?: Palette.Palette\r\n  /**\r\n   * Number of items to keep in the circular array\r\n   * Default: 10\r\n   */\r\n  capacity?:number\r\n  //showYAxis?:boolean\r\n  //showXAxis?:boolean\r\n  //yAxes?: string[]|string\r\n  textHeight?: number\r\n  /**\r\n   * Width of plotted line\r\n   */\r\n  lineWidth?:number\r\n  /**\r\n   * If true, sub-pixel data points are ignored\r\n   */\r\n  coalesce?:boolean\r\n  /**\r\n   * Fixed range to scale Y values. By default normalises values\r\n   * as they come in. This will also determine the y-axis labels and drawing\r\n   */\r\n  //fixedRange?:[number,number]\r\n  /**\r\n   * How many horizontal pixels per data point. If unspecified,\r\n   * it will scale based on width of canvas and capacity.\r\n   */\r\n  //dataXScale?:number\r\n  defaultSeriesColour?:string\r\n  defaultSeriesVariable?:string\r\n  showLegend?:boolean\r\n}\r\n\r\nconst piPi = Math.PI *2;\r\n\r\nexport const defaultAxis = (name:string):Axis => ({\r\n  endWith: `none`,\r\n  lineWidth: 1,\r\n  namePosition: 'none',\r\n  name: name,\r\n  showLabels: name === `y`,\r\n  showLine: true,\r\n  // For y axis, it's the width, for x axis it's the text height\r\n  textSize: name === `y` ? 20 : 10\r\n });\r\n\r\nexport const calcScale = (buffer:BufferType, drawingOpts:DrawingOpts, seriesColours?:SeriesColours) => {\r\n  const seriesNames = buffer.keys();\r\n  const scales:Series[] = [];\r\n  seriesNames.forEach(s => {\r\n    const series = buffer.get(s);\r\n    if (series === undefined) return;\r\n\r\n    let {min,max} = minMaxAvg(series);\r\n    let range = max - min;\r\n    \r\n    let colour;\r\n    if (seriesColours !== undefined) {\r\n      colour = seriesColours[s];\r\n    }\r\n    if (colour == undefined) {\r\n      if (drawingOpts.defaultSeriesVariable) colour = Colour.getCssVariable(`accent`, drawingOpts.defaultSeriesColour);\r\n      else colour = drawingOpts.defaultSeriesColour;\r\n    }\r\n\r\n    if (range === 0) {\r\n      range = min;\r\n      min = min - range/2;\r\n      max = max + range/2;\r\n    }\r\n    scales.push({\r\n      min, max, range,\r\n      name: s,\r\n      colour: colour\r\n    })\r\n  });\r\n  return scales;\r\n}\r\n\r\nexport const add = (buffer:BufferType, value:number, series:string = \"\") => {\r\n  buffer.addKeyedValues(series, value);\r\n}\r\n\r\nexport type BufferType = MapOfMutable<number, CircularArray<number>> | MapOfMutable<number, ReadonlyArray<number>>;\r\n\r\nexport const drawValue = (index:number, buffer:BufferType, drawing:DrawingOpts) => {\r\n  const c = {\r\n    ...drawing,\r\n    translucentPlot: true,\r\n    leadingEdgeDot: false\r\n  };\r\n  draw(buffer, c);\r\n  \r\n  drawing =  {\r\n    ...drawing,\r\n    highlightIndex: index,\r\n    leadingEdgeDot: true,\r\n    translucentPlot: false,\r\n    style: `none`,\r\n    clearCanvas: false\r\n  };\r\n  draw(buffer, drawing);\r\n};\r\n\r\nconst scaleWithFixedRange = (buffer:BufferType, range:[number,number], drawing:DrawingOpts) => calcScale(buffer, drawing, drawing.seriesColours).map((s) => ({...s, range: range[1] - range[0], min: range[0], max: range[1]}));\r\n\r\n/**\r\n * Draws a `buffer` of data with `drawing` options.\r\n * \r\n * @param buffer \r\n * @param drawing \r\n */\r\nexport const draw = (buffer:BufferType, drawing:DrawingOpts) => {\r\n  const {x:xAxis, y:yAxis, ctx, canvasSize} = drawing;\r\n  const margin = drawing.margin;\r\n // const cap = drawing.capacity === 0 ? buffer.lengthMax : drawing.capacity;\r\n  const series = drawing.y.scaleRange ? scaleWithFixedRange(buffer, drawing.y.scaleRange, drawing) : calcScale(buffer, drawing, drawing.seriesColours);\r\n\r\n  if (drawing.clearCanvas) ctx.clearRect(0,0,canvasSize.width,canvasSize.height);\r\n  \r\n  if (drawing.debug) {\r\n    ctx.strokeStyle = `orange`;\r\n    ctx.strokeRect(0,0,canvasSize.width, canvasSize.height); \r\n  }\r\n  \r\n  // Move in for margin\r\n  ctx.translate(margin, margin);\r\n  \r\n\r\n  // Calculate/use plot area\r\n  const plotSize = drawing.plotSize ?? plotSizeFromBounds(canvasSize, drawing);\r\n\r\n  // Draw vertical axes\r\n  const axisSize = {height: plotSize.height + margin + margin, width:plotSize.width};\r\n\r\n  if (yAxis.showLabels || yAxis.showLine) {\r\n    // Draw the labels for each series\r\n    series.forEach(s => {\r\n      if (yAxis.allowedSeries !== undefined) {\r\n        if (!yAxis.allowedSeries.includes(s.name)) return;\r\n      }\r\n      drawYSeriesScale(s, axisSize, drawing);\r\n    });\r\n\r\n    // Draw vertical line\r\n    if (series.length > 0 && yAxis.showLine)  drawYLine(axisSize, series[0], drawing);\r\n  }\r\n\r\n  // Draw x/horizontal axis if needed\r\n  if ((xAxis.showLabels || xAxis.showLine) && series.length > 0) {\r\n    const yPos = yAxis.labelRange ? yAxis.labelRange[0] : series[0].min;\r\n    drawXAxis( plotSize.width, calcYForValue(yPos, series[0], plotSize.height)+margin + xAxis.lineWidth, drawing);\r\n  }\r\n\r\n  const plotDrawing = {\r\n    ...drawing,\r\n    plotSize\r\n  };\r\n  \r\n  const ptr = Drawing.translatePoint(ctx, drawing.pointer);\r\n  //console.log(ptr);\r\n\r\n  // Draw data for each series\r\n  series.forEach(s => {\r\n    const data = buffer.getSource(s.name);\r\n    if (data === undefined) return;\r\n    \r\n    let leadingEdgeIndex = (buffer.typeName === `circular`)  ? (data as CircularArray<number>).pointer - 1: data.length -1;\r\n    if (drawing.highlightIndex !== undefined) leadingEdgeIndex = drawing.highlightIndex; \r\n    ctx.save();\r\n    ctx.translate(0, margin + margin);\r\n\r\n    drawSeriesData(s, data, plotSize, plotDrawing, leadingEdgeIndex);\r\n    ctx.restore();\r\n  });\r\n\r\n  if (drawing.showLegend) {\r\n    ctx.save();\r\n    ctx.translate(0, plotSize.height + margin + margin + margin);\r\n    const legendSize = {width: plotSize.width, height: drawing.x.textSize + margin + margin} \r\n    drawLegend(series, drawing, legendSize);\r\n    ctx.restore();\r\n  }\r\n  ctx.resetTransform();\r\n}\r\n\r\n/**\r\n * Draw vertical axis\r\n * @param series \r\n * @param height \r\n * @param drawing \r\n */\r\nconst drawYSeriesScale = (series:Series, plotSize:Rect, drawing:DrawingOpts) => {\r\n  const {ctx, y, digitsPrecision, margin} = drawing;\r\n  const { height} = plotSize;\r\n\r\n  if (drawing.debug) {\r\n    ctx.strokeStyle = `purple`;\r\n    ctx.strokeRect(0,0, y.textSize, height + margin);  \r\n  }\r\n  \r\n  ctx.fillStyle = series.colour.length > 0 ? series.colour : `white`;\r\n\r\n  // Override colour with axis-defined colour\r\n  if (y.colour) ctx.fillStyle = y.colour;\r\n\r\n  // Draw labels\r\n  const min = y.labelRange ? y.labelRange[0] : series.min;\r\n  const max = y.labelRange ? y.labelRange[1] : series.max;\r\n  const range = y.labelRange ? max - min : series.range;\r\n  const mid = min + (range / 2)\r\n  const halfHeight = drawing.textHeight / 2;\r\n\r\n  ctx.textBaseline = `top`;\r\n  ctx.fillText(min.toFixed(digitsPrecision), 0, calcYForValue(min, series, height)-halfHeight);\r\n  ctx.fillText(mid.toFixed(digitsPrecision), 0, calcYForValue(mid, series, height)-halfHeight);\r\n  ctx.fillText(max.toFixed(digitsPrecision), 0, calcYForValue(max, series, height) - margin);\r\n\r\n  ctx.translate(y.textSize + margin, 0);\r\n}\r\n\r\nconst drawYLine = (plotSize:Rect, series:Series, drawing:DrawingOpts) => {\r\n  if (series === undefined) throw new Error(`series undefined`);\r\n  const {ctx, y} = drawing;\r\n  const { height} = plotSize;\r\n  \r\n  const min = y.labelRange ? y.labelRange[0] : series.min;\r\n  const max = y.labelRange ? y.labelRange[1] : series.max;\r\n\r\n  const minPos = calcYForValue(min, series, height);\r\n  const maxPos = calcYForValue(max, series, height);\r\n\r\n  // Draw line\r\n  ctx.translate(y.lineWidth, 0);\r\n  ctx.lineWidth = y.lineWidth;\r\n  ctx.beginPath();\r\n  ctx.moveTo(0, minPos);\r\n  ctx.lineTo(0, maxPos);\r\n  ctx.strokeStyle = series.colour;\r\n  if (y.colour) ctx.strokeStyle = y.colour;\r\n  ctx.stroke();\r\n  ctx.translate(y.lineWidth, 0);\r\n};\r\n\r\nconst drawLegend = (series:Series[], drawing:DrawingOpts, size:{width:number, height:number}) => {\r\n  const {ctx} = drawing;\r\n  const lineSampleWidth = 10;\r\n\r\n  let x = 0;\r\n  const lineY = drawing.margin*3;\r\n  const textY = drawing.margin;\r\n\r\n  ctx.lineWidth = drawing.lineWidth;\r\n\r\n  series.forEach(s=> {\r\n    ctx.moveTo(x, lineY);\r\n    ctx.strokeStyle = s.colour;\r\n    ctx.lineTo(x+lineSampleWidth, lineY);\r\n    ctx.stroke();\r\n    x += lineSampleWidth + drawing.margin;\r\n    \r\n    let label = s.name;\r\n    if (s.lastValue) label += ' ' + s.lastValue.toFixed(drawing.digitsPrecision);\r\n    const labelSize = ctx.measureText(label);\r\n\r\n    ctx.fillStyle = s.colour;\r\n    ctx.fillText(label, x, textY);\r\n    x += labelSize.width;\r\n  });\r\n\r\n  \r\n}\r\n\r\nconst drawXAxis = ( width:number, yPos:number, drawing:DrawingOpts) => {\r\n  const {ctx, x, y} = drawing;\r\n\r\n  if (!x.showLine) return;\r\n\r\n  if (x.colour) ctx.strokeStyle = x.colour;\r\n  ctx.lineWidth = x.lineWidth;\r\n  ctx.beginPath();\r\n\r\n  // Assumes ctx is translated after drawing Y axis\r\n  ctx.moveTo(0, yPos);\r\n  ctx.lineTo(width, yPos);\r\n  ctx.stroke();\r\n\r\n}\r\n\r\n/**\r\n * Draw series data\r\n * @param series \r\n * @param values \r\n * @param plotSize \r\n * @param drawing \r\n */\r\nconst drawSeriesData = (series:Series, values:ArrayLike<number>, plotSize:Rect, drawing:DrawingOpts, leadingEdgeIndex:number) => {\r\n  const {ctx, lineWidth, translucentPlot = false, margin, x:xAxis} = drawing;\r\n  const style = drawing.style ?? `connected`;\r\n  const height = plotSize.height - margin;\r\n\r\n  let dataXScale = 1;\r\n  if (xAxis.scaleRange) {\r\n    const xAxisRange = xAxis.scaleRange[1] - xAxis.scaleRange[0];\r\n    dataXScale = plotSize.width / xAxisRange;\r\n  } else {\r\n    if (drawing.capacity === 0) dataXScale = plotSize.width / values.length;\r\n    else dataXScale = plotSize.width / drawing.capacity;\r\n  }\r\n\r\n  // Step through data faster if per-pixel density is above one\r\n  const incrementBy = drawing.coalesce ? \r\n    dataXScale! < 0 ? Math.floor((1/dataXScale!)) : 1\r\n    : 1;\r\n\r\n  let x = 0;\r\n  let leadingEdge:Point|undefined;\r\n  \r\n  if (drawing.debug) {\r\n    ctx.strokeStyle = `green`;\r\n    ctx.strokeRect(0,0, plotSize.width, plotSize.height);\r\n  }\r\n\r\n  const colourTransform = (c:string) => {\r\n    if (translucentPlot) return Colour.opacity(c, 0.2);\r\n    return c;\r\n  }\r\n\r\n  if (style === `dots`) { \r\n    ctx.fillStyle = colourTransform(series.colour);\r\n  } else if (style === `none`) {\r\n  } else {\r\n    ctx.beginPath();\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeStyle = colourTransform(series.colour);\r\n  } \r\n\r\n  for (let i=0; i<values.length; i += incrementBy) {\r\n    let y = calcYForValue(values[i], series, height) -1;\r\n    \r\n    if (style === `dots`) {\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, lineWidth, 0, piPi);\r\n      ctx.fill();\r\n    } else if (style === `none`) {\r\n    } else  {\r\n      if (i == 0) ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y);\r\n    }\r\n    \r\n    if (i === leadingEdgeIndex) {\r\n      leadingEdge = {x, y};\r\n      series.lastValue = values[i];\r\n    }\r\n    x += dataXScale;\r\n  }\r\n\r\n  if (style === `connected`) {\r\n    ctx.stroke();\r\n  }\r\n\r\n  // Draw a circle at latest data point\r\n  if (leadingEdge !== undefined && drawing.leadingEdgeDot) {\r\n    ctx.beginPath();\r\n    ctx.fillStyle = colourTransform(series.colour);// drawing.palette.getOrAdd(`series${series.name}`));\r\n    ctx.arc(leadingEdge.x, leadingEdge.y, 3, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\nconst calcYForValue = (v:number, series:Series, height:number) => (1 - (v - series.min) / series.range) * height ;\r\n\r\n/**\r\n * Calculates lost area, given a margin value, axis settings.\r\n * @param margin \r\n * @param x \r\n * @param y \r\n * @param showLegend \r\n * @returns \r\n */\r\nconst calcSizing = (margin:number, x:Axis, y:Axis, showLegend:boolean) => {\r\n  let fromLeft = margin;\r\n  if (y.showLabels) fromLeft += y.textSize;\r\n  if (y.showLine) fromLeft += y.lineWidth;\r\n  if (y.showLabels || y.showLine) fromLeft += margin + margin;\r\n  let fromRight = margin;\r\n\r\n  let fromTop = margin + margin;\r\n  let fromBottom = margin + margin;\r\n  if (x.showLabels) fromBottom += x.textSize;\r\n  else fromBottom += margin;\r\n  if (x.showLine) fromBottom += x.lineWidth;\r\n  if (x.showLabels || x.showLine) fromBottom += margin;\r\n\r\n  if (showLegend) fromBottom += x.textSize;\r\n\r\n  return {\r\n    left: fromLeft,\r\n    right: fromRight,\r\n    top: fromTop,\r\n    bottom: fromBottom\r\n  };\r\n}\r\n\r\nconst plotSizeFromBounds = (bounds:Rect, opts:{margin:number, y:Axis, x:Axis, showLegend:boolean}):Rect => {\r\n  const { width, height } = bounds;\r\n  const sizing = calcSizing(opts.margin, opts.x, opts.y, opts.showLegend);\r\n  return {\r\n    width: width - sizing.left - sizing.right, \r\n    height: height - sizing.top - sizing.bottom\r\n  }\r\n};\r\n\r\nconst canvasSizeFromPlot = (plot:Rect, opts:{margin:number, y:Axis, x:Axis, showLegend:boolean}):Rect => {\r\n  const { width, height } = plot;\r\n  const sizing = calcSizing(opts.margin, opts.x, opts.y, opts.showLegend);\r\n  return {\r\n    width: width + sizing.left + sizing.right,\r\n    height: height + sizing.top + sizing.bottom\r\n  };\r\n};\r\n\r\n/**\r\n * Creates a simple horizontal data plot within a DIV.\r\n * \r\n * ```\r\n * const p = plot(`#parentDiv`);\r\n * p.add(10);\r\n * p.clear();\r\n * \r\n * // Plot data using series\r\n * p.add(-1, `temp`);\r\n * p.add(0.4, `humidty`);\r\n * ```\r\n * \r\n * Options can be specified to customise plot\r\n * ```\r\n * const p = plot(`#parentDiv`, {\r\n *  capacity: 100,     // How many data points to store (default: 10)\r\n *  showYAxis: false,  // Toggle whether y axis is shown (default: true)\r\n *  lineWidth: 2,      // Width of plot line (default: 2)\r\n *  yAxes:  [`temp`],  // Only show these y axes (by default all are shown)\r\n *  coalesce: true,    // If true, sub-pixel data points are skipped, improving performance for dense plots at the expense of plot precision\r\n * });\r\n * ```\r\n * \r\n * For all `capacity` values other than `0`, a circular array is used to track data. Otherwise an array is used that will\r\n * grow infinitely.\r\n * \r\n * By default, will attempt to use CSS variable `--series[seriesName]` for axis colours.\r\n *  `--series[name]-axis` for titles. Eg `--seriesX`. For data added without a named series,\r\n * it will use `--series` and `--series-axis`.\r\n * @param parentElOrQuery\r\n * @param opts\r\n * @return Plotter instance\r\n */\r\nexport const plot = (parentElOrQuery:string|HTMLElement, opts:PlotOpts):Plotter => {\r\n  if (parentElOrQuery === null) throw new Error(`parentElOrQuery is null. Expected string or element`);\r\n\r\n  const parentEl = resolveEl(parentElOrQuery);\r\n  let canvasEl:HTMLCanvasElement;\r\n  let destroyCanvasEl = true;\r\n  let plotSize:Rect|undefined = opts.plotSize;\r\n  let canvasSize:Rect\r\n  if (parentEl.nodeName === `CANVAS`)  {\r\n    // Use provided canvas\r\n    canvasEl = parentEl as HTMLCanvasElement;  \r\n    destroyCanvasEl = false;\r\n    canvasSize = {width: canvasEl.width, height: canvasEl.height};\r\n  } else {\r\n    // Create a CANVAS that fills parent\r\n    canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\r\n    parentEl.append(canvasEl);\r\n    plotSize = opts.plotSize;\r\n    canvasSize = {width: canvasEl.width, height: canvasEl.height};\r\n  }\r\n  \r\n  const pointer = {x:0, y:0};\r\n\r\n  const onPointerMove = (evt:PointerEvent) => {\r\n    pointer.x = evt.offsetX;\r\n    pointer.y = evt.offsetY;\r\n  };\r\n\r\n  canvasEl.addEventListener(`pointermove`, onPointerMove);\r\n\r\n  const ctx = canvasEl.getContext(`2d`)!;\r\n\r\n  const capacity = opts.capacity ?? 10;\r\n  const buffer = capacity > 0 ? mapCircularMutable<number>({ capacity }) : mapArray<number>();\r\n  const metrics = ctx.measureText('Xy');\r\n  const coalesce = opts.coalesce ?? true;\r\n\r\n  // Sanity-check\r\n  if (ctx === null) throw new Error(`Drawing context not available`);\r\n\r\n  let xAxis = defaultAxis(`x`);\r\n  if (opts.x) xAxis = {...xAxis, ...opts.x};\r\n  let yAxis = defaultAxis(`y`);\r\n  if (opts.y) yAxis = {...yAxis, ...opts.y};\r\n\r\n  let drawingOpts:DrawingOpts = {\r\n    ...opts,\r\n    y: yAxis,\r\n    x: xAxis,\r\n    pointer: pointer,\r\n    capacity, coalesce, plotSize, canvasSize, ctx,\r\n    textHeight: opts.textHeight ?? metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\r\n    style: opts.style ?? `connected`,\r\n    defaultSeriesColour: opts.defaultSeriesColour ?? `yellow`,\r\n    margin: 3,\r\n    clearCanvas:true,\r\n    leadingEdgeDot:true,\r\n    debug: opts.debug ?? false,\r\n    digitsPrecision: opts.digitsPrecision ?? 2,\r\n    lineWidth: opts.lineWidth ?? 2,\r\n    showLegend: opts.showLegend ?? false\r\n  };\r\n\r\n  if (plotSize) {\r\n    // Size canvas based on given plot size\r\n    const canvasSize = canvasSizeFromPlot(plotSize, drawingOpts);\r\n    canvasEl.width = canvasSize.width;\r\n    canvasEl.height = canvasSize.height;\r\n\r\n    drawingOpts.canvasSize = canvasSize;\r\n  }\r\n\r\n  if (opts.autoSizeCanvas) {\r\n    parentSizeCanvas(canvasEl, (args) => {\r\n      const bounds = args.bounds;\r\n      drawingOpts = {\r\n        ...drawingOpts, \r\n        plotSize: plotSizeFromBounds(bounds, drawingOpts),\r\n        canvasSize: bounds\r\n      };\r\n      draw(buffer, drawingOpts);\r\n\r\n    });\r\n  }\r\n\r\n  return {\r\n    drawValue: (index:number) => {\r\n      drawValue(index, buffer, drawingOpts);\r\n    },\r\n    dispose: () => {\r\n      canvasEl.removeEventListener(`pointermove`, onPointerMove);\r\n      if (destroyCanvasEl) canvasEl.remove();    \r\n    },\r\n    add: (value:number, series = \"\", skipDrawing = false) => {\r\n      add(buffer, value, series);\r\n      if (skipDrawing) return;\r\n      draw(buffer, drawingOpts)\r\n    },\r\n    draw: () => {\r\n      draw(buffer, drawingOpts)\r\n    },\r\n    clear:() => {\r\n      buffer.clear();\r\n    }\r\n  }\r\n}\r\n\r\n","/* eslint-disable */\r\nimport {minIndex} from '../collections/NumericArrays.js';\r\nimport {PointCalculableShape} from '../geometry/Point.js';\r\nimport {Arrays} from '../collections/index.js';\r\nimport { Points, Rects} from '../geometry/index.js';\r\nimport {clamp, flip,  scale} from '../data/index.js';\r\nimport { parentSizeCanvas } from \"../dom/Util.js\";\r\nimport * as Sg from './SceneGraph.js';\r\n\r\nimport {textWidth} from './Drawing.js';\r\nimport {getFieldPaths, getFieldByPath, ifNaN} from '../Util.js';\r\n\r\n/**\r\n * A data source\r\n */\r\nexport interface DataSource {\r\n  dirty:boolean\r\n  type: string\r\n  get range():DataRange\r\n  add(value:number):void\r\n  clear():void\r\n}\r\n\r\n/**\r\n * Plot options\r\n */\r\nexport type Opts = {\r\n  /**\r\n   * If true, Canvas will be resized to fit parent\r\n   */\r\n  autoSize?:boolean\r\n  /**\r\n   * Colour for axis lines & labels\r\n   */\r\n  axisColour?:string\r\n  /**\r\n   * Width for axis lines\r\n   */\r\n  axisWidth?:number\r\n}\r\n\r\n/**\r\n * Series options\r\n */\r\nexport type SeriesOpts = {\r\n  /**\r\n   * Colour for series\r\n   */\r\n  colour:string\r\n  /**\r\n   * Visual width/height (depends on drawingStyle)\r\n   */\r\n  width?:number\r\n  /**\r\n   * How series should be rendered\r\n   */\r\n  drawingStyle?: `line`|`dotted`|`bar`\r\n  /**\r\n   * Preferred data range\r\n   */\r\n  axisRange?:DataRange\r\n  /**\r\n   * If true, range will stay at min/max, rather than continuously adapting\r\n   * to the current data range.\r\n   */\r\n  visualRangeStretch?:boolean\r\n};\r\n\r\nexport type DataPoint = {\r\n  value:number\r\n  index:number\r\n  title?:string\r\n};\r\n\r\n\r\nexport type DataHitPoint = (pt:Points.Point) => [point: DataPoint|undefined, distance: number];\r\n\r\n\r\nclass ArrayDataSource implements DataSource {\r\n  data:number[];\r\n  series:Series;\r\n  dirty = false;\r\n  type = `array`;\r\n\r\n  _range:Arrays.MinMaxAvgTotal|undefined;\r\n  \r\n  constructor(series:Series) {\r\n    this.series = series;\r\n    this.data = [];\r\n    this.dirty = true;\r\n  }\r\n\r\n  clear() {\r\n    this.set([]);\r\n  }\r\n\r\n  set(data:number[]) {\r\n    this.data = data;\r\n    this.dirty = true;\r\n  }\r\n\r\n  get length():number {\r\n    return this.data.length;\r\n  }\r\n\r\n  get range():DataRange {\r\n    if (!this.dirty && this._range !== undefined) return this._range;\r\n    this.dirty = false;\r\n    this._range = Arrays.minMaxAvg(this.data);\r\n    return {...this._range, changed: true};\r\n  }\r\n\r\n  add(value:number) {\r\n    this.data = [...this.data, value];\r\n    this.dirty = true;\r\n  }\r\n}\r\n\r\nclass StreamingDataSource extends ArrayDataSource {\r\n  desiredDataPointMinWidth = 5;\r\n  \r\n  constructor(series:Series) {\r\n    super(series);\r\n  }\r\n\r\n  add(value:number) {\r\n    const lastWidth = this.series.lastPxPerPt;\r\n    if (lastWidth > -1 && lastWidth < this.desiredDataPointMinWidth) { \r\n      // Remove older data\r\n      const pts = Math.floor(this.desiredDataPointMinWidth / lastWidth);\r\n      const d = [...this.data.slice(pts), value];\r\n      super.set(d);\r\n    } else super.add(value);\r\n  }\r\n}\r\n\r\nexport type DataRange = {\r\n  min:number,\r\n  max:number,\r\n  changed?:boolean\r\n}\r\n\r\nexport class Series {\r\n  name:string;\r\n  colour:string;\r\n  source: DataSource\r\n  drawingStyle:`line`|`dotted`|`bar`;\r\n  width = 3;\r\n  dataHitPoint: DataHitPoint|undefined;\r\n  tooltip?:string;\r\n  precision = 2;\r\n\r\n  // How many pixels wide per data point on last draw\r\n  lastPxPerPt = -1;\r\n\r\n  protected _visualRange:DataRange;\r\n  protected _visualRangeStretch:boolean;\r\n\r\n  constructor(name:string, sourceType:`array`|`stream`, private plot:Plot, opts:SeriesOpts) {\r\n    this.name = name;\r\n\r\n    this.drawingStyle = opts.drawingStyle ?? `line`;\r\n    this.colour = opts.colour;\r\n    this.width = opts.width ?? 3;\r\n    this._visualRange = opts.axisRange ?? {min:Number.NaN,max:Number.NaN};\r\n    this._visualRangeStretch = opts.visualRangeStretch ?? true;\r\n\r\n    if(sourceType === `array`) {\r\n      this.source = new ArrayDataSource(this);\r\n    } else if (sourceType === `stream`) {\r\n      this.source = new StreamingDataSource(this);\r\n    } else throw new Error(`Unknown sourceType. Expected array|stream`);\r\n\r\n  }\r\n\r\n  formatValue(v:number) {\r\n    return v.toFixed(this.precision);\r\n  }\r\n\r\n  get visualRange():DataRange {\r\n    let vr = this._visualRange;\r\n    const sourceRange = this.source.range;\r\n    let changed = false;\r\n    if (sourceRange.changed) { \r\n      if (this._visualRangeStretch) {\r\n        // Stretch range to lowest/highest-seen min/max\r\n        const rmin = Math.min(ifNaN(vr.min, sourceRange.min), sourceRange.min);\r\n        const rmax = Math.max(ifNaN(vr.max, sourceRange.max), sourceRange.max);\r\n        if (rmin !== vr.min || rmax !== vr.max) {\r\n          // Changed\r\n          vr = {min:rmin, max:rmax};\r\n          changed = true;\r\n        }\r\n      } else {\r\n        // Use actual range of data\r\n        if (!isRangeEqual(sourceRange, vr)) {\r\n          vr = sourceRange;\r\n          changed = true;\r\n        }\r\n      }\r\n    }\r\n    this._visualRange = vr;\r\n    return {...vr, changed};\r\n  }\r\n\r\n  scaleValue(value:number): number {\r\n    if (this.source === undefined) return value;\r\n    const r = this.visualRange;\r\n    if (r.min == r.max) {\r\n      // No real scale - only received the same value for this series\r\n      return 0.5;\r\n    }\r\n    return scale(value, r.min, r.max);\r\n  }\r\n\r\n  add(value:number) {\r\n    this.source.add(value);\r\n    this.plot.plotArea.needsDrawing = true;\r\n  }\r\n\r\n  clear() {\r\n    this.source.clear();\r\n    this.plot.plotArea.needsDrawing = true;\r\n  }\r\n}\r\n\r\nexport class PlotArea extends Sg.CanvasBox {\r\n  paddingPx = 3;\r\n  piPi = Math.PI*2;\r\n  // If pointer is more than this distance away from a data point, it's ignored\r\n  pointerDistanceThreshold = 20;\r\n  lastRangeChange = 0;\r\n  pointer:Points.Point|undefined;\r\n\r\n  constructor(private plot:Plot) {\r\n    super(plot, plot.canvasEl, `PlotArea`);\r\n  }\r\n  \r\n  clear() {\r\n    this.lastRangeChange = 0;\r\n    this.pointer = undefined;\r\n  }\r\n\r\n  protected measureSelf(opts: Sg.MeasureState, parent?: Sg.Measurement): Rects.Rect | Rects.RectPositioned | undefined {\r\n    const axisY = opts.getSize(`AxisY`);\r\n    if (axisY === undefined) return;\r\n    \r\n    const legend = opts.getSize(`Legend`);\r\n    if (legend === undefined) return;\r\n\r\n    const axisX = opts.getSize(`AxisX`);\r\n    if (axisX === undefined) return;\r\n\r\n    return {\r\n      x: axisY.width,\r\n      y: 0,\r\n      width: opts.bounds.width - axisY.width,\r\n      height: opts.bounds.height - legend.height - axisX.height,\r\n    };\r\n  }\r\n\r\n  protected onNotify(msg: string, source: Sg.Box): void {\r\n    if (msg === `measureApplied` && source === this.plot.axisY) this._needsLayout = true;  \r\n    if (msg === `measureApplied` && source === this.plot.legend) this._needsLayout = true;  \r\n\r\n  }\r\n\r\n  // protected onClick(p: Points.Point): void {\r\n  //   this.plot.frozen = !this.plot.frozen;    \r\n  // }\r\n\r\n  protected onPointerLeave(): void {\r\n    const series = [...this.plot.series.values()];\r\n    series.forEach(series => {\r\n      series.tooltip = undefined;\r\n    });\r\n    this.pointer = undefined;\r\n    this.plot.legend.onLayoutNeeded();\r\n\r\n  }\r\n\r\n  protected onPointerMove(p: Points.Point): void {\r\n    this.pointer = p;\r\n    this.plot.legend.onLayoutNeeded();\r\n  }\r\n\r\n  protected measurePreflight(): void {\r\n    this.updateTooltip();\r\n      \r\n  }\r\n\r\n  updateTooltip() {\r\n    const p = this.pointer;\r\n    if (p === undefined) return;\r\n    const series = [...this.plot.series.values()];\r\n    series.forEach(series => {\r\n      if (p === undefined) { \r\n        series.tooltip = undefined;\r\n        return;\r\n      }\r\n      if (series.dataHitPoint === undefined) return;\r\n      const v = series.dataHitPoint(p);\r\n      if (v[0] === undefined) return;\r\n      if (v[1] > this.pointerDistanceThreshold) return; // too far away\r\n      series.tooltip = series.formatValue(v[0].value);\r\n      //this.plot.legend.onLayoutNeeded();\r\n    });\r\n    this.plot.legend.needsDrawing = true;\r\n  }\r\n\r\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\r\n    if (this.plot.frozen) return;\r\n    const series = this.plot.seriesArray();// [...this.plot.series.values()];\r\n    ctx.clearRect(0, 0, this.visual.width, this.visual.height);\r\n\r\n    series.forEach(series => {      \r\n      if (series.source.type === `array` || series.source.type === `stream`) {\r\n        const arraySeries = series.source as ArrayDataSource;\r\n        if (arraySeries.data === undefined) return;\r\n        const d = [...arraySeries.data];\r\n        this.drawDataSet(series, d, ctx);\r\n      }\r\n      else console.warn(`Unknown data source type ${series.source.type}`);\r\n    });\r\n  }\r\n\r\n  computeY(series:Series, rawValue:number) {\r\n    const s = series.scaleValue(rawValue);\r\n    return (flip(s)*this.visual.height) + this.paddingPx;\r\n  }\r\n\r\n  drawDataSet(series:Series, d:number[], ctx:CanvasRenderingContext2D): void {\r\n    const padding = this.paddingPx + series.width;\r\n    const v = Rects.subtract(this.visual, padding*2, padding*3.5);\r\n    const pxPerPt = v.width/ d.length;\r\n    \r\n    series.lastPxPerPt = pxPerPt;\r\n    let x = padding;\r\n    \r\n    ctx.strokeStyle = series.colour;\r\n    ctx.lineWidth = series.width;\r\n    const shapes:(DataPoint & PointCalculableShape)[] = [];\r\n  \r\n    series.dataHitPoint = (pt:Points.Point):[DataPoint,number] => {\r\n      const distances = shapes.map(v => Points.distanceToExterior(pt, v));\r\n      const i = minIndex(...distances);\r\n      const closest = shapes[i];\r\n      if (closest === undefined) [undefined,0];\r\n      return [closest, distances[i]];\r\n    };\r\n\r\n    if (series.drawingStyle === `line`) {\r\n      let y = 0;\r\n      ctx.beginPath();\r\n\r\n      for (let i=0;i<d.length;i++) {\r\n        const scaled = clamp(series.scaleValue(d[i]));\r\n        y = padding + this.paddingPx + (v.height * flip(scaled));\r\n        shapes.push({x, y, index:i, value:d[i]});\r\n\r\n        if (i == 0) ctx.moveTo(x+pxPerPt/2, y);\r\n        else ctx.lineTo(x+pxPerPt/2,y);\r\n       \r\n        if (y>this.visual.height) console.warn(y + ' h: ' + this.visual.height);\r\n        x += pxPerPt;\r\n      }\r\n      ctx.strokeStyle = series.colour;\r\n      ctx.stroke();\r\n    } else if (series.drawingStyle === `dotted`) {\r\n      let y = 0;\r\n      ctx.fillStyle = series.colour;\r\n      for (let i=0;i<d.length;i++) {\r\n        const scaled = series.scaleValue(d[i]);\r\n        y = padding + (v.height * flip(scaled));\r\n        ctx.beginPath();\r\n        ctx.arc(x + pxPerPt/2, y, series.width, 0, this.piPi);\r\n        ctx.fill();\r\n        shapes.push({radius: series.width, x, y, index:i, value: d[i]});\r\n        x += pxPerPt;\r\n      }\r\n    } else if (series.drawingStyle === `bar`) {\r\n      ctx.fillStyle = series.colour;\r\n      const interBarPadding = Math.ceil(pxPerPt*0.1);\r\n      for (let i=0;i<d.length;i++) {\r\n        const scaled = series.scaleValue(d[i]);\r\n        const h = (v.height) * scaled;\r\n        const r = {\r\n          x: x + interBarPadding,\r\n          y: v.height - h + padding,\r\n          width: pxPerPt-interBarPadding,\r\n          height: h,\r\n          index: i,\r\n          value: d[i]\r\n        };\r\n        ctx.fillRect(r.x, r.y, r.width, r.height);\r\n        shapes.push(r);\r\n        x += pxPerPt;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class Legend extends Sg.CanvasBox {\r\n  sampleSize = {width:10, height: 10};\r\n  padding = 3;\r\n  widthSnapping = 20;\r\n\r\n  constructor(private plot:Plot) {\r\n    super(plot, plot.canvasEl, `Legend`);\r\n  }\r\n\r\n  clear() {\r\n  }\r\n\r\n  protected measureSelf(opts: Sg.MeasureState, parent?: Sg.Measurement): Rects.Rect | Rects.RectPositioned | undefined {\r\n    const yAxis = opts.measurements.get(`AxisY`);\r\n    const sample = this.sampleSize;\r\n    const widthSnapping= this.widthSnapping;\r\n    const padding = this.padding;\r\n    const ctx = (opts as Sg.CanvasMeasureState).ctx;\r\n    if (yAxis === undefined) return;\r\n\r\n    const usableWidth = opts.bounds.width - yAxis.size.width;\r\n\r\n    const series = this.plot.seriesArray();\r\n    let width = padding;\r\n    for (let i=0;i<series.length;i++) {\r\n      width += sample.width + padding;\r\n      width += textWidth(ctx, series[i].name, padding, widthSnapping);\r\n      width += textWidth(ctx, series[i].tooltip, padding, widthSnapping);\r\n     }\r\n\r\n    const rows = Math.max(1, Math.ceil(width / usableWidth));\r\n    const h = rows * (this.sampleSize.height + this.padding + this.padding);\r\n    return {\r\n      x: yAxis.size.width,\r\n      y: opts.bounds.height - h,\r\n      width: usableWidth,\r\n      height: h\r\n    };\r\n  }\r\n    \r\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\r\n    const series = this.plot.seriesArray();\r\n    const sample = this.sampleSize;\r\n    const padding = this.padding;\r\n    const widthSnapping= this.widthSnapping;\r\n\r\n    let x = padding;\r\n    let y = padding;\r\n    \r\n    ctx.clearRect(0, 0, this.visual.width, this.visual.height);\r\n\r\n    for (let i=0;i<series.length;i++) {\r\n      const s = series[i];\r\n      ctx.fillStyle = s.colour;\r\n      ctx.fillRect(x, y, sample.width, sample.height);\r\n      x += sample.width + padding;\r\n      ctx.textBaseline = `middle`;\r\n      \r\n      ctx.fillText(s.name, x, y + (sample.height/2));\r\n      x += textWidth(ctx, s.name, padding, widthSnapping);\r\n      \r\n      if (s.tooltip) {\r\n        ctx.fillStyle = this.plot.axisColour;\r\n        ctx.fillText(s.tooltip, x, y+ (sample.height/2));\r\n        x += textWidth(ctx, s.tooltip, padding, widthSnapping);\r\n      }\r\n      x += padding;\r\n      if (x > this.visual.width - 100) {\r\n        x = padding;\r\n        y += sample.height + padding + padding;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected onNotify(msg: string, source: Sg.Box): void {\r\n    if (msg === `measureApplied` && source === (this._parent as Plot).axisY) this._needsLayout = true;  \r\n  }\r\n}\r\n\r\nexport class AxisX extends Sg.CanvasBox {\r\n  paddingPx = 2;\r\n  colour?:string;\r\n\r\n  constructor(private plot:Plot) {\r\n    super(plot, plot.canvasEl,`AxisX`);\r\n  }\r\n\r\n  clear() {\r\n  }\r\n\r\n  protected onNotify(msg: string, source: Sg.Box): void {\r\n    if (msg === `measureApplied` && source === this.plot.axisY) this._needsLayout = true;  \r\n    if (msg === `measureApplied` && source === this.plot.legend) {\r\n      this.onLayoutNeeded();\r\n    }  \r\n  }\r\n\r\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\r\n    const plot = this.plot;\r\n    const v = this.visual;\r\n    const width = plot.axisWidth;\r\n\r\n    const colour = this.colour ?? plot.axisColour;\r\n    ctx.strokeStyle = colour;\r\n\r\n    ctx.clearRect(0,0,v.width, v.height);\r\n    ctx.beginPath();\r\n    ctx.lineWidth = width;    \r\n    ctx.moveTo(0, width/2);\r\n    ctx.lineTo(v.width, width/2);\r\n    ctx.stroke();\r\n  }\r\n\r\n  protected measureSelf(opts: Sg.MeasureState, parent?: Sg.Measurement): Rects.Rect | Rects.RectPositioned | undefined {\r\n    const plot = this.plot;\r\n    \r\n    const yAxis = opts.measurements.get(`AxisY`);\r\n    if (yAxis === undefined) return;\r\n    \r\n    const legend = opts.measurements.get(`Legend`);\r\n    if (legend === undefined) return;\r\n\r\n    const h = plot.axisWidth + this.paddingPx;\r\n    return {\r\n      x: yAxis.size.width,\r\n      y: opts.bounds.height - h - legend.size.height,\r\n      width: opts.bounds.width - yAxis.size.width,\r\n      height: h\r\n    }\r\n  }\r\n}\r\n\r\nconst isRangeEqual = (a:DataRange, b:DataRange) =>  a.max === b.max && a.min === b.min;\r\nconst isRangeSinglePoint = (a:DataRange) => a.max === a.min;\r\n\r\nexport class AxisY extends Sg.CanvasBox {\r\n  // Number of digits axis will be expected to show as a data legend\r\n  private _maxDigits = 1;\r\n\r\n  seriesToShow:string|undefined;\r\n  paddingPx = 2;\r\n  colour?:string;\r\n  \r\n  lastRange:DataRange;\r\n  lastPlotAreaHeight = 0;\r\n\r\n  constructor(private plot:Plot) {\r\n    super(plot, plot.canvasEl, `AxisY`);\r\n    this.lastRange = {min:0,max:0};\r\n  }\r\n\r\n  clear() {\r\n    this.lastRange = {min:0,max:0};\r\n    this.lastPlotAreaHeight = 0;\r\n  }\r\n\r\n  protected measurePreflight(): void {\r\n    const series = this.getSeries();\r\n    if (series !== undefined && !isRangeEqual(series.visualRange, this.lastRange)) {\r\n      this._needsLayout = true;\r\n      this.needsDrawing = true;\r\n    }\r\n  }\r\n\r\n  protected onNotify(msg: string, source: Sg.Box): void {\r\n    const pa = this.plot.plotArea;\r\n    if (msg === `measureApplied` && source === pa) {\r\n      if (pa.visual.height !== this.lastPlotAreaHeight) {\r\n        this.lastPlotAreaHeight = pa.visual.height;\r\n        this.needsDrawing = true;  \r\n      }\r\n    }  \r\n  }\r\n\r\n  protected measureSelf(opts: Sg.MeasureState): Rects.RectPositioned {\r\n    //this.debugLog(`measureSelf. needsLayout: ${this._needsLayout} needsDrawing: ${this.needsDrawing}`);\r\n    \r\n    const copts = opts as Sg.CanvasMeasureState;\r\n    const paddingPx = this.paddingPx;\r\n    let width = this.plot.axisWidth + paddingPx;\r\n\r\n    const series = this.getSeries();\r\n    if (series !== undefined) {\r\n      const r = series.visualRange;\r\n      this._maxDigits = Math.ceil(r.max).toString().length + series.precision + 1;\r\n\r\n      const textToMeasure = `9`.repeat(this._maxDigits);\r\n      width += textWidth(copts.ctx, textToMeasure, paddingPx*2);\r\n    }\r\n    const w = opts.resolveToPx(this.desiredSize?.width, width);\r\n    return {\r\n      x:0,\r\n      y:0,\r\n      width: w,\r\n      height: opts.bounds.height\r\n    }\r\n  }\r\n\r\n  protected drawSelf(ctx: CanvasRenderingContext2D): void {\r\n    const s = this.getSeries();\r\n    if (s !== undefined) this.seriesAxis(s, ctx);\r\n    else {\r\n      if (this.seriesToShow === undefined) return;\r\n      console.warn(`Plot AxisY series '${this.seriesToShow}' is missing.`);\r\n    }  \r\n  }\r\n\r\n  getSeries():Series|undefined {\r\n    if (this.seriesToShow === undefined) {\r\n      // Pick first series\r\n      return this.plot.seriesArray()[0];\r\n    } else {\r\n      // Try designated series name\r\n      return this.plot.series.get(this.seriesToShow);\r\n    }\r\n  }\r\n\r\n  seriesAxis(series:Series, ctx:CanvasRenderingContext2D) {\r\n    const plot = this.plot;\r\n    const plotArea = plot.plotArea;\r\n    const v = this.visual;\r\n    const paddingPx = this.paddingPx;\r\n    const r = series.visualRange;\r\n    const width = plot.axisWidth;\r\n\r\n    const colour = this.colour ?? plot.axisColour;\r\n    ctx.strokeStyle = colour;\r\n    ctx.fillStyle = colour;\r\n\r\n    if (Number.isNaN(r.min)  && Number.isNaN(r.max)) return; // Empty\r\n    this.lastRange = r;\r\n    ctx.clearRect(0,0,v.width, v.height);\r\n \r\n    ctx.beginPath();\r\n    ctx.lineWidth = width;    \r\n    const lineX = v.width - width/2;\r\n    ctx.moveTo(lineX, plotArea.paddingPx + (width));\r\n    ctx.lineTo(lineX, plotArea.visual.height + width);\r\n    ctx.stroke();\r\n\r\n    ctx.textBaseline = `top`;\r\n    const fromRight = v.width - (paddingPx *4);\r\n\r\n    if (isRangeSinglePoint(r)) {\r\n      drawText(ctx, series.formatValue(r.max), size => [\r\n        fromRight-size.width, \r\n        plotArea.computeY(series, r.max) - (paddingPx*4)\r\n      ]);\r\n    } else {\r\n      // Draw min/max data labels\r\n      drawText(ctx, series.formatValue(r.max), size => [\r\n        fromRight-size.width, \r\n        plotArea.computeY(series, r.max) + (width/2)\r\n      ]);\r\n      drawText(ctx, series.formatValue(r.min), size => [\r\n        fromRight-size.width,\r\n        plotArea.computeY(series, r.min) - 5\r\n      ]);\r\n    }\r\n  }\r\n}\r\n\r\nconst drawText = (ctx:CanvasRenderingContext2D, text:string, position:(size:TextMetrics) => [x:number,y:number]) => {\r\n  const size = ctx.measureText(text);\r\n  const xy = position(size);\r\n  ctx.fillText(text, xy[0], xy[1]);\r\n}\r\n\r\n/**\r\n * Canvas-based data plotter.\r\n * \r\n * ```\r\n * const p = new Plot(document.getElementById(`myCanvas`), opts);\r\n * \r\n * // Plot 1-5 as series  test'\r\n * p.createSeries(`test`, `array`, [1,2,3,4,5]);\r\n * \r\n * // Create a streaming series, add a random number\r\n * const s = p.createSeries(`test2`, `stream`);\r\n * s.add(Math.random());\r\n * ```\r\n * \r\n * \r\n * `createSeries` returns the {@link Series} instance with properties for fine-tuning\r\n */\r\nexport class Plot extends Sg.CanvasBox {\r\n  plotArea:PlotArea;\r\n  legend:Legend;\r\n  axisX:AxisX;\r\n  axisY:AxisY;\r\n  axisColour:string;\r\n  axisWidth:number;\r\n  series:Map<string,Series>;\r\n  private _frozen = false;\r\n\r\n  defaultSeriesOpts?:SeriesOpts;\r\n  constructor(canvasEl:HTMLCanvasElement, opts:Opts = {}) {\r\n    if (canvasEl === undefined) throw new Error(`canvasEl undefined`);\r\n    super(undefined, canvasEl, `Plot`);\r\n  \r\n    if (opts.autoSize) {\r\n      parentSizeCanvas(canvasEl, evt => {\r\n        this.update(true);\r\n      });\r\n    }\r\n\r\n    this.axisColour = opts.axisColour ?? `black`;\r\n    this.axisWidth = opts.axisWidth ?? 3;\r\n    this.series = new Map();\r\n    this.plotArea = new PlotArea(this);\r\n    this.legend = new Legend(this);\r\n    this.axisX = new AxisX(this);\r\n    this.axisY = new AxisY(this);\r\n  }\r\n\r\n  clear() {\r\n    this.series = new Map();\r\n    this.plotArea.clear();\r\n    this.legend.clear();\r\n    this.axisX.clear();\r\n    this.axisY.clear();\r\n    this.update(true);\r\n  }\r\n\r\n  get frozen():boolean {\r\n    return this._frozen;\r\n  }\r\n\r\n  set frozen(v:boolean) {\r\n    this._frozen = v;\r\n    if (v) {\r\n      this.canvasEl.classList.add(`frozen`);\r\n      this.canvasEl.title = `Plot frozen. Tap to unfreeze`;\r\n    } else {\r\n      this.canvasEl.title = ``;\r\n      this.canvasEl.classList.remove(`frozen`);\r\n    } \r\n  }\r\n\r\n  seriesArray():Series[] {\r\n    return [...this.series.values()];\r\n  }\r\n\r\n  get seriesLength():number {\r\n    return this.series.size;\r\n  }\r\n\r\n  plot(o:any) {\r\n    const paths = getFieldPaths(o);\r\n    paths.forEach(p => {\r\n      let s = this.series.get(p);\r\n      if (s === undefined) {\r\n        s = this.createSeries(p, `stream`);\r\n        s.drawingStyle = `line`;\r\n      }\r\n      s.add(getFieldByPath(o, p));\r\n    })\r\n  }\r\n\r\n  createSeriesFromObject(o:any, prefix:string = ``):Series[] {\r\n    const keys = Object.keys(o);\r\n    const create = (key:string):Series[] => {\r\n      const v = o[key];\r\n      if (typeof v === `object`) {\r\n        return this.createSeriesFromObject(v, prefix + key +'.');\r\n      } else if (typeof v === `number`) {\r\n        return [this.createSeries(key, `stream`)];\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n    return keys.flatMap(create);\r\n  }\r\n\r\n  createSeries(name?:string, type:`stream`|`array` = `array`, seriesOpts?:SeriesOpts):Series {\r\n    const len = this.seriesLength;\r\n\r\n    if (name === undefined) name = `series-${len}`;\r\n    if (this.series.has(name)) throw new Error(`Series name '${name}' already in use`);\r\n \r\n    let opts:SeriesOpts = {\r\n      colour: `hsl(${len*25 % 360}, 70%,50%)`,\r\n      ...seriesOpts\r\n    };\r\n    if (this.defaultSeriesOpts) opts = {...this.defaultSeriesOpts, ...opts};\r\n    \r\n    const s = new Series(name, type, this, opts);\r\n    // if (type === `array` && initialData !== undefined) {\r\n    //   (s.source as ArrayDataSource).set(initialData);\r\n    // }\r\n    \r\n    this.series.set(name, s);\r\n    this.setReady(true, true);\r\n    this.plotArea.needsDrawing = true;\r\n    return s;\r\n  }\r\n}","/* eslint-disable */\r\nimport {Arrays} from '../collections/index.js';\r\nimport {Points} from '../geometry/index.js';\r\nimport * as Rects from '../geometry/Rect.js';\r\nimport {hue as randomHue} from  '../Random.js';\r\n\r\nexport type Measurement = {\r\n  size: Rects.Rect|Rects.RectPositioned\r\n  ref: Box\r\n  children: Array<Measurement|undefined>\r\n}\r\n\r\nexport type PxUnit = {\r\n  value: number;\r\n  type: `px`;\r\n}\r\n\r\nexport type BoxUnit = PxUnit;\r\n\r\nexport type BoxRect = {\r\n  x?: BoxUnit\r\n  y?: BoxUnit\r\n  width?: BoxUnit\r\n  height?: BoxUnit \r\n}\r\n\r\nconst unitIsEqual = (a:BoxUnit, b:BoxUnit):boolean => {\r\n  if (a.type ===`px` && b.type === `px`) {\r\n    return (a.value === b.value)\r\n  }\r\n  return false;\r\n}\r\n\r\nconst boxRectIsEqual = (a:BoxRect|undefined, b:BoxRect|undefined):boolean => {\r\n  if (a === undefined && b === undefined) return true;\r\n  if (a === undefined) return false;\r\n  if (b === undefined) return false;\r\n  if (a.x && b.x) {\r\n    if (!unitIsEqual(a.x, b.x)) return false;\r\n  }\r\n  if (a.y && b.y) {\r\n    if (!unitIsEqual(a.y, b.y)) return false;\r\n  }\r\n  if (a.width && b.width) {\r\n    if (!unitIsEqual(a.width, b.width)) return false;\r\n  }\r\n  if (a.height && b.height) {\r\n    if (!unitIsEqual(a.height, b.height)) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport class MeasureState {\r\n  bounds: Rects.Rect;\r\n  pass: number;\r\n  measurements: Map<string, Measurement>;\r\n  \r\n  constructor(bounds:Rects.Rect) {\r\n    this.bounds = bounds;\r\n    this.pass = 0;\r\n    this.measurements = new Map<string, Measurement>();\r\n  }\r\n\r\n  getSize(id:string):Rects.Rect|undefined {\r\n    const s = this.measurements.get(id);\r\n    if (s === undefined) return;\r\n    if (Rects.isPlaceholder(s.size)) return;\r\n    return s.size;\r\n  }\r\n  \r\n  resolveToPx(u:BoxUnit|undefined, defaultValue:number):number {\r\n    if (u === undefined) return defaultValue; //throw new Error(`unit undefined`);\r\n    if (u.type === `px`) return u.value;\r\n    throw new Error(`Unknown unit type ${u.type}`);\r\n  }\r\n}\r\n\r\nexport abstract class Box {\r\n  visual:Rects.RectPositioned = Rects.placeholderPositioned;\r\n  private _desiredSize:BoxRect|undefined;\r\n  private _lastMeasure:Rects.RectPositioned | Rects.Rect|undefined\r\n\r\n  protected children: Box[] = [];\r\n  protected readonly _parent:Box|undefined;\r\n  private _idMap: Map<string,Box> = new Map();\r\n\r\n  debugLayout = false;\r\n  \r\n  private _visible = true;\r\n  protected _ready = true;\r\n\r\n  takesSpaceWhenInvisible = false;\r\n  needsDrawing = true;\r\n  protected _needsLayout = true;\r\n\r\n  debugHue = randomHue();\r\n  readonly id: string;\r\n  \r\n  constructor(parent:Box|undefined, id:string) {\r\n    this.id = id;\r\n    this._parent = parent;\r\n\r\n    parent?.onChildAdded(this);\r\n  }\r\n\r\n  hasChild(box:Box):boolean {\r\n    const byRef = this.children.find(c=>c === box);\r\n    const byId = this.children.find( c => c.id === box.id);\r\n    return byRef !== undefined || byId !== undefined;\r\n  }\r\n\r\n  notify(msg:string, source:Box) {\r\n    this.onNotify(msg, source);\r\n    this.children.forEach(c => c.notify(msg, source));\r\n  }\r\n\r\n  protected onNotify(msg:string, source:Box) {\r\n  \r\n  }\r\n\r\n  protected onChildAdded(child:Box) {\r\n    if (child.hasChild(this)) throw new Error(`Recursive`);\r\n    if (child === this) throw new Error(`Cannot add self as child`);\r\n    if (this.hasChild(child)) throw new Error(`Child already present`);\r\n\r\n    this.children.push(child);\r\n    this._idMap.set(child.id, child)\r\n  }\r\n\r\n  setReady(ready:boolean, includeChildren:boolean = false) {\r\n    this._ready = ready;\r\n    if (includeChildren) {\r\n      this.children.forEach(c => c.setReady(ready, includeChildren));\r\n    }\r\n  }\r\n\r\n\r\n  get visible():boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(v:boolean) {\r\n    if (this._visible === v) return;\r\n    this._visible = v;\r\n    this.onLayoutNeeded();\r\n  }\r\n\r\n  get desiredSize():BoxRect|undefined {\r\n    return this._desiredSize;\r\n  }\r\n\r\n  set desiredSize(v:BoxRect|undefined) {\r\n    if (boxRectIsEqual(v, this._desiredSize)) return;\r\n    this._desiredSize = v;\r\n    this.onLayoutNeeded();\r\n  }\r\n  \r\n  onLayoutNeeded() {\r\n    this.notifyChildLayoutNeeded();\r\n  }\r\n\r\n  private notifyChildLayoutNeeded() {\r\n    this._needsLayout = true;\r\n    this.needsDrawing = true;\r\n    if (this._parent !== undefined) {\r\n      this._parent.notifyChildLayoutNeeded();\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  get root():Box {\r\n    if (this._parent === undefined) return this;\r\n    return this._parent.root;\r\n  }\r\n\r\n  protected measurePreflight() {}\r\n\r\n  /**\r\n   * Applies measurement, returning true if size is different than before\r\n   * @param size \r\n   * @returns \r\n   */\r\n   measureApply(m:Measurement, force:boolean) {\r\n\r\n    let different = true;\r\n    this._needsLayout = false;\r\n    \r\n    if (Rects.isEqual(m.size, this.visual)) different = false;\r\n        \r\n    if (Rects.isPositioned(m.size)) {\r\n      this.visual = m.size;\r\n    } else {\r\n      this.visual = {\r\n        x: 0, y: 0,\r\n        width: m.size.width,\r\n        height: m.size.height\r\n      }\r\n    }\r\n\r\n    m.children.forEach(c => {\r\n      if (c !== undefined) c.ref.measureApply(c, force);\r\n    })\r\n    if (different || force) {\r\n      this.needsDrawing = true;\r\n      this.root.notify(`measureApplied`, this);\r\n    \r\n    }\r\n    return different;\r\n  }\r\n\r\n\r\n  debugLog(m:any) {\r\n    console.log(this.id, m);\r\n  }\r\n\r\n  measureStart(opts:MeasureState, force:boolean, parent?:Measurement):Measurement|undefined {\r\n    this.measurePreflight();\r\n\r\n    let m:Measurement = {\r\n      ref: this,\r\n      size:Rects.placeholder,\r\n      children:[]\r\n    };\r\n    opts.measurements.set(this.id, m);\r\n    \r\n    \r\n    if (!this._visible && !this.takesSpaceWhenInvisible) {\r\n      m.size = Rects.emptyPositioned;\r\n    } else {\r\n      let size = this._lastMeasure;\r\n      if (this._needsLayout || this._lastMeasure === undefined) {\r\n        size = this.measureSelf(opts, parent);\r\n        this.root.notify(`measured`, this);\r\n      }\r\n      if (size === undefined) return;\r\n      m.size = size;\r\n      this._lastMeasure = size;\r\n    }\r\n\r\n    m.children = this.children.map(c => c.measureStart(opts, force, m));\r\n    if (Arrays.without(m.children, undefined).length < this.children.length) {\r\n      return undefined; // One of the children did not resolve\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n  protected measureSelf(opts:MeasureState, parent?:Measurement):Rects.RectPositioned | Rects.Rect|undefined {\r\n    let size = Rects.placeholderPositioned;\r\n    if (parent) {\r\n      // Use parent size\r\n      if (parent.size) {\r\n        size = {\r\n          x: 0, y: 0,\r\n          width: parent.size.width,\r\n          height: parent.size.height \r\n        }\r\n      }\r\n    } else {\r\n      // Use canvas size\r\n      size = {\r\n        x:0, y:0,\r\n        width: opts.bounds.width,\r\n        height: opts.bounds.height\r\n      }\r\n    }\r\n    if (Rects.isPlaceholder(size)) return;\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Called when update() is called\r\n   * @param force \r\n   */\r\n  protected abstract updateBegin(force:boolean):MeasureState;\r\n  \r\n  protected updateDone(state:MeasureState, force:boolean):void {\r\n    this.onUpdateDone(state, force);\r\n    this.children.forEach(c=>c.updateDone(state, force));\r\n  }\r\n\r\n  abstract onUpdateDone(state:MeasureState, force:boolean):void;\r\n\r\n  update(force = false) {\r\n    const state = this.updateBegin(force);\r\n    let attempts = 5;\r\n    let applied = false;\r\n\r\n    while (attempts--) {\r\n      const m = this.measureStart(state, force);\r\n      if (m !== undefined) {\r\n        // Apply measurements\r\n        this.measureApply(m, force);\r\n        if (!this._ready) return;\r\n        applied = true;\r\n        //this.onMeasurementApplied(sizeChanged, force;\r\n        //return;\r\n      }\r\n    }\r\n\r\n    this.updateDone( state, force);\r\n    if (!applied) console.warn(`Ran out of measurement attempts`);\r\n  }\r\n}\r\n\r\nexport class CanvasMeasureState extends MeasureState {\r\n  readonly ctx:CanvasRenderingContext2D;\r\n  constructor(bounds:Rects.Rect, ctx:CanvasRenderingContext2D) {\r\n    super(bounds);\r\n    this.ctx = ctx;\r\n  }\r\n}\r\n\r\n\r\nexport class CanvasBox extends Box {\r\n  readonly canvasEl:HTMLCanvasElement;\r\n\r\n  constructor(parent:CanvasBox|undefined, canvasEl:HTMLCanvasElement, id:string) {\r\n    super(parent, id);\r\n    if (canvasEl === undefined) throw new Error(`canvasEl undefined`);\r\n    if (canvasEl === null) throw new Error(`canvasEl null`);\r\n    this.canvasEl = canvasEl;\r\n\r\n    if (parent === undefined) this.designateRoot();\r\n  }\r\n\r\n  private designateRoot() {\r\n    this.canvasEl.addEventListener(`pointermove`, evt => {\r\n      const p = {x:evt.offsetX, y:evt.offsetY};\r\n      this.notifyPointerMove(p);\r\n    });\r\n\r\n    this.canvasEl.addEventListener(`pointerleave`, evt => {\r\n      this.notifyPointerLeave();    \r\n    })\r\n\r\n    this.canvasEl.addEventListener(`click`, evt => {\r\n      const p = {x:evt.offsetX, y:evt.offsetY};\r\n      this.notifyClick(p);\r\n    })\r\n  }\r\n\r\n  protected onClick(p:Points.Point) {}\r\n\r\n  private notifyClick(p:Points.Point) {\r\n    if (Rects.isPlaceholder(this.visual)) return;\r\n    if (Rects.intersectsPoint(this.visual, p)) {\r\n      const pp = Points.subtract(p, this.visual.x, this.visual.y);\r\n      this.onClick(pp);\r\n      this.children.forEach(c=> (c as CanvasBox).notifyClick(pp));\r\n    }\r\n  }\r\n\r\n  private notifyPointerLeave() {\r\n    this.onPointerLeave();\r\n    this.children.forEach(c=>(c as CanvasBox).notifyPointerLeave());\r\n  }\r\n\r\n  private notifyPointerMove(p:Points.Point) {\r\n    if (Rects.isPlaceholder(this.visual)) return;\r\n    if (Rects.intersectsPoint(this.visual, p)) {\r\n      const pp = Points.subtract(p, this.visual.x, this.visual.y);\r\n      this.onPointerMove(pp);\r\n      this.children.forEach(c=> (c as CanvasBox).notifyPointerMove(pp));\r\n    }\r\n  };\r\n\r\n  protected onPointerLeave() {\r\n\r\n  }\r\n\r\n  protected onPointerMove(p:Points.Point) {\r\n\r\n  }\r\n\r\n  protected updateBegin():MeasureState {\r\n    const ctx = this.canvasEl.getContext(`2d`);\r\n    if (ctx === null) throw new Error(`Context unavailable`);\r\n\r\n    const s = this.canvasEl.getBoundingClientRect();\r\n\r\n    return new CanvasMeasureState({\r\n      width: s.width,\r\n      height: s.height\r\n    }, ctx);\r\n  }\r\n\r\n  override onUpdateDone(state: MeasureState, force: boolean) {\r\n    if (!this.needsDrawing && !force) return;\r\n    \r\n    const ctx = this.canvasEl.getContext(`2d`);\r\n    if (ctx === null) throw new Error(`Context unavailable`);\r\n\r\n    ctx.save();\r\n    ctx.translate(this.visual.x, this.visual.y);\r\n    \r\n    const v = this.visual;\r\n    \r\n    if (this.debugLayout) {\r\n      \r\n      //ctx.clearRect(0,0,v.width,v.height);\r\n      \r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = `hsl(${this.debugHue}, 100%, 50%)`;\r\n\r\n      //ctx.fillStyle = ctx.strokeStyle;\r\n      //ctx.fillRect(0,0,v.width,v.height);\r\n      \r\n      ctx.strokeRect(0, 0, v.width, v.height);\r\n\r\n      ctx.fillStyle = ctx.strokeStyle;\r\n      ctx.fillText(this.id, 10, 10, v.width);\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(0,0);\r\n      ctx.lineTo(v.width, v.height);\r\n      ctx.stroke();\r\n    }\r\n\r\n    this.drawSelf(ctx);\r\n\r\n    this.needsDrawing = false;\r\n    ctx.restore();\r\n  }\r\n\r\n  protected drawSelf(ctx:CanvasRenderingContext2D):void {\r\n\r\n  }\r\n}","/**\r\n * Manage a set of colours. Uses CSS variables as a fallback if colour is not added\r\n *\r\n */\r\nexport type Palette = {\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  setElementBase(el:Element):void\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  has(key:string):boolean\r\n\r\n  /**\r\n   * Returns a colour by name. \r\n   * \r\n   * If the colour is not found:\r\n   *  1. Try to use a CSS variable `--key`, or\r\n   *  2. The next fallback colour is used (array cycles)\r\n   *\r\n   * @param key\r\n   * @returns\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  get(key:string, fallback?:string):string\r\n\r\n  /**\r\n   * Gets a colour by key, adding and returning fallback if not present\r\n   * @param key Key of colour\r\n   * @param fallback Fallback colour if key is not found\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  getOrAdd(key: string, fallback?:string):string\r\n\r\n  /**\r\n   * Adds a colour with a given key\r\n   *\r\n   * @param key\r\n   * @param colour\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  add(key:string, value:string):void\r\n\r\n  alias(from:string, to:string):void\r\n};\r\n\r\nexport const create = (fallbacks?:readonly string[]):Palette => new PaletteImpl(fallbacks);\r\n\r\nclass PaletteImpl {\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #store:Map<string, string> = new Map();\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #aliases:Map<string, string> = new Map();\r\n\r\n  readonly fallbacks:readonly string[];\r\n  #lastFallback = 0;\r\n\r\n  #elementBase:Element;\r\n\r\n  constructor(fallbacks?:readonly string[]) {\r\n    if (fallbacks !== undefined) this.fallbacks = fallbacks;\r\n    else this.fallbacks = [`red`, `blue`, `green`, `orange`];\r\n    this.#elementBase = document.body;\r\n  }\r\n\r\n  setElementBase(el:Element) {\r\n    this.#elementBase = el;\r\n  }\r\n\r\n  add(key:string, colour:string) {\r\n    this.#store.set(key, colour);\r\n  }\r\n\r\n  alias(from:string, to:string) {\r\n    this.#aliases.set(from, to);\r\n  }\r\n\r\n  get(key:string, fallback?:string):string {\r\n    const alias =  this.#aliases.get(key);\r\n    if (alias !== undefined) key = alias;\r\n  \r\n    const c = this.#store.get(key);\r\n    if (c !== undefined) return c;\r\n\r\n    const varName = `--` + key;\r\n    // eslint-disable-next-line functional/no-let\r\n    let fromCss = getComputedStyle(this.#elementBase).getPropertyValue(varName).trim();\r\n\r\n    // Not found\r\n    if (fromCss === undefined || fromCss.length === 0) {\r\n      if (fallback !== undefined) return fallback;\r\n      fromCss = this.fallbacks[this.#lastFallback];\r\n      this.#lastFallback++;\r\n      if (this.#lastFallback === this.fallbacks.length) this.#lastFallback = 0;\r\n    }\r\n    return fromCss;\r\n  }\r\n\r\n  getOrAdd(key:string, fallback?:string):string {\r\n    if (this.has(key)) return this.get(key);\r\n    const c = this.get(key, fallback);\r\n    this.add(key, c);\r\n    return c;\r\n  }\r\n\r\n  has(key:string):boolean {\r\n    return this.#store.has(key);\r\n  }\r\n}\r\n\r\n","\r\nexport * from './Log.js';\r\n\r\nexport * from './DomRx.js';\r\nexport * from './Util.js';\r\n\r\n/**\r\n * Functions for working with DOM elements\r\n */\r\nexport * as Forms from './Forms.js';\r\n\r\nexport * from './PointerVisualise.js';\r\n\r\nexport * from './ErrorHandler.js';","export const addShadowCss = (parentEl:HTMLElement, styles:string):ShadowRoot => {\r\n  const styleEl = document.createElement(`style`);\r\n  styleEl.textContent = styles;\r\n\r\n  let shadowRoot;\r\n  if (parentEl.shadowRoot) {\r\n    shadowRoot = parentEl.shadowRoot;\r\n    shadowRoot.innerHTML = ``;\r\n  } else {\r\n    shadowRoot = parentEl.attachShadow({ mode: `open` });\r\n  }\r\n  shadowRoot.appendChild(styleEl);\r\n  return shadowRoot;\r\n};\r\n","import {resolveEl} from \"./Util.js\";\r\nimport {addShadowCss} from \"./ShadowDom.js\";\r\n\r\nexport type LogOpts = {\r\n  readonly reverse?:boolean\r\n  readonly capacity?: number\r\n  readonly timestamp?: boolean\r\n  readonly collapseDuplicates?:boolean\r\n  readonly monospaced?:boolean\r\n  readonly minIntervalMs?:number\r\n  readonly css?:string\r\n}\r\n\r\nexport type Log = Readonly<{\r\n  clear():void\r\n  error(msgOrError:string|Error|unknown):void\r\n  log(msg?:string|object|number):HTMLElement|undefined\r\n  append(el:HTMLElement):void\r\n  dispose():void\r\n  readonly isEmpty:boolean\r\n}>\r\n\r\n/**\r\n * Allows writing to a DOM element in console.log style. Element grows in size, so use\r\n * something like `overflow-y: scroll` on its parent\r\n * \r\n * ```\r\n * const l = log(`#dataStream`); // Assumes HTML element with id `dataStream` exists \r\n * l.log(`Hi`);\r\n * l.log(); // Displays a horizontal rule\r\n * \r\n * const l = log(document.getElementById(`dataStream`), {\r\n *  timestamp: true,\r\n *  truncateEntries: 20\r\n * });\r\n * l.log(`Hi`);\r\n * l.error(`Some error`); // Adds class `error` to line\r\n * ```\r\n * \r\n * For logging high-throughput streams:\r\n * ```\r\n * // Silently drop log if it was less than 5ms since the last\r\n * const l = log(`#dataStream`, { minIntervalMs: 5 });\r\n * \r\n * // Only the last 100 entries are kept\r\n * const l = log(`#dataStream`, { capacity: 100 });\r\n * ```\r\n *\r\n * @param {(HTMLElement | string | undefined)} elOrId Element or id of element\r\n * @param {LogOpts} opts\r\n * @returns {Log}\r\n */\r\nexport const log = (domQueryOrEl: HTMLElement | string, opts: LogOpts = {}):Log => {\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  const {capacity = 0, monospaced = true, timestamp = false, collapseDuplicates = true, css =  `` } = opts;\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let added = 0;\r\n  // eslint-disable-next-line functional/no-let\r\n  let lastLog:string|undefined;\r\n  // eslint-disable-next-line functional/no-let\r\n  let lastLogRepeats = 0;\r\n\r\n  const parentEl = resolveEl<HTMLElement>(domQueryOrEl);\r\n  const fontFamily = monospaced ? `Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", Monaco, \"Courier New\", Courier, monospace` : `normal`;\r\n  const shadowRoot = addShadowCss(parentEl, `\r\n  .log {\r\n    font-family: ${fontFamily};\r\n    background-color: var(--code-background-color);\r\n    padding: var(--padding1, 0.2em);\r\n    overflow-y: auto;\r\n    height:100%;\r\n  }\r\n  .timestamp {\r\n    margin-right: 0.5em;\r\n    opacity: 0.5;\r\n    font-size: 70%;\r\n    align-self: center;\r\n  }\r\n  .line {\r\n    display: flex;\r\n    padding-bottom: 0.1em;\r\n    padding-top: 0.1em;\r\n  }\r\n  .line:hover {\r\n  \r\n  }\r\n  .error {\r\n    color: red;\r\n  }\r\n  .badge {\r\n    border: 1px solid currentColor;\r\n    align-self: center;\r\n    font-size: 70%;\r\n    padding-left: 0.2em;\r\n    padding-right: 0.2em;\r\n    border-radius: 1em;\r\n    margin-left: 0.5em;\r\n    margin-right: 0.5em;\r\n  }\r\n  .msg {\r\n    flex: 1;\r\n    word-break: break-all;\r\n\r\n  }\r\n  ${css}\r\n  `);\r\n  \r\n  const el = document.createElement(`div`);\r\n  // eslint-disable-next-line functional/immutable-data\r\n  el.className = `log`;\r\n  shadowRoot.append(el);\r\n\r\n  const error = (msgOrError: string | Error | unknown) => {\r\n    const line = document.createElement(`div`);\r\n    \r\n    if (typeof msgOrError === `string`) {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerHTML = msgOrError;\r\n    } else if (msgOrError instanceof Error) {\r\n      const stack = msgOrError.stack;\r\n      if (stack === undefined) {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        line.innerHTML = msgOrError.toString();\r\n      } else {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        line.innerHTML = stack.toString();\r\n      }\r\n    } else {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerHTML = msgOrError as string;\r\n    }\r\n    line.classList.add(`error`);\r\n    append(line);\r\n    lastLog = undefined;\r\n    lastLogRepeats = 0;\r\n  };\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let lastLogTime = 0;\r\n\r\n  const log = (whatToLog: unknown = ``):HTMLElement|undefined => {\r\n    // eslint-disable-next-line functional/no-let\r\n    let msg:string|undefined;\r\n    const interval = window.performance.now() - lastLogTime;\r\n    if (opts.minIntervalMs && interval < opts.minIntervalMs) return;\r\n    lastLogTime = window.performance.now();\r\n\r\n    if (typeof whatToLog === `object`) {\r\n      msg = JSON.stringify(whatToLog);\r\n    } else if (whatToLog === undefined) {\r\n      msg = `(undefined)`;\r\n    } else if (whatToLog === null) {\r\n      msg = `(null)`;\r\n    } else if (typeof whatToLog === `number`) {\r\n      if (Number.isNaN(msg)) msg = `(NaN)`;\r\n      msg = whatToLog.toString();\r\n    } else {\r\n      msg = whatToLog as string;\r\n    }\r\n   \r\n    if (msg.length === 0) {\r\n      const rule = document.createElement(`hr`);\r\n      lastLog = undefined;\r\n      append(rule);\r\n    } else if (msg === lastLog && collapseDuplicates) {\r\n      const lastEl = el.firstElementChild as HTMLElement;\r\n      // eslint-disable-next-line functional/no-let\r\n      let lastBadge = lastEl.querySelector(`.badge`);\r\n      if (lastBadge === null) {\r\n        lastBadge = document.createElement(`div`);\r\n        // eslint-disable-next-line functional/immutable-data\r\n        lastBadge.className = `badge`;\r\n        lastEl.insertAdjacentElement(`beforeend`, lastBadge);\r\n      }\r\n      if (lastEl !== null) {\r\n        // eslint-disable-next-line functional/immutable-data\r\n        lastBadge.textContent = (++lastLogRepeats).toString();\r\n      }\r\n      return lastEl;\r\n    } else {\r\n      const line = document.createElement(`div`);\r\n      // eslint-disable-next-line functional/immutable-data\r\n      line.innerText = msg;\r\n      append(line);\r\n      lastLog = msg;\r\n      return line;\r\n    }\r\n  };\r\n\r\n  const append = (line: HTMLElement) => {\r\n    if (timestamp) {\r\n      const wrapper = document.createElement(`div`);\r\n      const timestamp = document.createElement(`div`);\r\n      // eslint-disable-next-line functional/immutable-data\r\n      timestamp.className = `timestamp`;\r\n      // eslint-disable-next-line functional/immutable-data\r\n      timestamp.innerText = new Date().toLocaleTimeString();\r\n      wrapper.append(timestamp, line);\r\n      line.classList.add(`msg`);\r\n      wrapper.classList.add(`line`);\r\n      line = wrapper;\r\n    } else {\r\n      line.classList.add(`line`, `msg`);\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      el.appendChild(line);\r\n    } else {\r\n      el.insertBefore(line, el.firstChild);\r\n    }\r\n\r\n    if (capacity > 0 && (++added > capacity * 2)) {\r\n      // eslint-disable-next-line functional/no-loop-statement\r\n      while (added > capacity) {\r\n        el.lastChild?.remove();\r\n        added--;\r\n      }\r\n    }\r\n\r\n    if (opts.reverse) {\r\n      // Scroll to bottom\r\n      //eslint-disable-next-line functional/immutable-data\r\n      el.scrollTop = el.scrollHeight;\r\n    }\r\n    lastLogRepeats = 0;\r\n  };\r\n\r\n  const clear = () => {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    el.innerHTML = ``;\r\n    lastLog = undefined;\r\n    lastLogRepeats = 0;\r\n    added = 0;\r\n  };\r\n\r\n  const dispose = () => {\r\n    el.remove();\r\n  };\r\n\r\n  return {\r\n    error, log, append, clear, dispose,\r\n    get isEmpty() {\r\n      return added === 0;\r\n    }\r\n  };\r\n};","import {fromEvent, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {resolveEl} from './Util.js';\r\n\r\nexport type PluckOpts =  {\r\n  readonly pluck: string\r\n}\r\n\r\nexport type TransformOpts = {\r\n  transform(ev:Event):any\r\n}\r\n\r\n/**\r\n * Responsive value\r\n */\r\n// eslint-disable-next-line functional/no-mixed-type\r\nexport type Rx<V> = {\r\n  /**\r\n   * Last value\r\n   */\r\n  readonly value: V,\r\n  /**\r\n   * Clears last value\r\n   */\r\n  readonly clear: () => void\r\n}\r\n\r\nexport type DomRxOpts = PluckOpts | TransformOpts;\r\n\r\n/**\r\n * Keeps track of last event data\r\n * \r\n * ```js\r\n * const pointer = rx(`#myDiv`, `pointermove`).value;\r\n * \r\n * if (pointer.clientX > ...)\r\n * ``` \r\n * \r\n * Pluck a field:\r\n * ```js\r\n * const pointerX = rx(`#myDiv`, `pointermove`, {pluck: `clientX`}).value;\r\n * \r\n * if (pointerX > ...)\r\n * ```\r\n * @template V Event type\r\n * @param opts\r\n * @return\r\n */\r\nexport const rx = <V>(elOrQuery:HTMLElement|string, event:string, opts?:DomRxOpts):Rx<V> => {\r\n  const el = resolveEl<HTMLElement>(elOrQuery);\r\n  const ev = fromEvent(el, event);\r\n  // @ts-ignore\r\n  const value:V = {};\r\n\r\n  const clear = () => {\r\n    const keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\r\n      delete (value as any)[key];\r\n    });\r\n  };\r\n\r\n  const setup = (sub:Observable<Event>):Rx<V> => {\r\n    sub.subscribe({\r\n      next: (newValue) => {\r\n        // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\r\n        Object.assign(value, newValue);\r\n      }\r\n    });\r\n    return {\r\n      value, clear\r\n    };\r\n  };\r\n\r\n  if (opts === undefined) return setup(ev);\r\n  \r\n  if ((opts as PluckOpts).pluck) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return setup(ev.pipe(map(x => (x as any)[(opts as PluckOpts).pluck])));\r\n  } else if ((opts as TransformOpts).transform) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return setup(ev.pipe(map(x => (opts as TransformOpts).transform(x))));\r\n  }\r\n\r\n  return setup(ev);\r\n};","import * as Points from \"../geometry/Point.js\";\r\nimport * as Line from \"../geometry/Line.js\";\r\nimport {Timestamped, ObjectTracker, TrackedValueMap, TrackedValueOpts as TrackOpts} from \"./TrackedValue.js\";\r\n\r\nexport type PointSeenInfo = {\r\n  readonly distance:number\r\n  readonly centroid:Points.Point\r\n  readonly angle:number\r\n  readonly speed:number\r\n  readonly values:readonly Points.Point[]\r\n  /**\r\n   * Average of all points seen\r\n   */\r\n  readonly average:Points.Point\r\n};\r\n\r\n\r\nexport class PointTracker extends ObjectTracker<Points.Point> {\r\n  /**\r\n   * Function that yields the relation from initial point\r\n   */\r\n  relation:Points.PointRelation|undefined;\r\n  \r\n  /**\r\n   * Info on last seen point\r\n   */\r\n  lastInfo:PointSeenInfo|undefined;\r\n\r\n  constructor(readonly id:string, opts:TrackOpts) {\r\n    super(id, opts);\r\n  }\r\n\r\n  /**\r\n   * Returns the last x coord\r\n   */\r\n  get x() {\r\n    return this.last.x;\r\n  }\r\n\r\n  /**\r\n   * Returns the last y coord\r\n   */\r\n  get y() {\r\n    return this.last.y;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onReset(): void {\r\n    super.onReset();\r\n    this.lastInfo = undefined;\r\n    this.relation = undefined;\r\n  }\r\n\r\n  /**\r\n   * Tracks a point, returning information on the relation between it\r\n   * and the start point.\r\n   * \r\n   * If multiple points are given, it's relation to the last point that is returned.\r\n   * @param p Point\r\n   */\r\n  seen(...p:Points.Point[]|Timestamped<Points.Point>[]):PointSeenInfo {\r\n    const currentLast = this.last;\r\n    super.seen(...p);\r\n    const newLast = this.last;\r\n\r\n    if (this.relation === undefined) {\r\n      this.relation = Points.relation(newLast);\r\n    }\r\n\r\n    // Get basic geometric relation from start to the last provided point\r\n    const rel = this.relation(newLast);\r\n    const r:PointSeenInfo = {\r\n      ...rel,\r\n      values: this.values,\r\n      speed: this.values.length < 2 ? 0 : Line.length(currentLast, newLast) / (newLast.at - currentLast.at),\r\n    };\r\n    this.lastInfo = r;\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Returns a polyline representation of stored points.\r\n   * Returns an empty array if points were not saved, or there's only one.\r\n   */\r\n  get line():Line.PolyLine {\r\n    if (this.values.length === 1) return [];\r\n    return Line.joinPointsToLines(...this.values);\r\n  }\r\n\r\n  /**\r\n   * Returns distance from latest point to initial point.\r\n   * If there are less than two points, zero is returned.\r\n   * @returns Distance\r\n   */\r\n  distanceFromStart():number {\r\n    const initial = this.initial;\r\n    if (this.values.length >= 2 && initial !== undefined) {\r\n      return Points.distance(initial, this.last);\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  /**\r\n   * Returns angle (in radians) from latest point to the initial point\r\n   * If there are less than two points, undefined is return.\r\n   * @returns Angle in radians\r\n   */\r\n  angleFromStart():number|undefined {\r\n    const initial = this.initial;\r\n    if (initial !== undefined && this.values.length > 2) {\r\n      return Points.angle(initial, this.last);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the total length of accumulated points.\r\n   * Returns 0 if points were not saved, or there's only one\r\n   */\r\n  get length():number {\r\n    if (this.values.length === 1) return 0;\r\n    const l = this.line;\r\n    return Line.length(l);\r\n  }\r\n}\r\n\r\n\r\nexport class TrackedPointMap extends TrackedValueMap<Points.Point> {\r\n  constructor(opts:TrackOpts) {\r\n    super((key, start) => {\r\n      if (start === undefined) throw new Error(`Requires start point`);\r\n      const p = new PointTracker(key, opts);\r\n      p.seen(start);\r\n      return p;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Track several named points. Call `seen()` to track a point. Mutable.\r\n * \r\n * Basic usage\r\n * ```js\r\n * const pt = pointsTracker();\r\n * \r\n * // Track a point under a given id\r\n * document.addEventListener(`pointermove`, e => {\r\n *  const info = await pt.seen(e.pointerId, { x: e.x, y: e.y });\r\n *  // Yields some info on relation of the point to initial value\r\n * });\r\n * ```\r\n * \r\n * Do something with last values for all points\r\n * ```js\r\n * const c = Points.centroid(...Array.from(pointers.last()));\r\n * ```\r\n * \r\n * More functions...\r\n * ```js\r\n * pt.size; // How many named points are being tracked\r\n * pt.delete(id);  // Delete named point\r\n * pt.reset();\r\n * ```\r\n * \r\n * Accessors:\r\n * ```js\r\n * pt.get(id);  // Get named point (or _undefined_)\r\n * pt.has(id); // Returns true if id exists\r\n * pt.trackedByAge(); // Returns array of tracked points, sorted by age\r\n * pt.valuesByAge(); // Returns array of tracked values, sorted by age\r\n * ```\r\n \r\n* Iterators:\r\n * ```js\r\n * pt.values(); // Tracked values\r\n * pt.ids(); // Iterator over ids\r\n * pt.last(); // Last received value for each point\r\n * pt.initialValues(); // Iterator over initial values for each point\r\n * ```\r\n * Options:\r\n * * `storeIntermediate`: if true, all points are stored internally\r\n * * `resetAfterSamples`: If set above 0, it will automatically reset after the given number of samples have been seen\r\n * @param opts \r\n * @returns \r\n */\r\nexport const pointsTracker = (opts:TrackOpts) => new TrackedPointMap(opts);\r\n\r\n/**\r\n * A tracked point. Create via {@link pointTracker}. Mutable. Useful for monitoring how\r\n * it changes over time. Eg. when a pointerdown event happens, to record the start position and then\r\n * track the pointer as it moves until pointerup.\r\n * \r\n * ```js\r\n * // Create a tracker\r\n * const t = pointTracker(`pointer-0`);\r\n * \r\n * // ...and later, tell it when a point is seen\r\n * const nfo = t.seen({x: evt.x, y:evt.y});\r\n * // nfo gives us some details on the relation between the seen point, the start, and points in-between\r\n * // nfo.angle, nfo.centroid, nfo.speed etc.\r\n * ```\r\n * \r\n * Compute based on last seen point\r\n * ```js\r\n * t.angleFromStart();\r\n * t.distanceFromStart();\r\n * t.x / t.y\r\n * t.length; // Total length of accumulated points\r\n * t.elapsed; // Total duration since start\r\n * t.lastInfo; // The PointSeenInfo for last seen point\r\n * ```\r\n * \r\n * Housekeeping\r\n * ```js\r\n * t.reset(); // Reset tracker\r\n * ```\r\n */\r\nexport const pointTracker = (id?:string, opts:TrackOpts = {}) => new PointTracker(id ?? ``, opts);","/* eslint-disable functional/immutable-data */\r\nimport {PointSeenInfo, pointsTracker} from \"../data/PointTracker.js\";\r\nimport {fullSizeElement, resolveEl} from \"./Util.js\";\r\nimport * as Svg from \"../visual/Svg.js\";\r\n\r\nexport type Opts = {\r\n  readonly touchRadius?:number\r\n  readonly mouseRadius?:number\r\n  readonly trace?:boolean\r\n  readonly hue?:number\r\n}\r\n\r\n/**\r\n * Visualises pointer events within a given element.\r\n * \r\n * ```js\r\n * // Show pointer events for whole document\r\n * pointerVis(document);\r\n * ```\r\n * \r\n * Note you may need to set the following CSS properties on the target element:\r\n * \r\n * ```css\r\n * touch-action: none;\r\n * user-select: none;\r\n * overscroll-behavior: none;\r\n * ```\r\n * \r\n * Options\r\n * * touchRadius/mouseRadius: size of circle for these kinds of pointer events\r\n * * trace: if true, intermediate events are captured and displayed\r\n * @param elOrQuery \r\n * @param opts \r\n */\r\nexport const pointerVisualise = (elOrQuery: HTMLElement | string, opts:Opts = {}) => {\r\n  const touchRadius = opts.touchRadius ?? 45;\r\n  const mouseRadius = opts.touchRadius ?? 20;\r\n  const trace = opts.trace ?? false;\r\n  const hue = opts.hue ?? 100;\r\n\r\n  const startFillStyle =`hsla(${hue}, 100%, 10%, 10%)`;\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let currentHue = hue;\r\n\r\n  const el = resolveEl(elOrQuery);\r\n  const tracker = pointsTracker({\r\n    storeIntermediate:trace\r\n  });  \r\n\r\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const svg = (document.createElementNS(`http://www.w3.org/2000/svg`, `svg`) as any) as SVGElement & HTMLElement;\r\n  svg.id = `pointerVis`;\r\n  svg.style.zIndex = `-1000`;\r\n  svg.style.position = `fixed`;\r\n  svg.style.top = `0`;\r\n  svg.style.left = `0`;\r\n  svg.style.width = `100%`;\r\n  svg.style.height = `100%`;\r\n  svg.style.boxSizing = `border-box`;\r\n  svg.style.border = `3px solid red`;\r\n  svg.style.pointerEvents = `none`;\r\n  svg.style.touchAction = `none`;\r\n\r\n  fullSizeElement(svg);\r\n  //eslint-disable-next-line functional/no-let\r\n  let pointerCount = 0;\r\n\r\n  const lostPointer = async (ev:PointerEvent) => {\r\n    const id = ev.pointerId.toString();\r\n    tracker.delete(id);\r\n    currentHue = hue;\r\n    svg.querySelector(`#pv-start-${id}`)?.remove();\r\n\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let i=0;i<pointerCount+10;i++) {\r\n      svg.querySelector(`#pv-progress-${id}-${i}`)?.remove();\r\n    }\r\n    pointerCount = 0;\r\n\r\n  };\r\n\r\n  const trackPointer = async (ev:PointerEvent) => {\r\n    const id = ev.pointerId.toString();\r\n    const pt = {x: ev.x, y: ev.y};\r\n    const type = ev.pointerType;\r\n    if (ev.type ===`pointermove` && !tracker.has(id)) {\r\n      return;\r\n    }\r\n    const info = await tracker.seen(id, pt) as PointSeenInfo;\r\n\r\n    if (info.values.length === 1) {\r\n      const el = Svg.Elements.circle({...info.values[0], radius: (type === `touch` ? touchRadius : mouseRadius)}, svg, {\r\n        fillStyle: startFillStyle,\r\n      }, `#pv-start-${id}`);\r\n      el.style.pointerEvents = `none`;\r\n      el.style.touchAction = `none`;\r\n\r\n    }\r\n\r\n    const progressFillStyle = `hsla(${currentHue}, 100%, 50%, 50%)`;\r\n    \r\n    const el2 = Svg.Elements.circle({...pt, radius: (type === `touch` ? touchRadius : mouseRadius)}, svg, {\r\n      fillStyle: progressFillStyle\r\n    }, `#pv-progress-${id}-${info.values.length}`);\r\n    el2.style.pointerEvents = `none`;\r\n    el2.style.touchAction =`none`;\r\n    currentHue +=1;\r\n    pointerCount = info.values.length;\r\n    return true;\r\n  };\r\n\r\n  document.body.appendChild(svg);\r\n\r\n  el.addEventListener(`pointerdown`, trackPointer);\r\n  el.addEventListener(`pointermove`, trackPointer);\r\n  el.addEventListener(`pointerup`, lostPointer);\r\n  el.addEventListener(`pointerleave`, lostPointer);\r\n  el.addEventListener(`contextmenu`, ev => {\r\n    ev.preventDefault();\r\n  });\r\n};","/* eslint-disable */\r\n\r\n/**\r\n * Creates an error handler to show errors on-screen.\r\n * This is useful when testing on mobile devices that lack access to the console.\r\n * \r\n * ```js\r\n * const e = defaultErrorHandler();\r\n * ```\r\n * \r\n * Manual control:\r\n * ```js\r\n * const e = defaultErrorHandler();\r\n * e.show(someError);\r\n * e.hide();\r\n * ```\r\n * @returns \r\n */\r\nexport const defaultErrorHandler = () => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let enabled = true;\r\n  const container = document.createElement(`div`);\r\n  container.style.color = `black`;\r\n  container.style.border = `2px solid red`;\r\n  container.style.backgroundColor = `hsl(0, 80%, 90%)`;\r\n  container.style.padding = `1em`;\r\n  container.style.display = `none`;\r\n  container.style.top = `1em`;\r\n  container.style.left = `1em`;\r\n  container.style.position =`absolute`;\r\n\r\n  container.style.fontFamily =`monospace`;\r\n\r\n  const msgEl = document.createElement(`div`);\r\n  msgEl.style.maxWidth = `50vw`;\r\n  msgEl.style.maxHeight = `50vh`;\r\n  msgEl.style.overflowY = `scroll`;\r\n\r\n  container.innerHTML = `<h1>Error</h1>`;\r\n  container.append(msgEl);\r\n\r\n  const styleButton = (b:HTMLButtonElement) => {\r\n    b.style.padding = `0.3em`;\r\n    b.style.marginTop = `1em`;\r\n  }\r\n\r\n  const btnClose = document.createElement(`button`);\r\n  btnClose.innerText = `Close`;\r\n  btnClose.onclick = () => {\r\n    hide();\r\n  };\r\n\r\n  const btnStop = document.createElement(`button`);\r\n  btnStop.innerText = `Stop displaying errors`;\r\n  btnStop.onclick = () => {\r\n    enabled = false;\r\n    hide();\r\n  };\r\n\r\n  styleButton(btnClose);\r\n  styleButton(btnStop);\r\n\r\n  container.append(btnClose);\r\n  container.append(btnStop);\r\n  document.body.append(container);\r\n\r\n  const show = (ex:Error|string|Event) => {\r\n    container.style.display = `inline`;\r\n    if ((ex as any).stack) {\r\n      msgEl.innerHTML += `<pre>${(ex as any).stack}</pre>`;\r\n    } else {\r\n      msgEl.innerHTML += `<p>${ex}</p>`;\r\n    }\r\n  };\r\n\r\n  const hide = () => {\r\n    container.style.display =`none`;\r\n  };\r\n\r\n  window.onerror = (msg, url, lineNo, colNo, error) => {\r\n    if (enabled) {\r\n      if (error) {\r\n        console.log(error);\r\n        show(error);\r\n      } else {\r\n        console.log(msg);\r\n        show(msg);\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  window.addEventListener(`unhandledrejection`, e => {\r\n    console.log(e.reason);\r\n    if (enabled)  {\r\n      show(e.reason);\r\n    }\r\n  })\r\n  return { show, hide};\r\n};","import {RandomSource, defaultRandom} from '../Random.js';\r\nimport {clamp} from '../data/Clamp.js';\r\nimport {number as guardNumber} from '../Guards.js';\r\nimport * as Easings from './Easing.js';\r\n\r\n/**\r\n * Easings module\r\n * \r\n * Overview:\r\n * * {@link Easings.time}: Ease by time\r\n * * {@link Easings.tick}: Ease by tick\r\n * * {@link Easings.get}: Get an easing function by name\r\n * * {@link Easings.crossfade}: Mix two synchronised easing functions (a slight shortcut over `mix`)\r\n * * {@link Easings.mix}: Mix two easing functions\r\n * * {@link Easings.gaussian}: Gaussian distribution (rough bell curve)\r\n * \r\n * @example Importing\r\n * ```js\r\n * // If library is stored two directories up under `ixfx/`\r\n * import {Easings} from '../../ixfx/dist/modulation.js';\r\n * Easings.time(...);\r\n * \r\n * // Import from web\r\n * import {Easings} from 'https://unpkg.com/ixfx/dist/modulation.js'\r\n * Easings.time(...);\r\n * ```\r\n */\r\nexport {Easings};\r\n\r\n/**\r\n * Envelope\r\n */\r\nimport * as Envelopes from './Envelope.js';\r\nexport * from './Envelope.js';\r\n\r\n/**\r\n * Forces module can help to compute basic physical forces like gravity, friction, springs etc.\r\n * \r\n * @example Importing\r\n * ```js\r\n * // If library is stored two directories up under `ixfx/`\r\n * import {Forces} from '../../ixfx/dist/modulation.js';\r\n * Forces.attractionForce(...);\r\n * \r\n * // Import from web\r\n * import {Forces} from 'https://unpkg.com/ixfx/dist/modulation.js'\r\n * Forces.attractionForce(...);\r\n * ```\r\n * \r\n */\r\nimport * as Forces from './Forces.js';\r\nexport {Forces};\r\n\r\n\r\nimport * as Oscillators from './Oscillator.js';\r\n\r\n/**\r\n * Oscillators module has waveshapes for producing values with a specified frequency.\r\n * \r\n * Overview\r\n * * {@link Oscillators.saw}: 'Sawtooth' wave\r\n * * {@link Oscillators.sine}: Sine wave\r\n * * {@link Oscillators.sineBipolar}: Sine wave with range of -1 to 1\r\n * * {@link Oscillators.square}: Square wave\r\n * * {@link Oscillators.triangle}: Triangle wave\r\n * \r\n * @example On-demand sampling\r\n * ```js\r\n * // Saw wave with frequency of 0.10hZ\r\n * const osc = Oscillators.saw(0.1);\r\n * \r\n * // Whever we need to sample from the oscillator...\r\n * const v = osc.next().value;\r\n * ```\r\n * \r\n * @example Importing\r\n * ```js\r\n * // If library is stored two directories up under `ixfx/`\r\n * import {Oscillators} from '../../ixfx/dist/modulation.js';\r\n * Oscillators.saw(...);\r\n * \r\n * // Import from web\r\n * import {Oscillators} from 'https://unpkg.com/ixfx/dist/modulation.js'\r\n * Oscillators.saw(...);\r\n * ```\r\n * \r\n */\r\nexport {Oscillators};\r\n\r\nexport type JitterOpts = {\r\n  readonly type?: `rel`|`abs`,\r\n  readonly clamped?: boolean\r\n}\r\n\r\n/**\r\n * Jitters `value` by the absolute `jitter` amount.\r\n * All values should be on a 0..1 scale, and the return value is by default clamped to 0..1. Pass `clamped:false` as an option\r\n * to allow for arbitary ranges.\r\n * \r\n * ```js\r\n * import {jitter} from 'https://unpkg.com/ixfx/dist/modulation.js';\r\n * \r\n * // Jitter 0.5 by 10% (absolute)\r\n * // yields range of 0.4-0.6\r\n * jitter(0.5, 0.1);\r\n * \r\n * // Jitter 0.5 by 10% (relative, 10% of 0.5)\r\n * // yields range of 0.45-0.55\r\n * jitter(0.5, 0.1, {type:`rel`});\r\n * ```\r\n * \r\n * You can also opt not to clamp values:\r\n * ```js\r\n * // Yields range of -1.5 - 1.5\r\n * jitter(0.5, 1, {clamped:false});\r\n * ```\r\n * \r\n * A custom source for random numbers can be provided. Eg, use a weighted\r\n * random number generator:\r\n * \r\n * ```js\r\n * import {weighted} from 'https://unpkg.com/ixfx/dist/random.js';\r\n * jitter(0.5, 0.1, {}, weighted);\r\n * ```\r\n * \r\n * Options\r\n * * clamped: If false, `value`s out of percentage range can be used and return value may\r\n *    beyond percentage range. True by default\r\n * * type: if `rel`, `jitter` is considered to be a percentage relative to `value`\r\n *         if `abs`, `jitter` is considered to be an absolute value (default)\r\n * @param value Value to jitter\r\n * @param jitter Absolute amount to jitter by\r\n * @param opts Jitter options\r\n * @param rand Source of random numbers, Math.random by default.\r\n * @returns Jittered value\r\n */\r\nexport const jitter = (value:number, jitter:number, opts:JitterOpts = {}, rand:RandomSource = defaultRandom) => {\r\n \r\n  const type = opts.type ?? `abs`;\r\n  const clamped = opts.clamped ?? true;\r\n\r\n  guardNumber(value, clamped ? `percentage` : `bipolar`, `value`);\r\n  guardNumber(jitter, clamped ? `percentage` :`bipolar`, `jitter`);\r\n\r\n  //eslint-disable-next-line functional/no-let\r\n  let v:number;\r\n  if (type === `rel`) {\r\n    jitter = value * jitter;\r\n    const j = jitter * 2 * rand();\r\n    v = value - jitter + j;\r\n  } else if (type === `abs`) {\r\n    const j = jitter * 2 * rand();\r\n    v = value - jitter + j;\r\n  } else {\r\n    throw new Error(`Unknown jitter type: ${type}.`);\r\n  }\r\n  if (clamped) return clamp(v);\r\n  return v;\r\n};\r\n\r\ntry {\r\n  if (typeof window !== `undefined`) {\r\n    //eslint-disable-next-line functional/immutable-data,@typescript-eslint/no-explicit-any\r\n    (window as any).ixfx = {...(window as any).ixfx, Modulation: {Forces, jitter, Envelopes, Oscillators, Easings}};\r\n  }\r\n} catch { /* no-op */ }","import {SimpleEventEmitter} from \"../Events.js\";\r\nimport {  msElapsedTimer, sleep, TimerSource} from \"../flow/index.js\";\r\nimport { Timer } from \"../flow/Timer.js\";\r\nimport { StateMachine } from \"../flow/StateMachine.js\";\r\nimport {Path} from \"../geometry/Path.js\";\r\nimport * as Bezier from '../geometry/Bezier.js';\r\nimport {scale} from \"../data/Scale.js\";\r\n\r\n/**\r\n * @returns Returns a full set of default ADSR options\r\n */\r\nexport const defaultAdsrOpts = ():EnvelopeOpts => ({\r\n  attackBend: -1,\r\n  decayBend: -.3,\r\n  releaseBend: -.3,\r\n  peakLevel: 1,\r\n  initialLevel: 0,\r\n  sustainLevel: 0.6,\r\n  releaseLevel: 0,\r\n  attackDuration: 600,\r\n  decayDuration: 200,\r\n  releaseDuration: 800,\r\n  shouldLoop: false\r\n});\r\n\r\nexport type EnvelopeOpts = AdsrOpts & AdsrTimingOpts;\r\n/**\r\n * Options for the ADSR envelope. \r\n * \r\n * Use {@link defaultAdsrOpts} to get an initial default:\r\n * @example\r\n * ```js\r\n * let env = adsr({\r\n *  ...defaultAdsrOpts(),\r\n *  attackDuration: 2000,\r\n *  releaseDuration: 5000,\r\n *  sustainLevel: 1,\r\n *  retrigger: false\r\n * });\r\n * ```\r\n */\r\nexport type AdsrOpts = {\r\n  /**\r\n   * Attack bezier 'bend'. Bend from -1 to 1. 0 for a straight line\r\n   */\r\n   readonly attackBend: number\r\n  /**\r\n   * Decay bezier 'bend'. Bend from -1 to 1. 0 for a straight line\r\n   */\r\n   readonly decayBend: number\r\n  /**\r\n   * Release bezier 'bend'. Bend from -1 to 1. 0 for a straight line\r\n   */\r\n   readonly releaseBend: number\r\n\r\n   /**\r\n    * Peak level (maximum of attack stage)\r\n    */\r\n   readonly peakLevel:number\r\n\r\n  /**\r\n   * Starting level (usually 0)\r\n   */\r\n   readonly initialLevel?:number\r\n/**\r\n * Sustain level. Only valid if trigger and hold happens\r\n */ \r\n   readonly sustainLevel:number\r\n/**\r\n * Release level, when envelope is done (usually 0)\r\n */\r\n   readonly releaseLevel?:number\r\n\r\n  /**\r\n   * When _false_, envelope starts from it's current level when being triggered.\r\n   * _True_ by default.\r\n   */\r\n  readonly retrigger?: boolean\r\n}\r\n\r\nexport type AdsrTimingOpts = {\r\n  /**\r\n   * If true, envelope indefinately returns to attack stage after release\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  readonly shouldLoop: boolean\r\n\r\n  /**\r\n   * Duration for attack stage\r\n   * Unit depends on timer source\r\n   * @type {number}\r\n   */\r\n  readonly attackDuration: number\r\n  /**\r\n   * Duration for decay stage\r\n   * Unit depends on timer source\r\n   * @type {number}\r\n   */\r\n  readonly decayDuration: number\r\n  /**\r\n   * Duration for release stage\r\n   * Unit depends on timer source\r\n   * @type {number}\r\n   */\r\n  readonly releaseDuration: number\r\n}\r\n\r\n/**\r\n * State change event\r\n */\r\nexport interface StateChangeEvent {\r\n  readonly newState: string,\r\n  readonly priorState: string\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface CompleteEvent { /* no-op */}\r\n\r\nexport type Events = {\r\n  readonly change: StateChangeEvent\r\n  readonly complete: CompleteEvent\r\n};\r\n\r\nclass AdsrBase extends SimpleEventEmitter<Events> {\r\n  readonly #sm:StateMachine;\r\n  readonly #timeSource:TimerSource;\r\n  #timer:Timer|undefined;\r\n\r\n  #holding:boolean;\r\n  #holdingInitial:boolean;\r\n\r\n  attackDuration:number;\r\n  decayDuration:number;\r\n  releaseDuration:number;\r\n  decayDurationTotal:number;\r\n  shouldLoop:boolean;\r\n  constructor(opts:AdsrTimingOpts) {\r\n    super();\r\n    \r\n    this.attackDuration = opts.attackDuration ?? 300;\r\n    this.decayDuration = opts.decayDuration ?? 500;\r\n    this.releaseDuration = opts.releaseDuration ?? 1000;\r\n    this.shouldLoop = opts.shouldLoop ?? false;\r\n\r\n    const descr ={\r\n      attack: [`decay`, `release`],\r\n      decay: [`sustain`, `release`],\r\n      sustain: [`release`],\r\n      release: [`complete`],\r\n      complete: null\r\n    };\r\n    \r\n    this.#sm = new StateMachine(`attack`, descr);\r\n    this.#sm.addEventListener(`change`, (ev => {\r\n      // Reset timer on release\r\n      if (ev.newState === `release` && this.#holdingInitial) {\r\n        this.#timer?.reset();\r\n      }\r\n      super.fireEvent(`change`, ev);\r\n    }));\r\n    this.#sm.addEventListener(`stop`, (ev => {\r\n      super.fireEvent(`complete`, ev);\r\n    }));\r\n    \r\n    this.#timeSource = msElapsedTimer;\r\n    this.#holding = this.#holdingInitial = false;\r\n\r\n    this.decayDurationTotal = this.attackDuration + this.decayDuration;\r\n  }\r\n\r\n  protected switchState():boolean {\r\n    if (this.#timer === undefined) return false;\r\n    // eslint-disable-next-line functional/no-let\r\n    let elapsed = this.#timer.elapsed;\r\n    const wasHeld = this.#holdingInitial && !this.#holding;\r\n\r\n    // Change through states for as long as needed\r\n    // eslint-disable-next-line functional/no-let\r\n    let hasChanged = false;\r\n    // eslint-disable-next-line functional/no-loop-statement\r\n    do {\r\n      hasChanged = false;\r\n      switch (this.#sm.state) {\r\n      case `attack`:\r\n        if (elapsed > this.attackDuration || wasHeld) {\r\n          this.#sm.next();\r\n          hasChanged = true;\r\n        }\r\n        break;\r\n      case `decay`:\r\n        if (elapsed > this.decayDurationTotal || wasHeld) {\r\n          this.#sm.next();\r\n          hasChanged = true;\r\n        }\r\n        break;\r\n      case `sustain`:\r\n        if (!this.#holding || wasHeld) {\r\n          elapsed = 0;\r\n          this.#sm.next();\r\n          this.#timer?.reset();\r\n          hasChanged = true;\r\n        }\r\n        break;\r\n      case `release`:\r\n        if (elapsed > this.releaseDuration) {\r\n          this.#sm.next();\r\n          hasChanged = true;\r\n        }\r\n        break;\r\n      case `complete`:\r\n        if (this.shouldLoop) {\r\n          this.trigger(this.#holdingInitial);\r\n        }\r\n      }\r\n    } while (hasChanged);\r\n    return hasChanged;\r\n  }\r\n\r\n  /**\r\n   * Computes a stage progress from 0-1\r\n   * @param allowStateChange \r\n   * @returns \r\n   */\r\n  protected computeRaw(allowStateChange = true):[stage:string|undefined, amount:number, prevStage:string] {\r\n    if (this.#timer === undefined) return [undefined, 0, this.#sm.state];\r\n  \r\n    // Change state if necessary based on elapsed time\r\n    if (allowStateChange) this.switchState();\r\n    \r\n    const prevStage = this.#sm.state;\r\n\r\n    const elapsed = this.#timer.elapsed;\r\n    // eslint-disable-next-line functional/no-let\r\n    let relative = 0;\r\n    const state = this.#sm.state;\r\n    switch (state) {\r\n    case `attack`:\r\n      relative = elapsed / this.attackDuration;\r\n      break;\r\n    case `decay`:\r\n      relative = (elapsed - this.attackDuration) / this.decayDuration;\r\n      break;\r\n    case `sustain`:\r\n      relative = 1;\r\n      break;\r\n    case `release`:\r\n      relative = Math.min(elapsed / this.releaseDuration, 1);\r\n      break;\r\n    case `complete`:\r\n      return [undefined, 1, prevStage];\r\n    default:\r\n      throw new Error(`State machine in unknown state: ${state}`);\r\n    }\r\n    return [state, relative, prevStage];\r\n  }\r\n\r\n  get isDone():boolean {\r\n    return this.#sm.isDone;\r\n  }\r\n\r\n  onTrigger():void {\r\n    /* no op */\r\n  }\r\n\r\n  trigger(hold:boolean = false) {\r\n    this.onTrigger();\r\n\r\n    this.#sm.reset();\r\n    this.#timer = this.#timeSource();\r\n    this.#holding = hold;\r\n    this.#holdingInitial = hold;\r\n  }\r\n\r\n  compute(): void {\r\n    /* no-op */\r\n  }\r\n\r\n  release() {\r\n    if (this.isDone || !this.#holdingInitial) return; // Was never holding or done\r\n  \r\n    // Setting holding flag to false, computeRaw will change state\r\n    this.#holding = false;\r\n    this.compute();\r\n  }\r\n}\r\n\r\n/**\r\n * ADSR (Attack Decay Sustain Release) envelope. An envelope is a value that changes over time,\r\n * usually in response to an intial trigger.\r\n * \r\n * Created with the {@link adsr} function.\r\n * \r\n * @example Setup\r\n * ```js\r\n * import {adsr, defaultAdsrOpts} from 'https://unpkg.com/ixfx/dist/modulation.js'\r\n * const opts = {\r\n *  ...defaultAdsrOpts(),\r\n *  attackDuration: 1000,\r\n *  decayDuration: 200,\r\n *  sustainDuration: 100\r\n * }\r\n * const env = adsr(opts);\r\n * ```\r\n * \r\n * @example Using\r\n * ```js\r\n * env.trigger(); // Start envelope\r\n * ...\r\n * // Get current value of envelope\r\n * const [state, scaled, raw] = env.compute();\r\n * ```\r\n * \r\n * * `state` is a string, one of the following: 'attack', 'decay', 'sustain', 'release', 'complete' \r\n * * `scaled` is a value scaled according to the stage's _levels_\r\n * * `raw` is the progress from 0 to 1 within a stage. ie. 0.5 means we're halfway through a stage.\r\n * \r\n * Instead of `compute()`, most usage of the envelope is just fetching the `value` property, which returns the same scaled value of `compute()`:\r\n * \r\n * ```js\r\n * const value = env.value; // Get scaled number\r\n * ```\r\n * \r\n * @example Hold & release\r\n * ```js\r\n * env.trigger(true);   // Pass in true to hold\r\n * ...envelope will stop at sustain stage...\r\n * env.release();      // Release into decay\r\n * ```\r\n * \r\n * Check if it's done:\r\n * \r\n * ```js\r\n * env.isDone; // True if envelope is completed\r\n * ```\r\n * \r\n * Envelope has events to track activity: 'change' and 'complete':\r\n * \r\n * ```\r\n * env.addEventListener(`change`, ev => {\r\n *  console.log(`Old: ${evt.oldState} new: ${ev.newState}`);\r\n * })\r\n * ```\r\n */\r\nexport interface Adsr extends SimpleEventEmitter<Events> {\r\n  /**\r\n   * Compute value of envelope at this point in time.\r\n   * \r\n   * Returns an array of [stage, scaled, raw]. Most likely you want to use {@link value} to just get the scaled value.\r\n   * @param allowStateChange If true (default) envelope will be allowed to change state if necessary before returning value\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  compute(allowStateChange?:boolean):readonly [stage:string|undefined, scaled:number, raw:number]\r\n\r\n  /**\r\n   * Returns the scaled value\r\n   * Same as .compute()[1]\r\n   */\r\n  get value():number;\r\n /**\r\n  * Releases a held envelope. Has no effect if envelope was not held or is complete.\r\n  */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  release():void\r\n  /**\r\n   * Triggers envelope.\r\n   * \r\n   * If event is already trigged,\r\n   * it will be _retriggered_. If`opts.retriggered` is false (default)\r\n   * envelope starts again at `opts.initialValue`. Otherwise it starts at\r\n   * the current value.\r\n   * \r\n   * @param hold If _true_ envelope will hold at sustain stage\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  trigger(hold?:boolean):void\r\n  /** \r\n   * _True_ if envelope is completed\r\n   */\r\n  //eslint-disable-next-line functional/no-method-signature\r\n  get isDone():boolean;\r\n}\r\n\r\nclass AdsrImpl extends AdsrBase implements Adsr {\r\n  readonly attackPath:Path;\r\n  readonly decayPath:Path;\r\n  readonly releasePath:Path;\r\n\r\n  readonly initialLevel;\r\n  readonly peakLevel;\r\n  readonly releaseLevel;\r\n  readonly sustainLevel;\r\n\r\n  readonly attackBend;\r\n  readonly decayBend;\r\n  readonly releaseBend;\r\n\r\n  protected initialLevelOverride:number|undefined;\r\n  readonly retrigger:boolean;\r\n  private releasedAt:number|undefined;\r\n\r\n  constructor(opts:EnvelopeOpts) {\r\n    super(opts);\r\n    this.initialLevel = opts.initialLevel ?? 0;\r\n    this.peakLevel = opts.peakLevel ?? 1;\r\n    this.releaseLevel = opts.releaseLevel ?? 0;\r\n    this.sustainLevel = opts.sustainLevel ?? 0.75;\r\n    this.retrigger = opts.retrigger ?? true;\r\n    \r\n    this.attackBend = opts.attackBend ?? 0;\r\n    this.releaseBend = opts.releaseBend ?? 0;\r\n    this.decayBend = opts.decayBend ?? 0;\r\n    \r\n    const max = 1;\r\n    this.attackPath = Bezier.toPath(Bezier.quadraticSimple(\r\n      {x: 0, y: this.initialLevel}, \r\n      {x: max, y: this.peakLevel}, \r\n      -this.attackBend\r\n    ));\r\n    this.decayPath = Bezier.toPath(Bezier.quadraticSimple(\r\n      {x: 0, y: this.peakLevel}, \r\n      {x: max, y: this.sustainLevel}, \r\n      -this.decayBend\r\n    ));\r\n    this.releasePath = Bezier.toPath(Bezier.quadraticSimple(\r\n      {x: 0, y: this.sustainLevel},\r\n      {x: max, y: this.releaseLevel}, \r\n      -this.releaseBend\r\n    ));\r\n  }\r\n\r\n  onTrigger() {\r\n    this.initialLevelOverride = undefined;\r\n    if (!this.retrigger) {      \r\n      const [_stage, scaled, _raw] = this.compute();\r\n      if (!Number.isNaN(scaled) && scaled > 0) {\r\n        console.log(`Retrigger. Last value was: ${scaled}`);\r\n        this.initialLevelOverride = scaled;\r\n      }\r\n    }\r\n  }\r\n\r\n  get value():number {\r\n    return this.compute(true)[1];\r\n  }\r\n\r\n  compute(allowStateChange = true):[stage:string|undefined, scaled:number, raw:number] {\r\n    const [stage, amt] = super.computeRaw(allowStateChange);\r\n    if (stage === undefined) return [undefined, NaN, NaN];\r\n    // eslint-disable-next-line functional/no-let\r\n    let v;\r\n    switch (stage) {\r\n    case `attack`:\r\n      v = this.attackPath.interpolate(amt).y;\r\n      if (this.initialLevelOverride !== undefined) {\r\n        v = scale(v, 0, this.initialLevel, this.initialLevelOverride, this.initialLevel);\r\n      }\r\n      this.releasedAt = v;\r\n      break;\r\n    case `decay`:\r\n      v = this.decayPath.interpolate(amt).y;\r\n      this.releasedAt = v;\r\n      break;\r\n    case `sustain`:\r\n      v = this.sustainLevel;\r\n      this.releasedAt = v;\r\n      break;\r\n    case `release`:\r\n      v = this.releasePath.interpolate(amt).y;\r\n      // Bound release level to the amp level that we released at.\r\n      // ie. when release happens before a stage completes\r\n      if (this.releasedAt !== undefined) v = scale(v, 0, this.sustainLevel, 0, this.releasedAt);\r\n      break;\r\n    case `complete`:\r\n      v = this.releaseLevel;\r\n      this.releasedAt = undefined;\r\n      break;\r\n    default:\r\n      throw new Error(`Unknown state: ${stage}`);\r\n    }\r\n    return [stage, v, amt];\r\n  }\r\n}\r\n\r\n/**\r\n * Creates an {@link Adsr} envelope.\r\n * @param opts \r\n * @returns New {@link Adsr} Envelope\r\n */\r\nexport const adsr = (opts:EnvelopeOpts):Adsr => new AdsrImpl(opts);\r\n\r\n/**\r\n * Creates and runs an envelope, sampling its values at `sampleRateMs`.\r\n * \r\n * ```\r\n * import {adsrSample, defaultAdsrOpts} from 'https://unpkg.com/ixfx/dist/modulation.js';\r\n * import {IterableAsync} from  'https://unpkg.com/ixfx/dist/util.js';\r\n * \r\n * const opts = {\r\n *  ...defaultAdsrOpts(),\r\n *  attackDuration: 1000,\r\n *  releaseDuration: 1000,\r\n *  sustainLevel: 1,\r\n *  attackBend: 1,\r\n *  decayBend: -1\r\n * };\r\n * \r\n * // Sample an envelope every 5ms into an array\r\n * const data = await IterableAsync.toArray(adsrSample(opts, 20));\r\n * \r\n * // Work with values as sampled\r\n * for await (const v of adsrSample(opts, 5)) {\r\n *  // Work with envelope value `v`...\r\n * }\r\n * ```\r\n * @param opts Envelope options\r\n * @param sampleRateMs Sample rate\r\n * @returns \r\n */\r\n//eslint-disable-next-line func-style\r\nexport async function* adsrSample(opts:EnvelopeOpts, sampleRateMs:number) {\r\n  if (opts.shouldLoop) throw new Error(`Cannot sample a looping envelope`);\r\n  \r\n  const env = adsr(opts);\r\n\r\n  env.trigger();\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    await sleep(sampleRateMs);\r\n    const v = env.value;\r\n    if (env.isDone) return;\r\n    yield v;\r\n  }\r\n}\r\n// export function* adsrSample (opts:EnvelopeOpts, sampleRateMs:number) {\r\n//   if (opts.shouldLoop) throw new Error(`Cannot sample a looping envelope`);\r\n  \r\n//   const env = adsr(opts);\r\n//   //const data:number[] = [];\r\n\r\n//   //eslint-disable-next-line functional/no-let\r\n//   let started = false;\r\n\r\n//   return new Promise<number[]>((resolve, _reject) => {\r\n//     continuously(() => {\r\n//       if (!started) {\r\n//         started = true;\r\n//         env.trigger();\r\n//       }\r\n\r\n//       const v = env.value;\r\n//       //eslint-disable-next-line functional/immutable-data\r\n//       if (!Number.isNaN(v)) yield env.value;// data.push(env.value);\r\n//       if (env.isDone) {\r\n//         resolve(data);\r\n//         return false;\r\n//       }\r\n//     }, sampleRateMs).start();\r\n//   });\r\n// };","/**\r\n * Acknowledgements: much of the work here is an adapation from Daniel Shiffman's excellent _The Nature of Code_ website.\r\n */\r\nimport {Points, Polar} from '../geometry/index.js';\r\nimport { Point} from '../geometry/Point.js';\r\nimport {clamp} from '../data/Clamp.js';\r\nimport {interpolateAngle} from '../data/Interpolate.js';\r\nimport {Rect, getEdgeX, getEdgeY} from '../geometry/Rect.js';\r\n\r\n/**\r\n * Logic for applying mass\r\n */\r\nexport type MassApplication = `dampen`|`multiply`|`ignored`;\r\n\r\n\r\n/**\r\n * Basic properties of a thing that can be\r\n * affected by forces\r\n */\r\nexport type ForceAffected = {\r\n  /**\r\n   * Position. Probably best to use relative coordinates\r\n   */\r\n  readonly position?:Point\r\n  /**\r\n   * Velocity vector. \r\n   * Probably don't want to assign this yourself, but rather have it computed based on acceleration and applied forces\r\n   */\r\n  readonly velocity?:Point\r\n  /**\r\n   * Acceleration vector. Most applied forces will alter the acceleration, culminating in a new velocity being set and the\r\n   * acceleraton value zeroed\r\n   */\r\n  readonly acceleration?:Point\r\n  /**\r\n   * Mass. The unit is undefined, again best to think of this being on a 0..1 scale. Mass is particularly important\r\n   * for the attraction/repulsion force, but other forces can incorporate mass too.\r\n   */\r\n  readonly mass?:number\r\n\r\n  readonly angularAcceleration?:number;\r\n\r\n  readonly angularVelocity?:number;\r\n\r\n  readonly angle?:number;\r\n};\r\n\r\n/**\r\n * A function that updates values of a thing.\r\n * \r\n * These can be created using the xxxForce functions, eg {@link attractionForce}, {@link accelerationForce}, {@link magnitudeForce}, {@link velocityForce}\r\n */\r\nexport type ForceFn = (t:ForceAffected) => ForceAffected;\r\n\r\n/**\r\n * A vector to apply to acceleration or a force function\r\n */\r\nexport type ForceKind = Points.Point|ForceFn;\r\n\r\n/**\r\n * Throws an error if `t` is not of the `ForceAffected` shape.\r\n * @param t\r\n * @param name \r\n */\r\nexport const guard = (t:ForceAffected, name:string= `t`) => {\r\n  if (t === undefined) throw new Error(`Parameter ${name} is undefined. Expected ForceAffected`);\r\n  if (t === null) throw new Error(`Parameter ${name} is null. Expected ForceAffected`);\r\n  if (typeof t !== `object`) throw new Error(`Parameter ${name} is type ${typeof t}. Expected object of shape ForceAffected`);\r\n};\r\n\r\n\r\n/**\r\n * `constrainBounce` yields a function that affects `t`'s position and velocity such that it\r\n * bounces within bounds.\r\n * \r\n * ```js\r\n * // Setup bounce with area constraints\r\n * // Reduce velocity by 10% with each impact\r\n * const b = constrainBounce({ width:200, height:500 }, 0.9);\r\n * \r\n * // Thing\r\n * const t = {\r\n *  position: { x: 50,  y: 50 },\r\n *  velocity: { x: 0.3, y: 0.01 }\r\n * };\r\n * \r\n * // `b` returns an altereted version of `t`, with the\r\n * // bounce logic applied.\r\n * const bounced = b(t);\r\n * ```\r\n * \r\n * `dampen` parameter allows velocity to be dampened with each bounce. A value\r\n * of 0.9 for example reduces velocity by 10%. A value of 1.1 will increase velocity by\r\n * 10% with each bounce.\r\n * @param bounds Constraints of area\r\n * @params dampen How much to dampen velocity by. Defaults to 1 meaning there is no damping. \r\n * @returns A function that can perform bounce logic\r\n */\r\nexport const constrainBounce = (bounds:Rect = {width:1, height:1}, dampen=1) => {\r\n  const minX = getEdgeX(bounds, `left`);\r\n  const maxX = getEdgeX(bounds, `right`);\r\n  const minY = getEdgeY(bounds, `top`);\r\n  const maxY = getEdgeY(bounds, `bottom`);\r\n\r\n  return (t:ForceAffected):ForceAffected => {\r\n    const position = computePositionFromVelocity(t.position ?? Points.Empty, t.velocity ?? Points.Empty);\r\n    //eslint-disable-next-line functional/no-let\r\n    let velocity = t.velocity ?? Points.Empty;\r\n    //eslint-disable-next-line functional/no-let\r\n    let {x, y} = position;\r\n  \r\n    if (x > maxX) {\r\n      x = maxX;\r\n      velocity = Points.invert(Points.multiply(velocity, dampen), `x`);\r\n    } else if (x < minX) {\r\n      x = minX;\r\n      velocity = Points.invert(Points.multiply(velocity, dampen), `x`);\r\n    }\r\n\r\n    if (y > maxY) {\r\n      y = maxY;\r\n      velocity = Points.multiply(Points.invert(velocity, `y`), dampen);\r\n    } else if (position.y < minY) {\r\n      y = minY;\r\n      velocity = Points.invert(Points.multiply(velocity, dampen), `y`);\r\n    }\r\n    \r\n    return Object.freeze({\r\n      ...t,\r\n      position: {x, y},\r\n      velocity\r\n    });\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * For a given set of attractors, returns a function that a sets acceleration of attractee.\r\n * Keep note though that this bakes-in the values of the attractor, it won't reflect changes to their state. For dynamic\r\n * attractors, it might be easier to use `computeAttractionForce`.\r\n * \r\n * @example Force\r\n * ```js\r\n * const f = Forces.attractionForce(sun, gravity);\r\n * earth = Forces.apply(earth, f);\r\n * ```\r\n * \r\n * @example Everything mutually attracted\r\n * ```js\r\n * // Create a force with all things as attractors.\r\n * const f = Forces.attractionForce(things, gravity);\r\n * // Apply force to all things.\r\n * // The function returned by attractionForce will automatically ignore self-attraction\r\n * things = things.map(a => Forces.apply(a, f));\r\n * ```\r\n * @param attractors \r\n * @param gravity \r\n * @param distanceRange \r\n * @returns \r\n */\r\nexport const attractionForce = (attractors:readonly ForceAffected[], gravity:number,  distanceRange:{readonly min?:number, readonly max?:number} = {}) => (attractee:ForceAffected):ForceAffected => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let accel = attractee.acceleration ?? Points.Empty;\r\n  attractors.forEach(a => {\r\n    if (a === attractee) return;\r\n\r\n    const f = computeAttractionForce(a, attractee, gravity, distanceRange);\r\n    accel = Points.sum(accel, f);\r\n  });\r\n  return {\r\n    ...attractee,\r\n    acceleration: accel\r\n  };\r\n};\r\n\r\n\r\n/**\r\n * Computes the attraction force between two things.\r\n * Value for `gravity` will depend on what range is used for `mass`. It's probably a good idea\r\n * to keep mass to mean something relative - ie 1 is 'full' mass, and adjust the `gravity`\r\n * value until it behaves as you like. Keeping mass in 0..1 range makes it easier to apply to\r\n * visual properties later.\r\n * \r\n * @example Attractee and attractor, gravity 0.005\r\n * ```js\r\n * const attractor = { position: { x:0.5, y:0.5 }, mass: 1 };\r\n * const attractee = { position: Points.random(), mass: 0.01 };\r\n * attractee = Forces.apply(attractee, Forces.computeAttractionForce(attractor, attractee, 0.005));\r\n * ```\r\n * \r\n * @example Many attractees for one attractor, gravity 0.005\r\n * ```js\r\n * attractor =  { position: { x:0.5, y:0.5 }, mass: 1 };\r\n * attractees = attractees.map(a => Forces.apply(a, Forces.computeAttractionForce(attractor, a, 0.005)));\r\n * ```\r\n * \r\n * @example Everything mutually attracted\r\n * ```js\r\n * // Create a force with all things as attractors.\r\n * const f = Forces.attractionForce(things, gravity);\r\n * // Apply force to all things.\r\n * // The function returned by attractionForce will automatically ignore self-attraction\r\n * things = things.map(a => Forces.apply(a, f));\r\n * ```\r\n * \r\n * `attractor` thing attracting (eg, earth)\r\n * `attractee` thing being attracted (eg. satellite)\r\n * \r\n * \r\n * `gravity` will have to be tweaked to taste. \r\n * `distanceRange` clamps the computed distance. This affects how tightly the particles will orbit and can also determine speed. By default it is 0.001-0.7\r\n * @param attractor Attractor (eg earth)\r\n * @param attractee Attractee (eg satellite)\r\n * @param gravity Gravity constant\r\n * @param distanceRange Min/max that distance is clamped to.\r\n * @returns \r\n */\r\nexport const computeAttractionForce = (attractor:ForceAffected, attractee:ForceAffected, gravity:number, distanceRange:{readonly min?:number, readonly max?:number} = {}):Points.Point => {\r\n  if (attractor.position === undefined) throw new Error(`attractor.position not set`);\r\n  if (attractee.position === undefined) throw new Error(`attractee.position not set`);\r\n  \r\n  const distRangeMin = distanceRange.min ??  0.01;\r\n  const distRangeMax = distanceRange.max ?? 0.7;\r\n\r\n  // Vector between objects\r\n  const f = Points.normalise(Points.subtract(attractor.position, attractee.position));\r\n  \r\n  // Distance\r\n  const d = clamp(Points.distance(f), distRangeMin, distRangeMax);\r\n  \r\n  // Multiply vector by gravity, scaled by mass of things and distance\r\n  return Points.multiply(f, (gravity * (attractor.mass ?? 1) * (attractee.mass ?? 1)) / (d * d));\r\n};\r\n\r\n/**\r\n * Returns `pt` with x and y set to `setpoint` if either is below `v`\r\n * @param pt \r\n * @param v \r\n * @returns \r\n */\r\nconst roundTo = (pt:Point, v:number, setpoint:number):Point => {\r\n  const x = Math.abs(pt.x);\r\n  const y = Math.abs(pt.y);\r\n\r\n  if (x < v && y < v) return {x:setpoint, y:setpoint};\r\n  if (x < v) return {x:setpoint, y:pt.y};\r\n  if (y < v) return {x:pt.x, y:setpoint};\r\n  return pt;\r\n};\r\n\r\n/**\r\n * Apply a series of force functions or forces to `t`. Null/undefined entries are skipped silently.\r\n * It also updates the velocity and position of the returned version of `t`.\r\n * \r\n * ```js\r\n * // Wind adds acceleration. Force is dampened by mass\r\n * const wind = Forces.accelerationForce({ x: 0.00001, y: 0 }, `dampen`);\r\n * \r\n * // Gravity adds acceleration. Force is magnified by mass\r\n * const gravity = Forces.accelerationForce({ x: 0, y: 0.0001 }, `multiply`);\r\n * \r\n * // Friction is calculated based on velocity. Force is magnified by mass\r\n * const friction = Forces.velocityForce(0.00001, `multiply`);\r\n * \r\n *  // Flip movement velocity if we hit a wall. And dampen it by 10%\r\n * const bouncer = Forces.constrainBounce({ width: 1, height: 1 }, 0.9);\r\n * \r\n * let t = {\r\n *  position: Points.random(),\r\n *  mass: 0.1\r\n * };\r\n * \r\n * // Apply list of forces, returning a new version of the thing\r\n * t = Forces.apply(t,\r\n *   gravity,\r\n *   wind,\r\n *   friction,\r\n *   bouncer\r\n * );\r\n * ```\r\n */\r\nexport const apply = (t:ForceAffected, ...accelForces:readonly ForceKind[]):ForceAffected => {\r\n  if (t === undefined) throw new Error(`t parameter is undefined`);\r\n\r\n  accelForces.forEach(f => {\r\n    if (f === null || f=== undefined) return;\r\n    if (typeof f === `function`) {\r\n      t = f(t);\r\n    } else {\r\n      t = {\r\n        ...t,\r\n        acceleration: Points.sum(t.acceleration ?? Points.Empty, f)\r\n      };\r\n    }\r\n  });\r\n\r\n  // Integate velocity from acceleration\r\n  const velo = computeVelocity(t.acceleration ?? Points.Empty, t.velocity ?? Points.Empty);\r\n  \r\n  // Compute position\r\n  const pos = computePositionFromVelocity(t.position ?? Points.Empty, velo);\r\n\r\n  const ff:ForceAffected= {\r\n    ...t,\r\n    position: pos,\r\n    velocity: velo,\r\n    acceleration: Points.Empty\r\n  };\r\n  return ff;\r\n};\r\n\r\n\r\n/**\r\n * Apples vector `v` to acceleration, scaling according to mass, based on the `mass` option.\r\n * ```js\r\n * const f = accelerationForce({ x:0.1, y:0 }, `dampen`);\r\n * let t = { position: ..., acceleration: ... }\r\n * t = f(t); // Apply force  \r\n * ```\r\n * @param v \r\n * @returns \r\n */\r\nexport const accelerationForce = (v:Points.Point, mass:MassApplication):ForceFn => (t:ForceAffected) => Object.freeze({\r\n  ...t,\r\n  acceleration: massApplyAccel(v, t, mass) //Points.sum(t.acceleration ?? Points.Empty, op(t.mass ?? 1))\r\n});\r\n\r\n\r\n/**\r\n * Applies for `v` to `t`'s acceleration, returning result.\r\n * @param v Vector force\r\n * @param t Thing being affected\r\n * @param mass How to factor in mass of thing\r\n * @returns Acceleration vector\r\n */\r\nconst massApplyAccel = (v:Points.Point, t:ForceAffected, mass: MassApplication) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let op;\r\n  if (mass === `dampen`) op =  (mass:number) => Points.divide(v, mass, mass);\r\n  else if (mass === `multiply`) op = (mass:number) => Points.multiply(v, mass, mass);\r\n  else if (mass === `ignored`) {\r\n    op =  (_mass:number) => v;\r\n  } else {\r\n    throw new Error(`Unknown 'mass' parameter '${mass}. Exepected 'dampen', 'multiply' or 'ignored'`);\r\n  }\r\n  return Points.sum(t.acceleration ?? Points.Empty, op(t.mass ?? 1));\r\n  // if (t.mass) {\r\n  //   if (dampen) return Points.sum(t.acceleration ?? Points.Empty, Points.divide(v, t.mass ?? 1));\r\n  //   else return Points.sum(t.acceleration ?? Points.Empty, Points.multiply(v, t.mass ?? 1));\r\n  // }\r\n  // return v;\r\n};\r\n\r\n/**\r\n * A force based on the square of the thing's velocity.\r\n * It's like {@link velocityForce}, but here the velocity has a bigger impact.\r\n * \r\n * ```js\r\n * const thing = {\r\n *  position: { x: 0.5, y:0.5 },\r\n *  velocity: { x: 0.001, y:0 }\r\n * };\r\n * const drag = magnitudeForce(0.1);\r\n * \r\n * // Apply drag force to thing, returning result\r\n * const t = Forces.apply(thing, drag);\r\n * ```\r\n * @param force Force value\r\n * @param mass How to factor in mass \r\n * @returns Function that computes force\r\n */\r\nexport const magnitudeForce = (force:number, mass:MassApplication):ForceFn =>  (t:ForceAffected):ForceAffected => {\r\n  if (t.velocity === undefined) return t;\r\n\r\n  const mag = Points.distance(Points.normalise(t.velocity));\r\n  const magSq = force* mag * mag;\r\n  const vv = Points.multiply(Points.invert(t.velocity), magSq);\r\n  return Object.freeze({\r\n    ...t,\r\n    acceleration: massApplyAccel(vv, t, mass)\r\n  });\r\n}\r\n;\r\n\r\n/**\r\n * Force calculated from velocity of object. Reads velocity and influences acceleration.\r\n * \r\n * ```js\r\n * let t = { position: Points.random(), mass: 0.1 };\r\n * const friction = velocityForce(0.1, `dampen`);\r\n * \r\n * // Apply force, updating position and velocity\r\n * t = Forces.apply(t, friction);\r\n * ```\r\n * @param force Force\r\n * @param mass How to factor in mass\r\n * @returns Function that computes force\r\n */\r\nexport const velocityForce = (force:number, mass: MassApplication):ForceFn => {\r\n  // Invert velocity and then multiply by force\r\n  const pipeline = Points.pipeline(\r\n    // Points.normalise, \r\n    Points.invert, \r\n    (v:Point) => Points.multiply(v, force),\r\n  );\r\n\r\n  return (t:ForceAffected):ForceAffected => {\r\n    if (t.velocity === undefined) return t;\r\n\r\n    // Apply pipeline\r\n    const v = pipeline(t.velocity);    \r\n    return Object.freeze({\r\n      ...t,\r\n      acceleration: massApplyAccel(v, t, mass)\r\n    });\r\n  };\r\n};\r\n\r\nexport const angularForce = () => (t:ForceAffected) => {\r\n  const acc = t.angularAcceleration ?? 0;\r\n  const vel = t.angularVelocity ?? 0;\r\n  const angle = t.angle ?? 0;\r\n\r\n  const v = vel + acc;\r\n  const a = angle + v;\r\n\r\n  return Object.freeze({\r\n    ...t,\r\n    angle: a,\r\n    angularVelocity: v,\r\n    angularAcceleration: 0 \r\n  });\r\n};\r\n\r\n// export const positionFromAngleForce = () => (t:ForceAffected) => {\r\n//   return Object.freeze({\r\n//     ...t,\r\n//     position: computePositionFromAngle()\r\n//   });\r\n// };\r\n\r\n/**\r\n * Yields a force function that applies the thing's acceleration.x to its angular acceleration.\r\n * @param scaling Use this to scale the accel.x value. Defaults to 20 (ie accel.x*20). Adjust if rotation is too much or too little\r\n * @returns \r\n */\r\nexport const angleFromAccelerationForce = (scaling:number = 20) => (t:ForceAffected) => {\r\n  const accel = t.acceleration ?? Points.Empty;\r\n  return Object.freeze({\r\n    ...t,\r\n    angularAcceleration: accel.x*scaling\r\n  });\r\n};\r\n\r\n/**\r\n * Yields a force function that applies the thing's velocity to its angular acceleration.\r\n * This will mean it points in the direction of travel.\r\n * @param interpolateAmt If provided, the angle will be interpolated toward by this amount. Defaults to 1, no interpolation\r\n * @returns \r\n */\r\nexport const angleFromVelocityForce = (interpolateAmt:number = 1) => (t:ForceAffected) => {\r\n  const a = Points.angle(t.velocity ?? Points.Empty);\r\n  return Object.freeze({\r\n    ...t,\r\n    angle: interpolateAmt < 1 ? interpolateAngle(interpolateAmt, t.angle ?? 0, a) : a\r\n  });\r\n};\r\n\r\nexport const springForce = (pinnedAt:Points.Point, restingLength:number = 1) => {\r\n  const k = 0.05;\r\n  return (t:ForceAffected):ForceAffected => {\r\n    const force = Points.subtract(t.position ?? Points.Empty, pinnedAt);\r\n    const mag = Points.distance(force);\r\n    const stretch = mag - restingLength;\r\n    const f = Points.pipelineApply(\r\n      force,\r\n      Points.normalise,\r\n      p => Points.multiply(p, -1 * k * stretch)\r\n    );\r\n    return {\r\n      ...t,\r\n      acceleration: massApplyAccel(f, t, `dampen`)\r\n    };\r\n  };\r\n};\r\n\r\nexport const pendulumForce = (pinnedAt:Points.Point = {x:0.5, y:0}, length = 10, gravity= 0.02, damping = 0.995) => (t:ForceAffected):ForceAffected => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let angle = t.angle;\r\n  if (angle === undefined) {\r\n    if (t.position) {\r\n      angle = Points.angle(pinnedAt, t.position) - Math.PI/2;\r\n    } else {\r\n      angle = 0; // Position wherever\r\n    }\r\n  }\r\n  const accel = (-1 * gravity / length) * Math.sin(angle);\r\n  const v = (t.angularVelocity ?? 0) + accel;\r\n  angle += v;\r\n    \r\n  return Object.freeze({\r\n    angularVelocity: v * damping,\r\n    angle,\r\n    position: computePositionFromAngle(length, angle+Math.PI/2, pinnedAt)\r\n  });\r\n};\r\n\r\n/**\r\n * Compute velocity based on acceleration and current velocity\r\n * @param acceleration Acceleration\r\n * @param velocity Velocity\r\n * @returns \r\n */\r\nexport const computeVelocity = (acceleration:Points.Point, velocity:Points.Point):Points.Point => Points.sum(velocity, acceleration);\r\n\r\n/**\r\n * Compute position based on current position and velocity\r\n * @param position Position\r\n * @param velocity Velocity\r\n * @returns New position\r\n */\r\nexport const computePositionFromVelocity = (position:Points.Point, velocity:Points.Point):Points.Point => Points.sum(position, velocity);\r\n\r\nexport const computePositionFromAngle = (distance:number, angle:number, origin:Points.Point) => Polar.toCartesian(distance, angle, origin);\r\n","//import {number as guardNumber} from \"../Guards.js\";\r\n\r\nimport * as Timers from '../flow/Timer.js';\r\n\r\nconst piPi = Math.PI*2;\r\n/**\r\n * Sine oscillator.\r\n * \r\n * ```js\r\n * // Setup\r\n * const osc = sine(Timers.frequencyTimer(10));\r\n * const osc = sine(0.1);\r\n * \r\n * // Call whenever a value is needed\r\n * const v = osc.next().value;\r\n * ```\r\n * \r\n * @example Saw/tri pinch\r\n * ```js\r\n * const v = Math.pow(osc.value, 2);\r\n * ```\r\n * \r\n * @example Saw/tri bulge\r\n * ```js\r\n * const v = Math.pow(osc.value, 0.5);\r\n * ```\r\n * \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* sine(timerOrFreq:Timers.Timer|number) {\r\n  if (typeof timerOrFreq === `number`) timerOrFreq = Timers.frequencyTimer(timerOrFreq);\r\n  \r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    // Rather than -1 to 1, we want 0 to 1\r\n    yield (Math.sin(timerOrFreq.elapsed*piPi) + 1) / 2;\r\n  }\r\n}\r\n\r\n/**\r\n * Bipolar sine (-1 to 1)\r\n * @param timerOrFreq \r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* sineBipolar(timerOrFreq:Timers.Timer|number) {\r\n  if (typeof timerOrFreq === `number`) timerOrFreq = Timers.frequencyTimer(timerOrFreq);\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    yield Math.sin(timerOrFreq.elapsed*piPi);\r\n  }\r\n}\r\n\r\n/**\r\n * Triangle oscillator\r\n * \r\n * ```js\r\n * // Setup\r\n * const osc = triangle(Timers.frequencyTimer(0.1));\r\n * const osc = triangle(0.1);\r\n * \r\n * // Call whenver a value is needed\r\n * const v = osc.next().value;\r\n * ```\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* triangle(timerOrFreq:Timers.Timer|number) {\r\n  if (typeof timerOrFreq === `number`) timerOrFreq = Timers.frequencyTimer(timerOrFreq);\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    // elapsed is repeatedly 0->1\r\n    //eslint-disable-next-line functional/no-let\r\n    let v = timerOrFreq.elapsed; \r\n    // /2 = 0->0.5\r\n    if (v < 0.5) {\r\n      // Upward\r\n      v *= 2;        \r\n    } else {\r\n      // Downward\r\n      v = 2 - v*2;\r\n    }\r\n    yield v;\r\n  }\r\n}\r\n\r\n/**\r\n * Saw oscillator\r\n * \r\n * ```js\r\n * // Setup\r\n * const osc = saw(Timers.frequencyTimer(0.1));\r\n * const osc = saw(0.1);\r\n * \r\n * // Call whenever a value is needed\r\n * const v = osc.next().value;\r\n * ```\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* saw(timerOrFreq:Timers.Timer) {\r\n  if (typeof timerOrFreq === `number`) timerOrFreq = Timers.frequencyTimer(timerOrFreq);\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {\r\n    yield timerOrFreq.elapsed;\r\n  }\r\n}\r\n\r\n/**\r\n * Square oscillator\r\n * \r\n * ```js\r\n * // Setup\r\n * const osc = square(Timers.frequencyTimer(0.1));\r\n * const osc = square(0.1);\r\n * \r\n * // Call whenever a value is needed\r\n * osc.next().value;\r\n * ```\r\n */\r\n//eslint-disable-next-line func-style\r\nexport function* square(timerOrFreq:Timers.Timer) {\r\n  if (typeof timerOrFreq === `number`) timerOrFreq = Timers.frequencyTimer(timerOrFreq);\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (true) {   \r\n    yield (timerOrFreq.elapsed < 0.5) ? 0 : 1;\r\n  }\r\n}","/// ✔ Unit tested!\r\n\r\nimport { ToString } from \"../Util.js\";\r\nimport {SimpleEventEmitter} from \"../Events.js\";\r\nimport * as KeyValueUtil from '../KeyValue.js';\r\nimport {KeyValues} from \"../index.js\";\r\n\r\nexport type FrequencyEventMap = {\r\n  readonly change:void;\r\n}\r\n\r\n\r\nexport class FrequencyMutable<V> extends SimpleEventEmitter<FrequencyEventMap> {\r\n  readonly #store:Map<string, number>;\r\n  readonly #keyString: ToString<V>;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param keyString Function to key items. Uses JSON.stringify by default\r\n   */\r\n  constructor(keyString: ToString<V> | undefined = undefined) {\r\n    super();\r\n    this.#store = new Map();\r\n\r\n    if (keyString === undefined) {\r\n      keyString = (a) => {\r\n        if (a === undefined) throw new Error(`Cannot create key for undefined`);\r\n        if (typeof a === `string`) { \r\n          return a;\r\n        } else { \r\n          return JSON.stringify(a);\r\n        }\r\n      };\r\n    }\r\n    this.#keyString = keyString;\r\n  }\r\n\r\n  /**\r\n   * Clear data. Fires `change` event\r\n   */\r\n  clear() {\r\n    this.#store.clear();\r\n    this.fireEvent(`change`, undefined);\r\n  }\r\n  \r\n  /**\r\n   * @returns Iterator over keys (ie. groups)\r\n   */\r\n  keys():IterableIterator<string> {\r\n    return this.#store.keys();\r\n  }\r\n\r\n  /**\r\n   * @returns Iterator over frequency counts\r\n   */\r\n  values():IterableIterator<number> {\r\n    return this.#store.values();\r\n  }\r\n\r\n  /**\r\n   * @returns Copy of entries as an array of `[key, count]`\r\n   */\r\n  toArray():[key:string, count:number][] {\r\n    return Array.from(this.#store.entries());\r\n  }\r\n  \r\n  /**\r\n   * Returns a string with keys and counts, useful for debugging.\r\n   * @returns \r\n   */\r\n  debugString():string {\r\n    //eslint-disable-next-line functional/no-let\r\n    let t = ``;\r\n    //eslint-disable-next-line functional/no-loop-statement\r\n    for (const [key, count] of this.#store.entries()) {\r\n      t += `${key}: ${count}, `;\r\n    }\r\n    if (t.endsWith(`, `)) return t.substring(0, t.length-2);\r\n    return t;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param value Value to count\r\n   * @returns Frequency of value, or _undefined_ if it does not exist\r\n   */\r\n  frequencyOf(value:V|string):number|undefined {\r\n    if (typeof value === `string`) return this.#store.get(value);\r\n\r\n    const key = this.#keyString(value);\r\n    return this.#store.get(key);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param value Value to count\r\n   * @returns Relative frequency of `value`, or _undefined_ if it does not exist\r\n   */\r\n  relativeFrequencyOf(value:V|string):number|undefined {\r\n    let freq:number|undefined;\r\n    if (typeof value === `string`) freq = this.#store.get(value);\r\n    else {\r\n      const key = this.#keyString(value);\r\n      freq = this.#store.get(key);\r\n    }\r\n    if (freq === undefined) return;\r\n\r\n    const mma = this.minMaxAvg();\r\n    return freq / mma.total;\r\n  }\r\n\r\n  /**\r\n   * @returns Copy of entries as an array \r\n   */\r\n  entries():Array<KeyValueUtil.KeyValue> {\r\n    return Array.from(this.#store.entries());\r\n  }\r\n  \r\n  /**\r\n   * \r\n   * @returns Returns `{min,max,avg,total}`\r\n   */\r\n  minMaxAvg() {\r\n    return KeyValues.minMaxAvg(this.entries());\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param sortStyle Sorting style (default: _value_, ie. count)\r\n   * @returns Sorted array of [key,frequency]\r\n   */\r\n  entriesSorted(sortStyle:`value` | `valueReverse` | `key` | `keyReverse` = `value`):ReadonlyArray<KeyValues.KeyValue> {\r\n    const s = KeyValueUtil.getSorter(sortStyle);\r\n    return s(this.entries());\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param values Values to add. Fires _change_ event after adding item(s)\r\n   */\r\n  add(...values:V[]) {\r\n    if (values === undefined) throw new Error(`value parameter is undefined`);\r\n    \r\n    const keys = values.map(this.#keyString);\r\n    \r\n    //const key = this.#keyString(value);\r\n    keys.forEach(key => {\r\n      const score = this.#store.get(key) ?? 0;\r\n      this.#store.set(key, score+1);  \r\n    });\r\n    this.fireEvent(`change`, undefined);\r\n  }\r\n}\r\n\r\n/**\r\n * Frequency keeps track of how many times a particular value is seen, but\r\n * unlike a Map it does not store the data. By default compares\r\n * items by value (via JSON.stringify).\r\n * \r\n * Create with {@link frequencyMutable}.\r\n * \r\n * Fires `change` event when items are added or it is cleared.\r\n *\r\n * Overview\r\n * ```\r\n * const fh = frequencyMutable();\r\n * fh.add(value); // adds a value\r\n * fh.clear();    // clears all data\r\n * fh.keys() / .values() // returns an iterator for keys and values\r\n * fh.toArray();  //  returns an array of data in the shape [[key,freq],[key,freq]...]\r\n * ```\r\n * \r\n * Usage\r\n * ```\r\n * const fh = frequencyMutable();\r\n * fh.add(`apples`); // Count an occurence of `apples`\r\n * fh.add(`oranges)`;\r\n * fh.add(`apples`);\r\n * \r\n * const fhData = fh.toArray(); // Expect result [[`apples`, 2], [`oranges`, 1]]\r\n * fhData.forEach((d) => {\r\n *  const [key,freq] = d;\r\n *  console.log(`Key '${key}' occurred ${freq} time(s).`);\r\n * })\r\n * ```\r\n * \r\n * Custom key string\r\n * ```\r\n * const fh = frequencyMutable( person => person.name);\r\n * // All people with name `Samantha` will be counted in same group\r\n * fh.add({name:`Samantha`, city:`Brisbane`});\r\n * ```\r\n * @template V Type of items\r\n */\r\nexport const frequencyMutable = <V>(keyString?:ToString<V>|undefined) => new FrequencyMutable<V>(keyString);\r\n","import {Arrays, queueMutable} from '../collections/index.js';\r\nimport {integer as guardInteger} from '../Guards.js';\r\n\r\n/**\r\n * A moving average calculator (exponential weighted moving average) which does not keep track of\r\n * previous samples. Less accurate, but uses less system resources.\r\n * \r\n * The `scaling` parameter determines smoothing. A value of `1` means that\r\n * the latest value is used as the average - that is, no smoothing. Higher numbers\r\n * introduce progressively more smoothing by weighting the accumulated prior average more heavily.\r\n * \r\n * `add()` adds a new value and returns the calculated average.\r\n * \r\n * ```\r\n * const ma = movingAverageLight(); // default scaling of 3\r\n * ma.add(50);  // 50\r\n * ma.add(100); // 75\r\n * ma.add(75);  // 75\r\n * ma.add(0);   // 50\r\n * ```\r\n * \r\n * Note that the final average of 50 is pretty far from the last value of 0. To make it more responsive,\r\n * we could use a lower scaling factor: `movingAverageLight(2)`. This yields a final average of `37.5` instead.\r\n * \r\n * Use `clear()` to reset the moving average, or `compute()` to get the current value without adding.\r\n * @param scaling Scaling factor. 1 is no smoothing. Default: 3\r\n * @returns {@link MovingAverage} \r\n */\r\nexport const movingAverageLight = (scaling:number = 3):MovingAverage => {\r\n  guardInteger(scaling, `aboveZero`, `scaling`);\r\n  //eslint-disable-next-line functional/no-let\r\n  let average = 0;\r\n  //eslint-disable-next-line functional/no-let\r\n  let count = 0;\r\n\r\n  const ma:MovingAverage = {\r\n    add(v:number) {\r\n      count++;\r\n      average = average + (v - average) / Math.min(count, scaling);\r\n      return average;\r\n    },\r\n    clear() {\r\n      average = 0;\r\n      count = 0;\r\n    },\r\n    compute() {\r\n      return average;\r\n    }\r\n  };\r\n  return ma;\r\n};\r\n\r\n/**\r\n * Creates a moving average for a set number of `samples`.\r\n * \r\n * Moving average are useful for computing the average over a recent set of numbers.\r\n * A lower number of samples produces a computed value that is lower-latency yet more jittery.\r\n * A higher number of samples produces a smoother computed value which takes longer to respond to\r\n * changes in data.\r\n * \r\n * Sample size is considered with respect to the level of latency/smoothness trade-off, and also\r\n * the rate at which new data is added to the moving average.\r\n * \r\n* `add` adds a number and returns the computed average. Call `compute` to \r\n * get the average without adding a new value.\r\n * \r\n * ```js\r\n * const ma = movingAverage(10);\r\n * ma.add(10); // 10\r\n * ma.add(5);  // 7.5\r\n * ```\r\n * \r\n * `clear` clears the average.\r\n * \r\n * A weighting function can be provided to shape how the average is\r\n * calculated - eg privileging the most recent data over older data.\r\n * It uses `Arrays.averageWeighted` under the hood.\r\n * \r\n * ```js\r\n * // Give more weight to data in middle of sampling window\r\n * const ma = movingAverage(100, Easings.gaussian());\r\n * ```\r\n * \r\n * Because it keeps track of `samples` previous data, there is a memory impact. A lighter version is {@link movingAverageLight} which does not keep a buffer of prior data, but can't be as easily fine-tuned.\r\n * @param samples Number of samples to compute average from\r\n * @param weightingFn Optional weighting function\r\n * @returns \r\n */\r\nexport const movingAverage = (samples = 100, weightingFn?:(v:number)=>number):MovingAverage => {\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let q = queueMutable<number>({\r\n    capacity: samples,\r\n    discardPolicy: `older`\r\n  });\r\n  \r\n  const clear = () => {\r\n    q = queueMutable<number>({\r\n      capacity: samples,\r\n      discardPolicy: `older`\r\n    });\r\n  };\r\n\r\n  const compute = () => {\r\n    if (weightingFn === undefined) {\r\n      return Arrays.average(...q.data);\r\n    } else {\r\n      return Arrays.averageWeighted(q.data, weightingFn);\r\n    }\r\n  };\r\n\r\n  const add = (v:number) => {\r\n    q.enqueue(v);\r\n    return compute();\r\n  };\r\n\r\n  return { add, compute, clear };\r\n};\r\n\r\n/**\r\n * Moving average.\r\n * Create via {@link movingAverage} or {@link movingAverageLight}.\r\n */\r\nexport type MovingAverage = {\r\n  /**\r\n   * Clear data\r\n   */\r\n  clear():void\r\n  /**\r\n   * Returns current average\r\n   */\r\n  compute():number\r\n  /**\r\n   * Adds a value, returning new average\r\n   * @param v Value to add\r\n   */\r\n  add(v:number):number\r\n}\r\n","import {NumberTracker} from \"./NumberTracker.js\";\r\nimport {TrackedValueOpts as TrackOpts} from \"./TrackedValue.js\";\r\n\r\n/**\r\n * A `Tracker` that tracks interval between calls to `mark()`\r\n *\r\n * @export\r\n * @class IntervalTracker\r\n * @extends {ValueTracker}\r\n */\r\nexport class IntervalTracker extends NumberTracker {\r\n  lastMark = 0;\r\n\r\n  mark() {\r\n    if (this.lastMark > 0) {\r\n      this.seen(window.performance.now() - this.lastMark);\r\n    }\r\n    this.lastMark = window.performance.now();\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a new {@link IntervalTracker} instance. IntervalTracker\r\n * records the interval between each call to `mark`.\r\n * \r\n * ```js\r\n * const t = intervalTracker();\r\n * \r\n * // Call `mark` to record an interval\r\n * t.mark();\r\n * ...\r\n * t.mark();\r\n * \r\n * // Get average time in milliseconds between calls to `mark`\r\n * t.avg;\r\n * \r\n * // Longest and shortest times are available too...\r\n * t.min; t.max\r\n * ```\r\n * \r\n * Interval tracker can automatically reset after a given number of samples:\r\n * ```\r\n * // Reset after 100 samples\r\n * const t = intervalTracker(`tracker`, 100);\r\n * ```\r\n * @param id Optional id of instance\r\n * @returns New interval tracker\r\n */\r\nexport const intervalTracker = (id:string, opts:TrackOpts) => new IntervalTracker(id, opts);","import {NumberFunction} from \".\";\r\nimport { number as guardNumber} from \"../Guards.js\";\r\n\r\n/**\r\n * Flips a percentage-scale number: `1 - v`.\r\n * \r\n * The utility of this function is that it sanity-checks\r\n * that `v` is in 0..1 scale.\r\n * \r\n * ```js\r\n * flip(1);   // 0\r\n * flip(0.5); // 0.5\r\n * flip(0);   // 1\r\n * ```\r\n * @param v \r\n * @returns \r\n */\r\nexport const flip = (v:number|NumberFunction) => {\r\n  if (typeof v === `function`) v = v();\r\n  guardNumber(v, `percentage`, `v`);\r\n  return 1 - v;\r\n};","import { number as guardNumber, integer as guardInteger} from \"../Guards.js\";\r\n\r\n/**\r\n * Wraps am integer number within a specified range, defaulting to degrees (0-360)\r\n * \r\n * This is useful for calculations involving degree angles and hue, which wrap from 0-360.\r\n * Eg: to add 200 to 200, we don't want 400, but 40.\r\n * \r\n * ```js\r\n * const v = wrap(200+200, 0, 360); // 40\r\n * ```\r\n * \r\n * Or if we minus 100 from 10, we don't want -90 but 270\r\n * ```js\r\n * const v = wrap(10-100, 0, 360); // 270\r\n * ```\r\n * \r\n * `wrap` uses 0-360 as a default range, so both of these\r\n * examples could just as well be:\r\n * \r\n * ```js\r\n * wrap(200+200);  // 40\r\n * wrap(10-100);  // 270\r\n * ```\r\n * \r\n * Non-zero starting points can be used. A range of 20-70: \r\n * ```js\r\n * const v = wrap(-20, 20, 70); // 50 \r\n * ```\r\n * \r\n * Note that the minimum value is inclusive, while the maximum is _exclusive_.\r\n * So with the default range of 0-360, 360 is never reached:\r\n * \r\n * ```js\r\n * wrap(360); // 0\r\n * wrap(361); // 1\r\n * ```\r\n * \r\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\r\n * \r\n * @param v Value to wrap\r\n * @param min Integer minimum of range (default: 0). Inclusive\r\n * @param max Integer maximum of range (default: 360). Exlusive\r\n * @returns \r\n */\r\nexport const wrapInteger = (v:number, min:number = 0, max:number = 360) => {\r\n  guardInteger(v, undefined, `v`);\r\n  guardInteger(min, undefined, `min`);\r\n  guardInteger(max, undefined, `max`);\r\n\r\n  if (v === min) return min;\r\n  if (v === max) return min; // Wraps\r\n  if (v > 0 && v < min) v += min;\r\n  \r\n  v -= min;\r\n  max -= min;\r\n  v = v%max;\r\n  \r\n  if (v < 0) v = max - Math.abs(v) + min;\r\n  return v + min;\r\n};\r\n\r\n/**\r\n * Wraps floating point numbers to be within a range (default: 0..1).\r\n * \r\n * This logic makes sense for some things like rotation angle.\r\n * \r\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\r\n * \r\n * ```js\r\n * wrap(1.2);   // 0.2\r\n * wrap(2);     // 1.0\r\n * wrap(-0.2); // 0.8\r\n * ```\r\n * \r\n * A range can be provided too:\r\n * ```js\r\n * wrap(30, 20, 50);  \t // 30\r\n * wrap(60, 20, 50);    //  30 \r\n * ```\r\n * @param v \r\n * @param min \r\n * @param max \r\n * @returns \r\n */\r\nexport const wrap = (v:number, min: number = 0, max:number = 1) => {\r\n  guardNumber(v, ``, `min`);\r\n  guardNumber(min, ``, `min`);\r\n  guardNumber(max, ``, `max`);\r\n\r\n  if (v === min) return min;\r\n  if (v === max) return min; // Wraps\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while (v <= min || v >= max) {\r\n    if (v === max) break;\r\n    if (v === min) break;\r\n    if (v > max) {\r\n      v = min + (v-max);\r\n    } else if (v < min) {\r\n      v = max - (min-v);\r\n    }\r\n  }\r\n  return v;\r\n};\r\n\r\n/**\r\n * Performs a calculation within a wrapping number range. This is a lower-level function.\r\n * See also: {@link wrapInteger} for simple wrapping within a range.\r\n * \r\n * `min` and `max` define the start and end of the valid range, inclusive. Eg for hue degrees it'd be 0, 360.\r\n * `a` and `b` is the range you want to work in. \r\n * \r\n * For example, let's say you want to get the middle point between a hue of 30 and a hue of 330 (ie warmer colours):\r\n * ```js\r\n * wrapRange(0,360, (distance) => {\r\n *  // for a:0 and b:330, distance would be 90 from 30 degrees to 330 (via zero)\r\n *  return distance * 0.5; // eg return middle point \r\n * }, 30, 330);\r\n * ```\r\n * \r\n * The return value of the callback should be in the range of 0-distance. `wrapRange` will subsequently\r\n * conform it to the `min` and `max` range before it's returned to the caller.\r\n * \r\n * @param a Output start (eg. 60)\r\n * @param b Output end (eg 300)\r\n * @param min Range start (eg 0)\r\n * @param max Range end (eg 360)\r\n * @param fn Returns a computed value from 0 to `distance`.\r\n * @returns \r\n */\r\nexport const wrapRange = (min:number, max:number, fn:(distance:number)=>number, a:number, b:number) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let r = 0;\r\n  // No wrapping\r\n  const distF = Math.abs(b - a);\r\n  // When b is wrapped forwards\r\n  const distFwrap = Math.abs(max-a + b);\r\n  // When b is wrapped backwards (10, 300)\r\n  const distBWrap = Math.abs(a + (360-b));\r\n  \r\n  const distMin = Math.min(distF, distFwrap, distBWrap);\r\n  if (distMin === distBWrap) {\r\n    // (10, 300) = 70\r\n    r = a - fn(distMin);\r\n  } else if (distMin === distFwrap) {\r\n    // (300, 60) = 120\r\n    r = a + fn(distMin);\r\n  } else {\r\n    // Forwards or backwards without wrapping\r\n    if (a > b) {\r\n      // (240,120) -- backwards\r\n      r = a - fn(distMin);\r\n    } else {\r\n      // (120,240) -- forwards\r\n      r = a + fn(distMin);\r\n    }\r\n  }\r\n  return wrapInteger(r, min, max); \r\n};\r\n","import {piPi} from \".\";\r\nimport {wrap} from \"./Wrap.js\";\r\n\r\n/**\r\n * Interpolates between `a` and `b` by `amount`. Aka `lerp`.\r\n * \r\n * @example Get the halfway point between 30 and 60\r\n * ```js\r\n * interpolate(0.5, 30, 60);\r\n * ```\r\n * \r\n * Interpolation is often used for animation. In that case, `amount`\r\n * would start at 0 and you would keep interpolating up to `1`\r\n * @example\r\n * ```js\r\n * // Go back and forth between 0 and 1 by 0.1\r\n * let pp = percentPingPong(0.1);\r\n * continuously(() => {\r\n *  // Get position in ping-pong\r\n *  const amt = pp.next().value;\r\n *  // interpolate between Math.PI and Math.PI*2\r\n *  const v = interpolate(amt, Math.PI, Math.PI*2); \r\n *  // do something with v...\r\n * }).start();\r\n * ```\r\n * \r\n * See also {@link Visual.Colour.interpolate | Visual.Colour.interpolate }, {@link Geometry.Points.interpolate | Geometry.Points.interpolate}.\r\n * @param amount Interpolation amount, between 0 and 1 inclusive\r\n * @param a Start (ie when `amt` is 0)\r\n * @param b End (ie. when `amt` is 1)\r\n * @returns Interpolated value which will be between `a` and `b`.\r\n */\r\nexport const interpolate =(amount:number, a:number, b:number):number => {\r\n  const v = (1-amount) * a + amount * b;\r\n  return v;\r\n};\r\n\r\nexport const interpolateAngle = (amount:number, angleA:number, angleB:number):number => {\r\n  const t = wrap(angleB-angleA, 0, piPi);\r\n  return interpolate(amount, angleA, angleA + (t > Math.PI ? t - piPi : t));\r\n};"],"mappings":"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","names":[]}