{"version":3,"sources":["../src/visual/index.ts","../src/visual/Drawing.ts","../node_modules/color2k/src/guard.ts","../node_modules/color2k/src/ColorError.ts","../node_modules/color2k/src/parseToRgba.ts","../node_modules/color2k/src/parseToHsla.ts","../node_modules/color2k/src/hsla.ts","../node_modules/color2k/src/adjustHue.ts","../node_modules/color2k/src/darken.ts","../node_modules/color2k/src/desaturate.ts","../node_modules/color2k/src/getLuminance.ts","../node_modules/color2k/src/getContrast.ts","../node_modules/color2k/src/rgba.ts","../node_modules/color2k/src/mix.ts","../node_modules/color2k/src/getScale.ts","../node_modules/color2k/src/hasBadContrast.ts","../node_modules/color2k/src/lighten.ts","../node_modules/color2k/src/transparentize.ts","../node_modules/color2k/src/opacify.ts","../node_modules/color2k/src/readableColorIsBlack.ts","../node_modules/color2k/src/readableColor.ts","../node_modules/color2k/src/saturate.ts","../node_modules/color2k/src/toHex.ts","../node_modules/color2k/src/toRgba.ts","../node_modules/color2k/src/toHsla.ts","../src/visual/Svg.ts","../src/visual/Plot2.ts","../src/collections/MutableCircularArray.ts","../src/collections/MutableMapMulti.ts","../src/visual/Palette.ts","../src/visual/DictionaryOfColourCombinations.ts","../src/visual/DictionaryOfColourCombinationsData.ts"],"sourcesContent":["import * as Drawing from './Drawing.js';\r\nimport * as Svg from './Svg.js';\r\nimport * as Plot from './Plot2.js';\r\nimport * as DictionaryOfColourCombinations from './DictionaryOfColourCombinations';\r\n\r\nexport {Drawing, Svg, Plot, DictionaryOfColourCombinations};\r\n\r\nimport {Palette} from './Palette';\r\n\r\nexport {Palette};","import * as Points from '../geometry/Point.js';\r\nimport * as Paths from '../geometry/Path.js';\r\nimport * as Lines from '../geometry/Line.js';\r\nimport {array as guardArray} from '../Guards.js';\r\nimport * as Circles from '../geometry/Circle.js';\r\nimport * as Arcs from '../geometry/Arc.js';\r\nimport * as Beziers from '../geometry/Bezier.js';\r\nimport * as Rects from '../geometry/Rect.js';\r\nimport * as color2k from 'color2k';\r\nimport {stack, Stack} from '../collections/Stack.js';\r\nimport {resolveEl} from '../dom/Forms.js';\r\nimport { resizeObservable } from '../dom/index.js';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst PIPI = Math.PI * 2;\r\n\r\nexport const autoSizeCanvas = (canvasEl:HTMLCanvasElement, callback:() => void, timeoutMs:number = 1000) => {\r\n  const ro = resizeObservable(canvasEl, timeoutMs).subscribe((entries:readonly ResizeObserverEntry[]) => {\r\n    const e = entries.find(v => v.target === canvasEl);\r\n    if (e === undefined) return;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    canvasEl.width = e.contentRect.width;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    canvasEl.height = e.contentRect.height;\r\n    callback();\r\n  });\r\n  return ro;\r\n};\r\n\r\ntype CanvasCtxQuery = null | string | CanvasRenderingContext2D | HTMLCanvasElement;\r\nexport const getCtx = (canvasElCtxOrQuery:CanvasCtxQuery): CanvasRenderingContext2D => {\r\n  if (canvasElCtxOrQuery === null) throw Error(`canvasElCtxOrQuery null. Must be a 2d drawing context or Canvas element`);\r\n  if (canvasElCtxOrQuery === undefined) throw Error(`canvasElCtxOrQuery undefined. Must be a 2d drawing context or Canvas element`);\r\n  \r\n  const ctx = (canvasElCtxOrQuery instanceof CanvasRenderingContext2D) ?\r\n    canvasElCtxOrQuery : (canvasElCtxOrQuery instanceof HTMLCanvasElement) ?\r\n      canvasElCtxOrQuery.getContext(`2d`) : (typeof canvasElCtxOrQuery === `string`) ?\r\n        resolveEl<HTMLCanvasElement>(canvasElCtxOrQuery).getContext(`2d`): canvasElCtxOrQuery;\r\n  if (ctx === null) throw new Error(`Could not create 2d context for canvas`);\r\n  return ctx;\r\n};\r\n\r\n// TODO: Is there a way of automagically defining makeHelper to avoid repetition and keep typesafety and JSDoc?\r\nexport const makeHelper = (ctxOrCanvasEl:CanvasCtxQuery, canvasBounds?:Rects.Rect) => {\r\n  const ctx = getCtx(ctxOrCanvasEl);\r\n  return {\r\n    paths(pathsToDraw: Paths.Path[], opts?: DrawingOpts): void {\r\n      paths(ctx, pathsToDraw, opts);\r\n    },\r\n    line(lineToDraw: Lines.Line|Lines.Line[], opts?: DrawingOpts): void {\r\n      line(ctx, lineToDraw, opts);\r\n    },\r\n    rect(rectsToDraw:Rects.RectPositioned|Rects.RectPositioned[], opts?:DrawingOpts & { filled?:boolean}): void {\r\n      rect(ctx, rectsToDraw, opts);\r\n    },\r\n    bezier(bezierToDraw: Beziers.QuadraticBezier|Beziers.CubicBezier, opts?:DrawingOpts): void {\r\n      bezier(ctx, bezierToDraw, opts);\r\n    },\r\n    connectedPoints(pointsToDraw: Points.Point[], opts?: DrawingOpts & {loop?: boolean}): void {\r\n      connectedPoints(ctx, pointsToDraw, opts);\r\n    },\r\n    pointLabels(pointsToDraw: Points.Point[], opts?:DrawingOpts): void {\r\n      pointLabels(ctx, pointsToDraw, opts);\r\n    },\r\n    dot(dotPosition: Points.Point|Points.Point[], opts?: DrawingOpts & {radius: number, outlined?: boolean, filled?: boolean}): void {\r\n      dot(ctx, dotPosition, opts);\r\n    },\r\n    circle(circlesToDraw:Circles.CirclePositioned|Circles.CirclePositioned[], opts:DrawingOpts):void {\r\n      circle(ctx, circlesToDraw, opts);\r\n    },\r\n    arc(arcsToDraw:Arcs.ArcPositioned|Arcs.ArcPositioned[], opts:DrawingOpts):void {\r\n      arc(ctx, arcsToDraw, opts);\r\n    },\r\n    textBlock(lines:string[], opts:DrawingOpts & { anchor:Points.Point, anchorPadding?:number, bounds?: Rects.RectPositioned}):void {\r\n      if (opts.bounds === undefined && canvasBounds !== undefined) opts = {...opts, bounds: {...canvasBounds, x:0, y:0 }};\r\n      textBlock(ctx, lines, opts);\r\n    }\r\n  };\r\n};\r\n\r\ntype DrawingOpts = {\r\n  readonly strokeStyle?:string\r\n  readonly fillStyle?:string\r\n  readonly debug?:boolean\r\n};\r\n\r\nconst optsOp = (opts:DrawingOpts):StackOp => coloringOp(opts.strokeStyle, opts.fillStyle);\r\n\r\nconst applyOpts = (ctx:CanvasRenderingContext2D, opts:DrawingOpts = {}):DrawingStack => {\r\n  if (ctx === undefined) throw Error(`ctx undefined`);\r\n\r\n  // Create a drawing stack, pushing an op generated from drawing options\r\n  const stack = drawingStack(ctx).push(optsOp(opts));\r\n  \r\n  // Apply stack to context\r\n  stack.apply();\r\n  return stack;\r\n};\r\n\r\nexport const arc = (ctx:CanvasRenderingContext2D, arcs:Arcs.ArcPositioned|ReadonlyArray<Arcs.ArcPositioned>, opts:DrawingOpts = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (arc:Arcs.ArcPositioned) => {\r\n    ctx.beginPath();\r\n    ctx.arc(arc.x, arc.y, arc.radius, arc.startRadian, arc.endRadian);\r\n    ctx.stroke();\r\n  };\r\n\r\n  if (Array.isArray(arcs)) {\r\n    arcs.forEach(draw);\r\n  } else draw(arcs as Arcs.ArcPositioned);\r\n};\r\n\r\ntype StackOp = (ctx:CanvasRenderingContext2D) => void\r\n/*\r\n * apply(ctx:CanvasRenderingContext2D):void\r\n * remove(ctx:CanvasRenderingContext2D):void\r\n */\r\n\r\ntype DrawingStack = Readonly<{\r\n  push(op:StackOp):DrawingStack\r\n  pop():DrawingStack\r\n  apply():DrawingStack\r\n}>\r\n\r\nconst coloringOp = (strokeStyle:string|CanvasGradient|CanvasPattern|undefined, fillStyle:string|CanvasGradient|CanvasPattern|undefined):StackOp => {\r\n\r\n  const apply = (ctx:CanvasRenderingContext2D) => {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (fillStyle) ctx.fillStyle = fillStyle;\r\n    // eslint-disable-next-line functional/immutable-data\r\n    if (strokeStyle) ctx.strokeStyle = strokeStyle;\r\n  };\r\n  return apply;\r\n};\r\n\r\nexport const drawingStack = (ctx:CanvasRenderingContext2D, stk?:Stack<StackOp>):DrawingStack => {\r\n  if (stk === undefined) stk = stack<StackOp>();\r\n\r\n  const push = (op:StackOp):DrawingStack => {\r\n    if (stk === undefined) stk = stack<StackOp>();\r\n    const s = stk.push(op);\r\n    op(ctx);\r\n    return drawingStack(ctx, s);\r\n  };\r\n\r\n  const pop = ():DrawingStack => {\r\n    const s = stk?.pop();\r\n    return drawingStack(ctx, s);\r\n  };\r\n\r\n  const apply = ():DrawingStack => {\r\n    if (stk === undefined) return drawingStack(ctx);\r\n    stk.forEach(op => op(ctx));\r\n    return drawingStack(ctx, stk);\r\n  };\r\n\r\n  return {push, pop, apply};\r\n};\r\n\r\nexport const circle = (ctx:CanvasRenderingContext2D, circlesToDraw:Circles.CirclePositioned|readonly Circles.CirclePositioned[], opts:DrawingOpts = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (c:Circles.CirclePositioned) => {\r\n    ctx.beginPath();\r\n    ctx.arc(c.x, c.y, c.radius, 0, PIPI);\r\n    ctx.stroke();\r\n  };\r\n  if (Array.isArray(circlesToDraw)) circlesToDraw.forEach(draw);\r\n  else draw(circlesToDraw as Circles.CirclePositioned);\r\n};\r\n\r\nexport const paths = (ctx: CanvasRenderingContext2D, pathsToDraw: readonly Paths.Path[]|Paths.Path, opts: Readonly<{readonly strokeStyle?: string, readonly debug?: boolean}> = {}) =>  {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (path:Paths.Path) => {\r\n    // Call appropriate drawing function depending on the type of path\r\n    if (Beziers.isQuadraticBezier(path)) quadraticBezier(ctx, path, opts);\r\n    else if (Lines.isLine(path)) line(ctx, path, opts);\r\n    else throw new Error(`Unknown path type ${JSON.stringify(path)}`);\r\n  };\r\n\r\n  if (Array.isArray(pathsToDraw)) pathsToDraw.forEach(draw);\r\n  else draw(pathsToDraw as Paths.Path);\r\n};\r\n\r\n/**\r\n * Draws a line between all the given points.\r\n *\r\n * @export\r\n * @param {CanvasRenderingContext2D} ctx\r\n * @param {...Points.Point[]} pts\r\n * @returns {void}\r\n */\r\nexport const connectedPoints = (ctx: CanvasRenderingContext2D, pts: readonly Points.Point[], opts: {readonly loop?: boolean, readonly strokeStyle?: string} = {}) => {\r\n  const shouldLoop = opts.loop ?? false;\r\n\r\n  guardArray(pts);\r\n  if (pts.length === 0) return;\r\n\r\n  // Throw an error if any point is invalid\r\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  // Draw points\r\n  ctx.beginPath();\r\n  ctx.moveTo(pts[0].x, pts[0].y);\r\n  pts.forEach((pt) => ctx.lineTo(pt.x, pt.y));\r\n\r\n  if (shouldLoop) ctx.lineTo(pts[0].x, pts[0].y);\r\n  // if (opts.strokeStyle) ctx.strokeStyle = opts.strokeStyle;\r\n  ctx.stroke();\r\n};\r\n\r\nexport const pointLabels = (ctx: CanvasRenderingContext2D, pts: readonly Points.Point[], opts: {readonly fillStyle?:string} = {}, labels?:readonly string[]) => {\r\n  if (pts.length === 0) return;\r\n\r\n  // Throw an error if any point is invalid\r\n  pts.forEach((pt, i) => Points.guard(pt, `Index ${i}`));\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  pts.forEach((pt, i) => {\r\n    const label = (labels !== undefined && i<labels.length) ? labels[i] : i.toString();\r\n    ctx.fillText(label.toString(), pt.x, pt.y);    \r\n  });\r\n};\r\n\r\n\r\nconst dot = (ctx: CanvasRenderingContext2D, pos: Points.Point|readonly Points.Point[], opts?: DrawingOpts & {readonly radius?: number, readonly outlined?: boolean, readonly filled?: boolean})  => {\r\n  if (opts === undefined) opts = {};\r\n  const radius = opts.radius ?? 10;\r\n  \r\n  applyOpts(ctx, opts);\r\n\r\n  ctx.beginPath();\r\n\r\n  // x&y for arc is the center of circle\r\n  if (Array.isArray(pos)) {\r\n    pos.forEach(p => {\r\n      ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\r\n    });\r\n  } else {\r\n    const p = pos as Points.Point;\r\n    ctx.arc(p.x, p.y, radius, 0, 2 * Math.PI);\r\n  }\r\n\r\n  if (opts.filled || !opts.outlined) ctx.fill();\r\n  if (opts.outlined) ctx.stroke();\r\n\r\n};\r\n\r\nexport const bezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.QuadraticBezier|Beziers.CubicBezier, opts?: DrawingOpts) => {\r\n  if (Beziers.isQuadraticBezier(bezierToDraw)) {\r\n    quadraticBezier(ctx, bezierToDraw, opts);\r\n  } else if (Beziers.isCubicBezier(bezierToDraw)) {\r\n    cubicBezier(ctx, bezierToDraw, opts);\r\n  }\r\n};\r\n\r\nconst cubicBezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.CubicBezier, opts: DrawingOpts = {}) => {\r\n  // eslint-disable-next-line functional/no-let\r\n  let stack = applyOpts(ctx, opts);\r\n\r\n  const {a, b, cubic1, cubic2} = bezierToDraw;\r\n  const isDebug = opts.debug ?? false;\r\n\r\n  if (isDebug) {\r\n    /*\r\n     * const ss = ctx.strokeStyle;\r\n     * ctx.strokeStyle = ss;\r\n     */\r\n  }\r\n  ctx.beginPath();\r\n  ctx.moveTo(a.x, a.y);\r\n  ctx.bezierCurveTo(cubic1.x, cubic1.y, cubic2.x, cubic2.y, b.x, b.y);\r\n  ctx.stroke();\r\n\r\n  if (isDebug) {\r\n    stack = stack.push(optsOp({...opts, \r\n      strokeStyle: color2k.transparentize(opts.strokeStyle ?? `silver`, 0.6),\r\n      fillStyle: color2k.transparentize(opts.fillStyle ?? `yellow`, 0.4)}));\r\n\r\n    stack.apply();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.lineTo(cubic1.x, cubic1.y);\r\n    ctx.stroke();\r\n    ctx.moveTo(b.x, b.y);\r\n    ctx.lineTo(cubic2.x, cubic2.y);\r\n    ctx.stroke();\r\n\r\n    ctx.fillText(`a`, a.x + 5, a.y);\r\n    ctx.fillText(`b`, b.x + 5, b.y);\r\n    ctx.fillText(`c1`, cubic1.x + 5, cubic1.y);\r\n    ctx.fillText(`c2`, cubic2.x + 5, cubic2.y);\r\n\r\n    dot(ctx, cubic1, {radius: 3});\r\n    dot(ctx, cubic2, {radius: 3});\r\n    dot(ctx, a, {radius: 3});\r\n    dot(ctx, b, {radius: 3});\r\n    stack = stack.pop();\r\n    stack.apply();\r\n  }\r\n\r\n};\r\n\r\nconst quadraticBezier = (ctx: CanvasRenderingContext2D, bezierToDraw: Beziers.QuadraticBezier, opts: DrawingOpts = {}) => {\r\n  const {a, b, quadratic} = bezierToDraw;\r\n  const isDebug = opts.debug ?? false;\r\n  // eslint-disable-next-line functional/no-let\r\n  let stack = applyOpts(ctx, opts);\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(a.x, a.y);\r\n  ctx.quadraticCurveTo(quadratic.x, quadratic.y, b.x, b.y);\r\n  ctx.stroke();\r\n\r\n  if (isDebug) {\r\n    /*\r\n     * const fs = ctx.fillStyle;\r\n     * const ss = ctx.strokeStyle;\r\n     * ctx.fillStyle = opts.strokeStyle ?? `gray`;\r\n     * ctx.strokeStyle = opts.strokeStyle ?? `gray`;\r\n     */\r\n    stack = stack.push(optsOp({...opts, \r\n      strokeStyle: color2k.transparentize(opts.strokeStyle ?? `silver`, 0.6),\r\n      fillStyle: color2k.transparentize(opts.fillStyle ?? `yellow`, 0.4)}));\r\n    connectedPoints(ctx, [a, quadratic, b]);\r\n\r\n    ctx.fillText(`a`, a.x + 5, a.y);\r\n    ctx.fillText(`b`, b.x + 5, b.y);\r\n    ctx.fillText(`h`, quadratic.x + 5, quadratic.y);\r\n    dot(ctx, quadratic, {radius: 3});\r\n    dot(ctx, a, {radius: 3});\r\n    dot(ctx, b, {radius: 3});\r\n    /*\r\n     * ctx.fillStyle = fs;\r\n     * ctx.strokeStyle = ss;\r\n     */\r\n    stack = stack.pop();\r\n    stack.apply();\r\n  }\r\n\r\n};\r\n\r\nexport const line = (ctx: CanvasRenderingContext2D, toDraw: Lines.Line|readonly Lines.Line[], opts: {readonly strokeStyle?: string, readonly debug?: boolean} = {}) => {\r\n  const isDebug = opts.debug ?? false;\r\n\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (d:Lines.Line) => {\r\n    const {a, b} = d;\r\n    ctx.beginPath();\r\n    ctx.moveTo(a.x, a.y);\r\n    ctx.lineTo(b.x, b.y);\r\n    if (isDebug) { \r\n      ctx.fillText(`a`, a.x, a.y);\r\n      ctx.fillText(`b`, b.x, b.y);\r\n      dot(ctx, a, {radius: 5, strokeStyle: `black`});\r\n      dot(ctx, b, {radius: 5, strokeStyle: `black`});\r\n    }\r\n    ctx.stroke();\r\n  };\r\n\r\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\r\n  else draw(toDraw as Lines.Line);\r\n\r\n};\r\n\r\nexport const rect = (ctx: CanvasRenderingContext2D, toDraw: Rects.RectPositioned|readonly Rects.RectPositioned[], opts: DrawingOpts & {readonly filled?:boolean} = {}) => {\r\n  applyOpts(ctx, opts);\r\n\r\n  const draw = (d:Rects.RectPositioned) => {\r\n    if (opts.filled) ctx.fillRect(d.x, d.y, d.width, d.height);\r\n    ctx.strokeRect(d.x, d.y, d.width, d.height);\r\n\r\n    if (opts.debug) {\r\n      pointLabels(ctx, Rects.getCorners(d), undefined, [`NW`, `NE`, `SE`, `SW`]);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(toDraw)) toDraw.forEach(draw);\r\n  else draw(toDraw as Rects.RectPositioned);\r\n};\r\n\r\nexport const textBlock = (ctx:CanvasRenderingContext2D, lines:readonly string[], opts:DrawingOpts & {readonly anchor:Points.Point, readonly anchorPadding?:number, readonly bounds?: Rects.RectPositioned}) => {\r\n  applyOpts(ctx, opts);\r\n  const anchorPadding = opts.anchorPadding ?? 0;\r\n\r\n  const anchor = opts.anchor;\r\n  const bounds = opts.bounds ?? {x:0, y:0, width:1000000, height:1000000};\r\n\r\n  // Measure each line\r\n  const blocks = lines.map(l => ctx.measureText(l));\r\n\r\n  // Get width and height\r\n  const widths = blocks.map(tm => tm.width);\r\n  const heights = blocks.map(tm => tm.actualBoundingBoxAscent + tm.actualBoundingBoxDescent);\r\n\r\n  // Find extremes\r\n  const maxWidth = Math.max(...widths);\r\n  const totalHeight = heights.reduce((acc, val) => acc+val, 0);\r\n\r\n  // eslint-disable-next-line functional/no-let\r\n  let {x, y} = anchor;\r\n\r\n  if (anchor.x + maxWidth > bounds.width) x = bounds.width - (maxWidth + anchorPadding);\r\n  else x -= anchorPadding;\r\n  \r\n  if (x < bounds.x) x = bounds.x + anchorPadding;\r\n\r\n  if (anchor.y + totalHeight > bounds.height) y = bounds.height - (totalHeight + anchorPadding);\r\n  else y -= anchorPadding;\r\n\r\n  if (y < bounds.y) y = bounds.y + anchorPadding;\r\n\r\n  lines.forEach((line, i) => {\r\n    ctx.fillText(line, x, y);\r\n    y += heights[i];\r\n  });\r\n};","/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low: number, high: number, value: number): number {\n  return Math.min(Math.max(low, value), high);\n}\n\nexport default guard;\n","class ColorError extends Error {\n  constructor(color: string) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\n\nexport default ColorError;\n","import guard from './guard';\nimport ColorError from './ColorError';\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color: string): [number, number, number, number] {\n  if (typeof color !== 'string') throw new ColorError(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(r(x, 2), 16)),\n      parseInt(r(arr[3] || 'f', 2), 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 16)),\n      parseInt(arr[3] || 'ff', 16) / 255,\n    ] as [number, number, number, number];\n  }\n\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [\n      ...arr.slice(0, 3).map((x) => parseInt(x, 10)),\n      parseFloat(arr[3] || '1'),\n    ] as [number, number, number, number];\n  }\n\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError(color);\n    if (guard(0, 100, l) !== l) throw new ColorError(color);\n    return [...hslToRgb(h, s, l), a || 1] as [number, number, number, number];\n  }\n\n  throw new ColorError(color);\n}\n\nfunction hash(str: string) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\n\nconst colorToInt = (x: string) => parseInt(x.replace(/_/g, ''), 36);\n\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'\n  .split(' ')\n  .reduce((acc, next) => {\n    const key = colorToInt(next.substring(0, 3));\n    const hex = colorToInt(next.substring(3)).toString(16);\n\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    let prefix = '';\n    for (let i = 0; i < 6 - hex.length; i++) {\n      prefix += '0';\n    }\n\n    acc[key] = `${prefix}${hex}`;\n    return acc;\n  }, {} as { [key: string]: string });\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color: string): string {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError(color);\n  return `#${result}`;\n}\n\nconst r = (str: string, amount: number) =>\n  Array.from(Array(amount))\n    .map(() => str)\n    .join('');\n\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(\n  `^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(\n    ',\\\\s*(\\\\d+)\\\\s*',\n    2\n  )}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`,\n  'i'\n);\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\n\nconst roundColor = (color: number): number => {\n  return Math.round(color * 255);\n};\n\nconst hslToRgb = (\n  hue: number,\n  saturation: number,\n  lightness: number\n): [number, number, number] => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor) as [number, number, number];\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (((hue % 360) + 360) % 360) / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));\n\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n\n  return [finalRed, finalGreen, finalBlue].map(roundColor) as [\n    number,\n    number,\n    number\n  ];\n};\n\nexport default parseToRgba;\n","// taken from:\n// https://github.com/styled-components/polished/blob/a23a6a2bb26802b3d922d9c3b67bac3f3a54a310/src/internalHelpers/_rgbToHsl.js\nimport parseToRgba from './parseToRgba';\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color: string): [number, number, number, number] {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n    // 3rd index is alpha channel which is already normalized\n    index === 3 ? value : value / 255\n  );\n\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n\n  const delta = max - min;\n  const saturation =\n    lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  const hue =\n    60 *\n    (red === max\n      ? (green - blue) / delta + (green < blue ? 6 : 0)\n      : green === max\n      ? (blue - red) / delta + 2\n      : (red - green) / delta + 4);\n\n  return [hue, saturation, lightness, alpha];\n}\n\nexport default parseToHsla;\n","import guard from './guard';\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(\n  hue: number,\n  saturation: number,\n  lightness: number,\n  alpha: number\n): string {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(\n    0,\n    100,\n    saturation * 100\n  ).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(\n    guard(0, 1, alpha).toFixed(3)\n  )})`;\n}\n\nexport default hsla;\n","import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color: string, degrees: number): string {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\nexport default adjustHue;\n","import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color: string, amount: number): string {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\nexport default darken;\n","import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color: string, amount: number): string {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\nexport default desaturate;\n","import parseToRgba from './parseToRgba';\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color: string): number {\n  if (color === 'transparent') return 0;\n\n  function f(x: number) {\n    const channel = x / 255;\n    return channel <= 0.03928\n      ? channel / 12.92\n      : Math.pow(((channel + 0.055) / 1.055), 2.4);\n  }\n\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\nexport default getLuminance;\n","// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getContrast.js\nimport getLuminance from './getLuminance';\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1: string, color2: string): number {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n\n  return luminance1 > luminance2\n    ? (luminance1 + 0.05) / (luminance2 + 0.05)\n    : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\nexport default getContrast;\n","import guard from './guard';\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red: number, green: number, blue: number, alpha: number): string {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(\n    0,\n    255,\n    green\n  ).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(\n    guard(0, 1, alpha).toFixed(3)\n  )})`;\n}\n\nexport default rgba;\n","import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1: string, color2: string, weight: number): string {\n  const normalize = (n: number, index: number) =>\n    // 3rd index is alpha channel which is already normalized\n    index === 3 ? n : n / 255;\n\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight =\n    normalizedWeight * alphaDelta === -1\n      ? normalizedWeight\n      : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n\n  return rgba(r, g, b, a);\n}\n\nexport default mix;\n","import mix from './mix';\nimport guard from './guard';\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors: string[]): (n: number) => string {\n  return (n) => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n\n    return mix(color1, color2, weight);\n  };\n}\n\nexport default getScale;\n","import getContrast from './getContrast';\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7,\n};\n\n/**\n * Returns whether or not a color has bad contrast against \n * a white background according to a given standard\n */\nfunction hasBadContrast(\n  color: string,\n  standard: 'decorative' | 'readable' | 'aa' | 'aaa' = 'aa'\n): boolean {\n  return getContrast(color, '#fff') < guidelines[standard];\n}\n\nexport default hasBadContrast;\n","import darken from './darken';\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color: string, amount: number): string {\n  return darken(color, -amount);\n}\n\nexport default lighten;\n","import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color: string, amount: number): string {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\nexport default transparentize;\n","import transparentize from './transparentize';\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color: string, amount: number): string {\n  return transparentize(color, -amount);\n}\n\nexport default opacify;\n","import getLuminance from './getLuminance';\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color: string): boolean {\n  return getLuminance(color) > 0.179;\n}\n\nexport default readableColorIsBlack;\n","import readableColorIsBlack from './readableColorIsBlack';\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color: string): string {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\nexport default readableColor;\n","import desaturate from './desaturate';\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color: string, amount: number): string {\n  return desaturate(color, -amount);\n}\n\nexport default saturate;\n","import parseToRgba from './parseToRgba';\nimport guard from './guard';\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color: string): string {\n  const [r, g, b, a] = parseToRgba(color);\n\n  let hex = (x: number) => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\nexport default toHex;\n","import parseToRgba from './parseToRgba';\nimport rgba from './rgba';\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color: string): string {\n  return rgba(...parseToRgba(color));\n}\n\nexport default toRgba;\n","import parseToHsla from './parseToHsla';\nimport hsla from './hsla';\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color: string): string {\n  return hsla(...parseToHsla(color));\n}\n\nexport default toHsla;\n","import {CirclePositioned} from \"~/geometry/Circle.js\";\r\nimport {Line} from \"~/geometry/Line.js\";\r\nimport {Point} from \"~/geometry/Point.js\";\r\n\r\nexport type DrawingOpts = {\r\n  readonly strokeStyle?:string\r\n  readonly fillStyle?:string\r\n  readonly debug?:boolean\r\n  readonly strokeWidth?:number\r\n};\r\n\r\nexport type TextDrawingOpts = DrawingOpts & {\r\n  readonly anchor?: `start` | `middle` | `end`\r\n  readonly align?: `text-bottom` | `text-top` | `baseline` | `top` | `hanging` | `middle`\r\n}\r\n\r\nexport const createPath = (svg: string, parent: SVGElement, opts?:DrawingOpts): SVGPathElement => {\r\n\r\n  const p = document.createElementNS(`http://www.w3.org/2000/svg`, `path`);\r\n  p.setAttributeNS(null, `d`, svg);\r\n  // p.setAttributeNS(null, `fill`, `transparent`);\r\n  // p.setAttributeNS(null, `stroke`, `pink`);\r\n  parent.appendChild(p);\r\n  if (opts) applyOpts(p, opts);\r\n  return p;\r\n};\r\n\r\n\r\nexport const createCircle = (circle:CirclePositioned, parent:SVGElement, opts?:DrawingOpts): SVGCircleElement => {\r\n  const p = document.createElementNS(`http://www.w3.org/2000/svg`, `circle`);\r\n  p.setAttributeNS(null, `cx`, circle.x.toString());\r\n  p.setAttributeNS(null, `cy`, circle.y.toString());\r\n  p.setAttributeNS(null, `r`, circle.radius.toString());\r\n  parent.appendChild(p);\r\n  if (opts) applyOpts(p, opts);\r\n  return p;\r\n};\r\n\r\nconst createOrResolve = <V extends SVGElement>(parent:SVGElement, type:string, id?:string):V => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let existing = null;\r\n  if (id !== undefined) existing = parent.querySelector(`#${id}`);\r\n  if (existing === null) {\r\n    const p = document.createElementNS(`http://www.w3.org/2000/svg`, type) as V;\r\n    parent.appendChild(p);\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (id) p.id = id;\r\n    return p;\r\n  }\r\n  return existing as V;\r\n};\r\n\r\nexport const createLine = (line:Line, parent:SVGElement, opts?:DrawingOpts, id?:string): SVGLineElement => {\r\n  const lineEl = createOrResolve<SVGLineElement>(parent, `line`, id);\r\n  lineEl.setAttributeNS(null, `x1`, line.a.x.toString());\r\n  lineEl.setAttributeNS(null, `y1`, line.a.y.toString());\r\n  lineEl.setAttributeNS(null, `x2`, line.b.x.toString());\r\n  lineEl.setAttributeNS(null, `y2`, line.b.y.toString());\r\n  if (opts) applyOpts(lineEl, opts);\r\n  return lineEl;\r\n};\r\n\r\nexport const createText = (pos:Point, text:string, parent:SVGElement, opts?:TextDrawingOpts, id?:string): SVGTextElement => {\r\n  //const p = document.createElementNS(`http://www.w3.org/2000/svg`, `text`);\r\n  const p = createOrResolve<SVGTextElement>(parent, `text`, id);\r\n  \r\n  p.setAttributeNS(null, `x`, pos.x.toString());\r\n  p.setAttributeNS(null, `y`, pos.y.toString());\r\n  \r\n  //eslint-disable-next-line functional/immutable-data\r\n  p.textContent = text;\r\n  //parent.appendChild(p);\r\n  if (opts) {\r\n    applyOpts(p, opts);\r\n    if (opts.anchor) p.setAttributeNS(null, `text-anchor`, opts.anchor);\r\n    if (opts.align) p.setAttributeNS(null, `alignment-baseline`, opts.align);\r\n  }\r\n  return p;\r\n};\r\n\r\nconst applyOpts = (elem:SVGElement, opts:DrawingOpts) => {\r\n  if (opts.fillStyle) elem.setAttributeNS(null, `fill`, opts.fillStyle);\r\n  if (opts.strokeStyle) elem.setAttributeNS(null, `stroke`, opts.strokeStyle);\r\n  if (opts.strokeWidth) elem.setAttributeNS(null, `stroke-width`, opts.strokeWidth.toString());\r\n};\r\n\r\nexport const svg = (parent:SVGElement, opts?:DrawingOpts) => {\r\n  if (opts) applyOpts(parent, opts);\r\n  const o = {\r\n    text:(pos:Point, text:string, opts?:TextDrawingOpts, id?:string) => createText(pos, text, parent, opts, id),\r\n    line:(line:Line, opts?:DrawingOpts, id?:string) => createLine(line, parent, opts, id),\r\n    circle:(circle:CirclePositioned, opts?:DrawingOpts) => createCircle(circle, parent, opts),\r\n    path:(svgStr:string, opts?:DrawingOpts) => createPath(svgStr, parent, opts),\r\n    query:<V extends SVGElement>(selectors:string):V|null => parent.querySelector(selectors),\r\n    get width():number {\r\n      const w = parent.getAttributeNS(null, `width`);\r\n      if (w === null) return 0;\r\n      return parseFloat(w);\r\n    },\r\n    set width(width:number) {\r\n      parent.setAttributeNS(null, `width`, width.toString());\r\n    },\r\n    get height():number {\r\n      const w = parent.getAttributeNS(null, `height`);\r\n      if (w === null) return 0;\r\n      return parseFloat(w);\r\n    },\r\n    set height(height:number) {\r\n      parent.setAttributeNS(null, `height`, height.toString());\r\n    },\r\n    clear: () => {\r\n      //eslint-disable-next-line functional/no-loop-statement\r\n      while (parent.firstChild) {\r\n        parent.removeChild(parent.lastChild as HTMLElement);\r\n      }\r\n    }\r\n  };\r\n  return o;\r\n};","/* eslint-disable */\r\n\r\nimport {getMinMaxAvg} from \"../util.js\";\r\nimport {MutableCircularArray} from \"../collections/MutableCircularArray.js\"\r\nimport {mutableMapCircular, MutableMapOf} from \"../collections/MutableMapMulti.js\"\r\nimport {Palette} from \"./Palette.js\";\r\nimport {Point} from \"../geometry/Point.js\";\r\nimport {resolveEl} from \"../dom/Forms.js\";\r\nimport {autoSizeCanvas} from \"./Drawing.js\";\r\n\r\ntype Series = {\r\n  min:number,\r\n  max:number,\r\n  range:number,\r\n  name:string\r\n};\r\n\r\ntype DrawingOpts = PlotOpts & {\r\n  ctx: CanvasRenderingContext2D\r\n  width: number\r\n  height: number\r\n  dataXScale?: number\r\n  yLabelWidth: number\r\n  palette: Palette\r\n  textHeight: number\r\n  capacity:number\r\n  coalesce:boolean\r\n}\r\n\r\ntype PlotOpts = {\r\n  palette?: Palette\r\n  capacity?:number\r\n  showYAxis?:boolean\r\n  yAxes?: string[]|string\r\n  textHeight?: number\r\n  lineWidth?:number\r\n  coalesce?:boolean\r\n}\r\n\r\nexport const createScales = (buffer:MutableMapOf<number, MutableCircularArray<number>>) => {\r\n  const seriesNames = buffer.keys();\r\n  const scales:Series[] = [];\r\n  seriesNames.forEach(s => {\r\n    const series = buffer.get(s);\r\n    if (series === undefined) return;\r\n\r\n    let {min,max} = getMinMaxAvg(series);\r\n    let range = max -min;\r\n    \r\n    if (range === 0) {\r\n      range = min;\r\n      min = min - range/2;\r\n      max = max + range/2;\r\n    }\r\n    scales.push({\r\n      min, max, range,\r\n      name: s\r\n    })\r\n  });\r\n  return scales;\r\n}\r\n\r\nexport const add = (buffer:MutableMapOf<number, MutableCircularArray<number>>, value:number, series:string = \"\") => {\r\n  buffer.addKeyedValues(series, value);\r\n}\r\n\r\nexport const draw = (buffer:MutableMapOf<number, MutableCircularArray<number>>, drawing:DrawingOpts) => {\r\n  const {ctx, yLabelWidth, width, height} = drawing;\r\n  const showYAxis = drawing.showYAxis ?? true;\r\n  const series = createScales(buffer);\r\n  const margin = 10;\r\n  \r\n  ctx.clearRect(0,0,width,height);\r\n  ctx.translate(margin, 0);\r\n\r\n  // Draw vertical axes\r\n  if (showYAxis) {\r\n    series.forEach(s => {\r\n      if (drawing.yAxes !== undefined) {\r\n        if (typeof drawing.yAxes === `string` && s.name !== drawing.yAxes) return;\r\n        if (!drawing.yAxes.includes(s.name)) return;\r\n      }\r\n      drawSeriesAxis(s, drawing);\r\n      ctx.translate(yLabelWidth + 3, 0);\r\n    });\r\n  }\r\n\r\n  // Apply margin\r\n  const plotDrawing =  { ...drawing,\r\n    width: width - margin - margin - (showYAxis ? yLabelWidth : 0), \r\n    height: height - margin - margin,\r\n  }\r\n  plotDrawing.dataXScale = plotDrawing.width / drawing.capacity,\r\n  ctx.translate(0, margin);\r\n\r\n  // Draw data for each series\r\n  series.forEach(s => {\r\n    const data = buffer.getSource(s.name);\r\n    if (data === undefined) return;\r\n    //console.log(`draw ${s.name} min: ${s.min} max: ${s.max} range: ${s.range}`);\r\n    drawSeries(s, data, plotDrawing);\r\n  });\r\n\r\n  ctx.resetTransform();\r\n}\r\n\r\nexport const drawSeriesAxis = (series:Series, drawing:DrawingOpts) => {\r\n  const {ctx, height, palette, width} = drawing;\r\n\r\n  if (palette.has(series.name +'-axis'))\r\n    ctx.fillStyle = palette.get(series.name + '-axis');\r\n  else\r\n    ctx.fillStyle = palette.get(series.name);\r\n\r\n  // ctx.lineWidth = 1;\r\n  // ctx.beginPath();\r\n  // ctx.moveTo(yLabelWidth ,0);\r\n  // ctx.lineTo(yLabelWidth, height);\r\n  // ctx.strokeStyle = palette.get(series.name);\r\n  // ctx.strokeStyle = `silver`;\r\n  // ctx.stroke();\r\n\r\n  const mid = series.min + (series.range / 2)\r\n  const halfHeight = drawing.textHeight / 2;\r\n  const y = 6; // magic\r\n  ctx.textBaseline = `top`;\r\n  ctx.fillText(series.min.toFixed(2), 0, height - drawing.textHeight - y);\r\n  ctx.fillText(series.max.toFixed(2), 0, halfHeight);\r\n  ctx.fillText(mid.toFixed(2), 0, height/2 - halfHeight);\r\n\r\n}\r\n\r\nexport const drawSeries = (series:Series, values:MutableCircularArray<number>, drawing:DrawingOpts) => {\r\n  const {ctx, height, width, dataXScale = 1, lineWidth = 2} = drawing;\r\n  let x = 0;\r\n  let leadingEdge:Point|undefined;\r\n  ctx.beginPath();\r\n  ctx.lineWidth = lineWidth;\r\n  ctx.strokeStyle = drawing.palette.get(series.name);\r\n\r\n  const incrementBy = drawing.coalesce ? \r\n    drawing.dataXScale! < 0 ? Math.floor((1/drawing.dataXScale!)) : 1\r\n    : 1;\r\n  for (let i=0; i<values.length; i += incrementBy) {\r\n    let y = (1- (values[i] - series.min) / series.range) * height;\r\n    if (i == 0) ctx.moveTo(x, y);\r\n    ctx.lineTo(x, y);\r\n    x += dataXScale;\r\n\r\n    if (i +1 == values.pointer) {\r\n      leadingEdge = {x, y}\r\n    }\r\n  }\r\n  ctx.stroke();\r\n  \r\n  if (leadingEdge !== undefined) {\r\n    ctx.beginPath();\r\n    ctx.arc(leadingEdge.x, leadingEdge.y, 3, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a simple horizontal data plot within a DIV.\r\n * \r\n * ```\r\n * const plot = plot2(`#parentDiv`);\r\n * plot.add(10);\r\n * plot.clear();\r\n * \r\n * // Plot data using series\r\n * plot.add(-1, `temp`);\r\n * plot.add(0.4, `humidty`);\r\n * ```\r\n * \r\n * Options can be specified to customise plot\r\n * ```\r\n * const plot = plot2(`#parentDiv`, {\r\n *  capacity: 100,     // How many data points to store (default: 10)\r\n *  showYAxis: false,  // Toggle whether y axis is shown (default: true)\r\n *  lineWidth: 2,      // Width of plot line (default: 2)\r\n *  yAxes:  [`temp`],  // Only show these y axes (by default all are shown)\r\n *  palette: Palette,  // Colour palette instance to use\r\n *  coalesce: true,    // If true, sub-pixel data points are skipped, improving performance for dense plots at the expense of plot precision\r\n * });\r\n * ```\r\n * @param {string} parentElOrQuery\r\n * @param {PlotOpts} opts\r\n * @return {*} \r\n */\r\nexport const plot2 = (parentElOrQuery:string|HTMLElement, opts:PlotOpts) => {\r\n  const parentEl = resolveEl(parentElOrQuery);\r\n  if (parentEl.nodeName === `CANVAS`) throw new Error(`Parent element should be a container, not a CANVAS`);\r\n  \r\n  // Create a CANVAS that fills parent\r\n  const canvasEl = document.createElement(`CANVAS`) as HTMLCanvasElement;\r\n  canvasEl.style.width = '100%';\r\n  canvasEl.style.height = '100%';\r\n  parentEl.append(canvasEl);\r\n  \r\n  const ctx = canvasEl.getContext(`2d`)!;\r\n  const capacity = opts.capacity ?? 10;\r\n  const buffer = mutableMapCircular<number>({ capacity });\r\n  const metrics = ctx.measureText('Xy');\r\n  const coalesce = opts.coalesce ?? true;\r\n  let drawingOpts = {\r\n    ...opts,\r\n    capacity, coalesce,\r\n    textHeight: opts.textHeight ?? metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent,\r\n    palette: opts.palette ?? new Palette(),\r\n    width: canvasEl.width,\r\n    height: canvasEl.height,\r\n    ctx: ctx,\r\n    yLabelWidth: 25\r\n  };\r\n\r\n  autoSizeCanvas(canvasEl, () => {\r\n    drawingOpts = {...drawingOpts, width: canvasEl.width, height: canvasEl.height};\r\n    draw(buffer, drawingOpts);\r\n  });\r\n\r\n  return {\r\n    add: (value:number, series = \"\", skipDrawing = false) => {\r\n      add(buffer, value, series);\r\n      if (skipDrawing) return;\r\n      draw(buffer, drawingOpts)\r\n    },\r\n    clear:() => {\r\n      buffer.clear();\r\n    }\r\n  }\r\n}","/**\r\n * The circular array grows to a fixed size. Once full, new\r\n * items replace the oldest item in the array. Immutable.\r\n *\r\n * Usage:\r\n * ```\r\n * let a = new Circular(10);\r\n * let b = a.add(something);\r\n * ```\r\n * @class CircularArray\r\n * @extends {Array}\r\n * @template V\r\n */\r\nexport class MutableCircularArray<V> extends Array {\r\n  // ✔ Class is unit tested!\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  #capacity: number;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  #pointer: number;\r\n\r\n  constructor(capacity: number) {\r\n    super();\r\n    if (Number.isNaN(capacity)) throw Error(`capacity is NaN`);\r\n    // Can't throw because .filter won't use ctor proprly\r\n    //if (capacity <= 0) throw Error(`capacity must be greater than zero (${capacity})`);\r\n    this.#capacity = capacity;\r\n    this.#pointer = 0;\r\n  }\r\n\r\n  /**\r\n   * Returns a new Circular with item added\r\n   *\r\n   * @param {V} thing Thing to add\r\n   * @returns {Circular<V>} Circular with item added\r\n   * @memberof Circular\r\n   */\r\n  add(thing: V): MutableCircularArray<V> {\r\n    const ca = MutableCircularArray.from(this) as MutableCircularArray<V>;\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    ca[this.#pointer] = thing;\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    ca.#capacity = this.#capacity;\r\n    /* eslint-disable-next-line functional/immutable-data */\r\n    ca.#pointer = this.#pointer + 1 === this.#capacity ? 0 : this.#pointer + 1;\r\n    return ca;\r\n  }\r\n\r\n  get pointer(): number {\r\n    return this.#pointer;\r\n  }\r\n\r\n  get isFull(): boolean {\r\n    if (this.#capacity === 0) return false;\r\n    return this.length === this.#capacity;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Returns a new mutable circular array\r\n *\r\n * @template V\r\n * @param {number} capacity\r\n * @return {*}  {CircularArray<V>}\r\n */\r\nexport const mutableCircularArray = <V>(capacity:number): MutableCircularArray<V> => new MutableCircularArray<V>(capacity);\r\n","// ✔ UNIT TESTED\r\nimport {SimpleEventEmitter} from \"../Events.js\";\r\nimport { ToString, IsEqual, toStringDefault, isEqualDefault } from \"../util.js\";\r\nimport { addUniqueByHash } from \"./Set.js\";\r\nimport { hasAnyValue as mapHasAnyValue,  toArray as mapToArray, find as mapFind, filter as mapFilter} from './Map.js';\r\nimport {  without } from './Lists.js';\r\nimport {MutableCircularArray, mutableCircularArray} from './MutableCircularArray.js';\r\n\r\nexport type MapMultiOpts<V> = {\r\n  /**\r\n   * Returns true if two values should be considered equal.\r\n   * \r\n   * @type {(IsEqual<V>|undefined)}\r\n   */\r\n // readonly valueComparer?: IsEqual<V>|undefined\r\n\r\n /**\r\n  * Returns a group for values added via `addValue`. Eg. maybe you want to \r\n  * group values in the shape `{name: 'Samantha' city: 'Copenhagen'}` by city:\r\n  * \r\n  * ```\r\n  * const opts = {\r\n  *  groupBy: (v) => v.city\r\n  * }\r\n  * ```\r\n  *\r\n  * @type {(ToString<V>|undefined)}\r\n  */\r\n readonly groupBy?: ToString<V>|undefined\r\n}\r\n\r\ntype MutableMapArrayEvents<V> = {\r\n  readonly addedValues: {readonly values: ReadonlyArray<V>}\r\n  readonly addedKey: {readonly key: string }\r\n  readonly clear: boolean\r\n  readonly deleteKey: {readonly key: string}\r\n}\r\n\r\nexport type MultiValue<V, M> = Readonly<{\r\n  has(source:M, value:V): boolean\r\n  add(destination:M|undefined, values:ReadonlyArray<V>):M\r\n  toArray(source:M): ReadonlyArray<V>|undefined\r\n  find(source:M, predicate:(v:V) => boolean): V|unknown\r\n  filter(source:M, predicate:(v:V) => boolean): ReadonlyArray<V>\r\n  without(source:M, value:V): ReadonlyArray<V>\r\n  count(source:M): number\r\n}>;\r\n\r\n/**\r\n * Like a `Map` but multiple values can be stored for each key. \r\n * Duplicate values can be added to the same or even a several keys.\r\n * \r\n * By default, equality is based on value rather than reference.\r\n *\r\n * @export\r\n * @class MutableMapMulti\r\n * @template V\r\n */\r\nexport class MutableMapOf<V, M>  extends SimpleEventEmitter<MutableMapArrayEvents<V>> {\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #map: Map<string, M> = new Map();\r\n  //readonly valueComparer: IsEqual<V>;\r\n  readonly groupBy: ToString<V>;\r\n  readonly type: MultiValue<V, M>;\r\n\r\n  /**\r\n   * Constructor.\r\n   * \r\n   * By default it will group by the string representation of values and use\r\n   * reference matching for values.\r\n   * @param {MapMultiOpts<V>} [opts={}]\r\n   * @memberof MutableMapMulti\r\n   */\r\n  constructor(type:MultiValue<V, M>, opts:MapMultiOpts<V> = {}) {\r\n    super();\r\n    this.type = type;\r\n    this.groupBy = opts.groupBy ?? toStringDefault;\r\n    // this.valueComparer = opts.valueComparer ?? isEqualDefault;\r\n  }\r\n\r\n  debugString(): string {\r\n    const keys = Array.from(this.#map.keys());\r\n    // eslint-disable-next-line functional/no-let\r\n    let r = `Keys: ${keys.join(`, `)}\\r\\n`;\r\n    keys.forEach(k => {\r\n      const v = this.#map.get(k);\r\n      if (v !== undefined) {\r\n        const asArray = this.type.toArray(v);\r\n        if (asArray !== undefined) {\r\n          r += ` - ${k} (${this.type.count(v)}) = ${JSON.stringify(asArray)}\\r\\n`;\r\n        }\r\n      } else r += ` - ${k} (undefined)\\r\\n`;\r\n    });\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the map is empty\r\n   *\r\n   * @readonly\r\n   * @type {boolean}\r\n   * @memberof MutableMapMulti\r\n   */\r\n  get isEmpty():boolean {\r\n    return (this.#map.size === 0);\r\n  }\r\n\r\n  /**\r\n   * Clears the map\r\n   *\r\n   * @memberof MutableMapMulti\r\n   */\r\n  clear() {\r\n    this.#map.clear();\r\n    super.fireEvent(`clear`, true);\r\n  }\r\n\r\n  /**\r\n   * Adds several values under the same key. Duplicate values are permitted.\r\n   *\r\n   * @param {string} key Key for values\r\n   * @param {...V[]} value Values\r\n   * @memberof MapMulti\r\n   */\r\n  addKeyedValues(key: string, ...values: ReadonlyArray<V>) {\r\n    const set = this.#map.get(key);\r\n    //console.log(`addKeyedValues: key: ${key} values: ${JSON.stringify(values)}`);\r\n    if (set === undefined) {\r\n      this.#map.set(key, this.type.add(undefined, values));\r\n      super.fireEvent(`addedKey`, {key:key});\r\n      super.fireEvent(`addedValues`, {values: values});\r\n    } else {\r\n      // eslint-disable-next-line functional/immutable-data\r\n      this.#map.set(key, this.type.add(set, values));\r\n      super.fireEvent(`addedValues`, {values: values});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a value, automatically extracting a key via the\r\n   * `groupBy` function assigned in the constructor options.\r\n   *\r\n   * @param {V} values\r\n   * @memberof MutableMapArray\r\n   */\r\n  addValue(...values:ReadonlyArray<V>) {\r\n    values.forEach(v => this.addKeyedValues(this.groupBy(v), v));\r\n  }\r\n\r\n  /**\r\n   * Returns true if `value` is stored under `key`.\r\n   *\r\n   * By default values are compared by value, not reference.\r\n   * \r\n   * @param {string} key\r\n   * @param {V} value\r\n   * @return {*}  {boolean}\r\n   * @memberof MutableMapArray\r\n   */\r\n  hasKeyValue(key:string, value:V):boolean {    \r\n    const m = this.#map.get(key);\r\n    if (m === undefined) return false;    \r\n    return this.type.has(m, value);\r\n  }\r\n\r\n  has(key:string):boolean {\r\n    return this.#map.has(key);\r\n  }\r\n\r\n  /**\r\n   * Deletes all values under the specified key that match the given value.\r\n   *\r\n   * @param {string} key\r\n   * @param {V} value\r\n   * @return {*} \r\n   * @memberof MutableMapArray\r\n   */\r\n  deleteKeyValue(key: string, value: V) {\r\n    const a = this.#map.get(key);\r\n    if (a === undefined) return;\r\n    const filtered = this.type.without(a, value);// this.type.filter(a, v => !this.valueComparer(v, value));\r\n    this.#map.set(key, this.type.add(undefined, filtered));\r\n  }\r\n\r\n  delete(key:string): boolean {\r\n    const a = this.#map.get(key);\r\n    if (a === undefined) return false;\r\n    this.#map.delete(key);\r\n    this.fireEvent(`deleteKey`, {key: key});\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Deletes all occurences of `value` regardless of key\r\n   *\r\n   * @param {V} value\r\n   * @memberof MapMulti\r\n   */\r\n  // deleteDeep(value: V) {\r\n  //   const keys = Array.from(this.#map.keys());\r\n\r\n  //   keys.forEach(k => {\r\n  //     const a = this.#map.get(k);\r\n  //     if (a === undefined) return;\r\n  //     const b = this.type.filter(a, v => !this.valueComparer(v, value));\r\n  //     this.#map.set(k, this.type.add(undefined, b));\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Finds the first key where value is stored. \r\n   * Note: value could be stored in multiple keys\r\n   *\r\n   * @param {V} value\r\n   * @returns {(string | undefined)}\r\n   * @memberof MapMulti\r\n   */\r\n  findKeyForValue(value: V): string | undefined {\r\n    const keys = Array.from(this.#map.keys());\r\n    const found = keys.find(key => {\r\n      const a = this.#map.get(key);\r\n      if (a === undefined) throw Error(`Bug: map could not be accessed`);\r\n      if (this.type.has(a, value)) return true;\r\n      return false;\r\n    });\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of values stored under `key`, or 0 if key is not present.\r\n   *\r\n   * @param {string} key\r\n   * @return {*}  {number}\r\n   * @memberof MutableMapArray\r\n   */\r\n  count(key: string): number {\r\n    const e = this.#map.get(key);\r\n    if (e === undefined) return 0;\r\n    return this.type.count(e);\r\n  }\r\n\r\n  /**\r\n   * Returns the array of values stored under `key`\r\n   * or undefined if key does not exist\r\n   *\r\n   * @param {string} key\r\n   * @return {*}  {readonly}\r\n   * @memberof MutableMapArray\r\n   */\r\n  get(key: string): readonly V[] | undefined {\r\n    const m = this.#map.get(key);\r\n    if (m === undefined) return undefined;\r\n    return this.type.toArray(m);\r\n  }\r\n\r\n  getSource(key:string): M|undefined {\r\n    return this.#map.get(key);\r\n  }\r\n\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  keys(): string[] {\r\n    return Array.from(this.#map.keys());\r\n  }\r\n\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  keysAndCounts(): Array<[string, number]> {\r\n    const keys = this.keys();\r\n    /* eslint-disable-next-line functional/prefer-readonly-type */\r\n    const r = keys.map(k => [k, this.count(k)]) as Array<[string, number]>;\r\n    return r;\r\n  }\r\n\r\n  merge(other: MutableMapOf<V, M>) {\r\n    const keys = other.keys();\r\n    keys.forEach(key => {\r\n      const data = other.get(key);\r\n      if (data !== undefined) this.addKeyedValues(key, ...data);\r\n    });\r\n  }\r\n}\r\n\r\nexport type MapArrayOpts<V> = MapMultiOpts<V> & {\r\n  readonly comparer?:IsEqual<V>\r\n  readonly toString?:ToString<V>\r\n}\r\n\r\n// ✔ UNIT TESTED\r\nexport const mutableMapArray = <V>(opts:MapArrayOpts<V> = {}) => {\r\n  const comparer = opts.comparer === undefined ?\r\n    opts.toString === undefined ? (a:V, b:V) => opts.toString(a) === opts.toString(b) :\r\n      isEqualDefault\r\n    : opts.comparer;\r\n    \r\n  const t:MultiValue<V, ReadonlyArray<V>> = {\r\n    add:(dest, values) => {\r\n      if (dest === undefined) return [...values];\r\n      return [...dest, ...values];\r\n    },\r\n    count: (source) => source.length,\r\n    find: (source, predicate) => source.find(predicate),\r\n    filter: (source, predicate) => source.filter(predicate),\r\n    toArray: (source) => source,\r\n    has: (source, value) => source.find(v => comparer(v, value)) !== undefined,\r\n    without: (source, value) => source.filter(v => !comparer(v, value))\r\n  };\r\n  const m = new MutableMapOf<V, ReadonlyArray<V>>(t, opts);\r\n  return m;\r\n};\r\n\r\nexport type MapSetOpts<V> = MapMultiOpts<V> & {\r\n  readonly hash:ToString<V>\r\n};\r\n\r\nexport const mutableMapSet = <V>(opts?:MapSetOpts<V>) => {\r\n  const hash = opts?.hash ?? toStringDefault;\r\n  const comparer = (a:V, b:V) => hash(a) === hash(b);\r\n\r\n  const t:MultiValue<V, ReadonlyMap<string, V>> = {\r\n    add:(dest, values) => addUniqueByHash(dest, hash, ...values),\r\n    count: (source) => source.size,\r\n    find: (source, predicate) => mapFind(source, predicate),\r\n    filter: (source, predicate) => mapFilter(source, predicate),\r\n    toArray: (source) => mapToArray(source),\r\n    has: (source, value) => mapHasAnyValue(source, value, comparer),\r\n    without: (source, value) => without(mapToArray(source), value, comparer)\r\n  };\r\n  const m = new MutableMapOf<V, ReadonlyMap<string, V>>(t, opts);\r\n  return m;\r\n};\r\n\r\nexport type MapCircularOpts<V> = MapMultiOpts<V> & {\r\n  readonly capacity:number\r\n}\r\nexport const mutableMapCircular = <V>(opts:MapCircularOpts<V>) => {\r\n  const comparer = isEqualDefault;\r\n\r\n  const t:MultiValue<V, MutableCircularArray<V>> = {\r\n    add:(dest, values) => {\r\n      if (dest === undefined) dest = mutableCircularArray<V>(opts.capacity);\r\n      values.forEach(v => dest = dest?.add(v));\r\n      return dest;\r\n    },\r\n    count: (source) => source.length,\r\n    find: (source, predicate) => source.find(predicate),\r\n    filter: (source, predicate) => source.filter(predicate),\r\n    toArray: (source) => source,\r\n    has: (source, value) => source.find(v => comparer(v, value)) !== undefined,\r\n    without: (source, value) => source.filter(v => !comparer(v, value))\r\n  };\r\n  return new MutableMapOf<V, MutableCircularArray<V>>(t, opts);\r\n};","\r\n/**\r\n * Manage a set of colours. Uses CSS variables as a fallback if colour is not added\r\n *\r\n * @export\r\n * @class Palette\r\n */\r\nexport class Palette {\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #store:Map<string, string> = new Map();\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n  readonly #aliases:Map<string, string> = new Map();\r\n\r\n  readonly fallbacks:string[];\r\n  #lastFallback = 0;\r\n\r\n  #elementBase:Element;\r\n\r\n  constructor(fallbacks?:string[]) {\r\n    if (fallbacks !== undefined) this.fallbacks = fallbacks;\r\n    else this.fallbacks = [`red`, `blue`, `green`, `orange`];\r\n    this.#elementBase = document.body;\r\n\r\n  }\r\n\r\n  setElementBase(el:Element) {\r\n    this.#elementBase = el;\r\n  }\r\n\r\n  /**\r\n   * Adds a colour with a given name\r\n   *\r\n   * @param {string} key\r\n   * @param {string} colour\r\n   * @memberof Palette\r\n   */\r\n  add(key:string, colour:string) {\r\n    this.#store.set(key, colour);\r\n  }\r\n\r\n  alias(from:string, to:string) {\r\n    this.#aliases.set(from, to);\r\n  }\r\n  /**\r\n   * Returns a colour by name. \r\n   * \r\n   * If the colour is not found:\r\n   *  1. Try to use a CSS variable, or\r\n   *  2. Fallback to default value (`rebeccapurple`).\r\n   *\r\n   * @param {string} key\r\n   * @returns {string}\r\n   * @memberof Palette\r\n   */\r\n  get(key:string, fallback?:string):string {\r\n    const alias =  this.#aliases.get(key);\r\n    if (alias !== undefined) key = alias;\r\n  \r\n    const c = this.#store.get(key);\r\n    if (c !== undefined) return c;\r\n\r\n    const varName = `--` + key;\r\n    // eslint-disable-next-line functional/no-let\r\n    let fromCss = getComputedStyle(this.#elementBase).getPropertyValue(varName).trim();\r\n\r\n    // Not found\r\n    if (fromCss === undefined || fromCss.length === 0) {\r\n      if (fallback !== undefined) return fallback;\r\n      fromCss = this.fallbacks[this.#lastFallback];\r\n      this.#lastFallback++;\r\n      if (this.#lastFallback === this.fallbacks.length) this.#lastFallback = 0;\r\n    }\r\n    return fromCss;\r\n  }\r\n\r\n  has(key:string):boolean {\r\n    return this.#store.has(key);\r\n  }\r\n}\r\n\r\nexport const getCssVariable = (name:string, fallbackColour:string = `black`, root?:HTMLElement) => {\r\n  if (root === undefined) root = document.body;\r\n  const fromCss = getComputedStyle(root).getPropertyValue(`--${name}`).trim();\r\n  if (fromCss === undefined || fromCss.length === 0) return fallbackColour;\r\n  return fromCss;\r\n};","/**\r\n * Matt DesLauriers\r\n * Source: https://github.com/mattdesl/dictionary-of-colour-combinations\r\n * \"The data here has originally been compiled and open sourced by Dain M. Blodorn Kim (@dblodorn) \r\n * for his interactive web version (dblodorn/sanzo-wada). In this fork, I've fixed some incorrect \r\n * data from the original, used a more perceptual CMYK to RGB conversion, and encapsulated the dataset \r\n * as a standalone and distributed project.\" - mattdesl's README.md\r\n*/\r\nimport {randomElement} from '../collections/Lists.js';\r\nimport {data} from './DictionaryOfColourCombinationsData.js';\r\n\r\ntype Cmyk = readonly [number, number, number, number];\r\ntype Lab = readonly [number, number, number];\r\ntype Rgb = readonly [number, number, number];\r\n\r\nexport type DictColour = {\r\n  readonly name:string\r\n  readonly combinations: ReadonlyArray<number>\r\n  readonly swatch: number\r\n  readonly cmyk: Cmyk\r\n  readonly lab: Lab\r\n  readonly rgb: Rgb\r\n  readonly hex: string\r\n};\r\n\r\nconst check = () => {\r\n  // @ts-ignore\r\n  const d = data.default;\r\n  //eslint-disable-next-line  functional/no-loop-statement\r\n  for (const v of d) {\r\n    // @ts-ignore\r\n    const c = v as DictColour;\r\n    if (c.cmyk.length !== 4) {\r\n      console.log(c.name);\r\n    }\r\n  }\r\n  console.log(`All good.`);\r\n};\r\n\r\nexport const randomPalette = (minColours:number = 3):readonly DictColour[] => {\r\n  // @ts-ignore\r\n  const d = data as DictColour[];\r\n  \r\n  // Get a random colour\r\n  const c = randomElement(d);\r\n  \r\n  // And a random combination\r\n  if (c.combinations.length < minColours) return randomPalette(minColours);\r\n  const combo = randomElement(c.combinations);\r\n\r\n  const palette = [];\r\n  //eslint-disable-next-line  functional/no-loop-statement\r\n  for (const v of d) {\r\n    if (v.name === c.name) continue;\r\n    if (v.combinations.includes(combo)) {\r\n      //eslint-disable-next-line  functional/immutable-data\r\n      palette.push(v);\r\n    }\r\n  }\r\n\r\n  if (palette.length < minColours) return randomPalette(minColours);\r\n  else return palette;\r\n\r\n  // {\r\n  //   \"name\": \"Hermosa Pink\",\r\n  //   \"combinations\": [\r\n  //     176,\r\n  //     227,\r\n  //     273\r\n  //   ],\r\n  //   \"swatch\": 0,\r\n  //   \"cmyk\": [\r\n  //     0,\r\n  //     30,\r\n  //     6,\r\n  //     0\r\n  //   ],\r\n  //   \"lab\": [\r\n  //     83.42717631799802,\r\n  //     22.136186770428026,\r\n  //     1.6381322957198563\r\n  //   ],\r\n  //   \"rgb\": [\r\n  //     249,\r\n  //     193,\r\n  //     206\r\n  //   ],\r\n  //   \"hex\": \"#f9c1ce\"\r\n  // },\r\n};","export const data = [\r\n  {\r\n    \"name\": \"Hermosa Pink\",\r\n    \"combinations\": [\r\n      176,\r\n      227,\r\n      273\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      30,\r\n      6,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      83.42717631799802,\r\n      22.136186770428026,\r\n      1.6381322957198563\r\n    ],\r\n    \"rgb\": [\r\n      249,\r\n      193,\r\n      206\r\n    ],\r\n    \"hex\": \"#f9c1ce\"\r\n  },\r\n  {\r\n    \"name\": \"Corinthian Pink\",\r\n    \"combinations\": [\r\n      27,\r\n      43,\r\n      87,\r\n      97,\r\n      128,\r\n      169,\r\n      174,\r\n      206,\r\n      246,\r\n      254,\r\n      264,\r\n      342\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      35,\r\n      15,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      80.34637979705501,\r\n      25.369649805447466,\r\n      7.879377431906619\r\n    ],\r\n    \"rgb\": [\r\n      248,\r\n      182,\r\n      186\r\n    ],\r\n    \"hex\": \"#f8b6ba\"\r\n  },\r\n  {\r\n    \"name\": \"Cameo Pink\",\r\n    \"combinations\": [\r\n      101,\r\n      105,\r\n      116,\r\n      120,\r\n      165,\r\n      231\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      10,\r\n      32,\r\n      19,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      77.21675440604257,\r\n      17.198443579766547,\r\n      4.949416342412462\r\n    ],\r\n    \"rgb\": [\r\n      224,\r\n      179,\r\n      182\r\n    ],\r\n    \"hex\": \"#e0b3b6\"\r\n  },\r\n  {\r\n    \"name\": \"Fawn\",\r\n    \"combinations\": [\r\n      18,\r\n      125,\r\n      308\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      18,\r\n      31,\r\n      30,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      74.48996719310291,\r\n      11.194552529182886,\r\n      9.38521400778211\r\n    ],\r\n    \"rgb\": [\r\n      209,\r\n      176,\r\n      167\r\n    ],\r\n    \"hex\": \"#d1b0a7\"\r\n  },\r\n  {\r\n    \"name\": \"Light Brown Drab\",\r\n    \"combinations\": [\r\n      35,\r\n      68,\r\n      185,\r\n      191,\r\n      223,\r\n      239,\r\n      244,\r\n      268,\r\n      285,\r\n      321\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      8,\r\n      30,\r\n      20,\r\n      25\r\n    ],\r\n    \"lab\": [\r\n      64.1168841077287,\r\n      13.023346303501938,\r\n      5.3424124513618665\r\n    ],\r\n    \"rgb\": [\r\n      181,\r\n      147,\r\n      146\r\n    ],\r\n    \"hex\": \"#b59392\"\r\n  },\r\n  {\r\n    \"name\": \"Coral Red\",\r\n    \"combinations\": [\r\n      92,\r\n      123,\r\n      320,\r\n      332\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      55,\r\n      40,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      70.28305485618371,\r\n      39.28793774319067,\r\n      23.190661478599225\r\n    ],\r\n    \"rgb\": [\r\n      245,\r\n      142,\r\n      132\r\n    ],\r\n    \"hex\": \"#f58e84\"\r\n  },\r\n  {\r\n    \"name\": \"Fresh Color\",\r\n    \"combinations\": [\r\n      240\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      53,\r\n      45,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      70.96208133058671,\r\n      37.48249027237355,\r\n      27.29571984435799\r\n    ],\r\n    \"rgb\": [\r\n      246,\r\n      145,\r\n      126\r\n    ],\r\n    \"hex\": \"#f6917e\"\r\n  },\r\n  {\r\n    \"name\": \"Grenadine Pink\",\r\n    \"combinations\": [\r\n      6,\r\n      21,\r\n      112,\r\n      166,\r\n      193,\r\n      201,\r\n      230,\r\n      300,\r\n      315,\r\n      341\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      62,\r\n      58,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      66.89402609292745,\r\n      43.82879377431905,\r\n      34.70038910505838\r\n    ],\r\n    \"rgb\": [\r\n      244,\r\n      128,\r\n      103\r\n    ],\r\n    \"hex\": \"#f48067\"\r\n  },\r\n  {\r\n    \"name\": \"Eosine Pink\",\r\n    \"combinations\": [\r\n      34,\r\n      59,\r\n      90,\r\n      108,\r\n      134,\r\n      153,\r\n      197,\r\n      242,\r\n      248,\r\n      276,\r\n      287,\r\n      314,\r\n      327,\r\n      336\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      63,\r\n      23,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      67.25108720531014,\r\n      46.68482490272373,\r\n      10.29571984435799\r\n    ],\r\n    \"rgb\": [\r\n      243,\r\n      127,\r\n      148\r\n    ],\r\n    \"hex\": \"#f37f94\"\r\n  },\r\n  {\r\n    \"name\": \"Spinel Red\",\r\n    \"combinations\": [\r\n      14,\r\n      147,\r\n      165,\r\n      184,\r\n      195,\r\n      224,\r\n      277\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      70,\r\n      21,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      64.53040360112917,\r\n      52.18677042801556,\r\n      8.291828793774329\r\n    ],\r\n    \"rgb\": [\r\n      242,\r\n      114,\r\n      145\r\n    ],\r\n    \"hex\": \"#f27291\"\r\n  },\r\n  {\r\n    \"name\": \"Old Rose\",\r\n    \"combinations\": [\r\n      55,\r\n      162,\r\n      260,\r\n      265\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      15,\r\n      70,\r\n      40,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      58.771648737315935,\r\n      42.1284046692607,\r\n      12.307392996108945\r\n    ],\r\n    \"rgb\": [\r\n      212,\r\n      109,\r\n      122\r\n    ],\r\n    \"hex\": \"#d46d7a\"\r\n  },\r\n  {\r\n    \"name\": \"Eugenia Red | A\",\r\n    \"combinations\": [\r\n      284\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      7,\r\n      76,\r\n      60,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      58.36575875486381,\r\n      50.754863813229576,\r\n      28.536964980544752\r\n    ],\r\n    \"rgb\": [\r\n      226,\r\n      98,\r\n      94\r\n    ],\r\n    \"hex\": \"#e2625e\"\r\n  },\r\n  {\r\n    \"name\": \"Eugenia Red | B\",\r\n    \"combinations\": [\r\n      17,\r\n      77,\r\n      252,\r\n      262,\r\n      270,\r\n      280,\r\n      282,\r\n      325\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      80,\r\n      50,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      54.2748149843595,\r\n      54.696498054474716,\r\n      23.661478599221795\r\n    ],\r\n    \"rgb\": [\r\n      218,\r\n      82,\r\n      93\r\n    ],\r\n    \"hex\": \"#da525d\"\r\n  },\r\n  {\r\n    \"name\": \"Raw Sienna\",\r\n    \"combinations\": [\r\n      3,\r\n      13,\r\n      33,\r\n      70,\r\n      86,\r\n      130,\r\n      131,\r\n      182,\r\n      243,\r\n      247,\r\n      252,\r\n      255,\r\n      268,\r\n      269,\r\n      279,\r\n      293,\r\n      298,\r\n      319,\r\n      327\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      18,\r\n      58,\r\n      100,\r\n      12\r\n    ],\r\n    \"lab\": [\r\n      55.063706416418704,\r\n      25.548638132295707,\r\n      52.17120622568095\r\n    ],\r\n    \"rgb\": [\r\n      187,\r\n      113,\r\n      37\r\n    ],\r\n    \"hex\": \"#bb7125\"\r\n  },\r\n  {\r\n    \"name\": \"Vinaceous Tawny\",\r\n    \"combinations\": [\r\n      40,\r\n      85,\r\n      244\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      17,\r\n      72,\r\n      100,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      53.226520180056454,\r\n      38.17509727626458,\r\n      50.18677042801556\r\n    ],\r\n    \"rgb\": [\r\n      197,\r\n      97,\r\n      39\r\n    ],\r\n    \"hex\": \"#c56127\"\r\n  },\r\n  {\r\n    \"name\": \"Jasper Red\",\r\n    \"combinations\": [\r\n      155,\r\n      194,\r\n      216,\r\n      219\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      2,\r\n      83,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      56.809338521400775,\r\n      58.41245136186771,\r\n      57.630350194552534\r\n    ],\r\n    \"rgb\": [\r\n      235,\r\n      83,\r\n      36\r\n    ],\r\n    \"hex\": \"#eb5324\"\r\n  },\r\n  {\r\n    \"name\": \"Spectrum Red\",\r\n    \"combinations\": [\r\n      257,\r\n      266,\r\n      301,\r\n      322\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      5,\r\n      100,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      49.60708018616007,\r\n      70.9260700389105,\r\n      50.077821011673166\r\n    ],\r\n    \"rgb\": [\r\n      227,\r\n      31,\r\n      38\r\n    ],\r\n    \"hex\": \"#e31f26\"\r\n  },\r\n  {\r\n    \"name\": \"Red Orange\",\r\n    \"combinations\": [\r\n      31,\r\n      164,\r\n      179,\r\n      241,\r\n      264\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      9,\r\n      90,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      51.8272678721294,\r\n      60.64202334630349,\r\n      50.88326848249028\r\n    ],\r\n    \"rgb\": [\r\n      221,\r\n      64,\r\n      39\r\n    ],\r\n    \"hex\": \"#dd4027\"\r\n  },\r\n  {\r\n    \"name\": \"Etruscan Red\",\r\n    \"combinations\": [\r\n      25,\r\n      47,\r\n      97,\r\n      137,\r\n      152,\r\n      185,\r\n      275\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      16,\r\n      80,\r\n      74,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      50.74845502403296,\r\n      45.88326848249028,\r\n      31.0544747081712\r\n    ],\r\n    \"rgb\": [\r\n      197,\r\n      83,\r\n      71\r\n    ],\r\n    \"hex\": \"#c55347\"\r\n  },\r\n  {\r\n    \"name\": \"Burnt Sienna\",\r\n    \"combinations\": [\r\n      198,\r\n      242,\r\n      263,\r\n      285,\r\n      286,\r\n      297,\r\n      312,\r\n      333,\r\n      343\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      22,\r\n      76,\r\n      100,\r\n      15\r\n    ],\r\n    \"lab\": [\r\n      46.43778133821622,\r\n      36.23346303501947,\r\n      43.7898832684825\r\n    ],\r\n    \"rgb\": [\r\n      174,\r\n      82,\r\n      36\r\n    ],\r\n    \"hex\": \"#ae5224\"\r\n  },\r\n  {\r\n    \"name\": \"Ochre Red\",\r\n    \"combinations\": [\r\n      199,\r\n      283\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      18,\r\n      73,\r\n      63,\r\n      20\r\n    ],\r\n    \"lab\": [\r\n      46.81773098344396,\r\n      35.73540856031127,\r\n      21.848249027237358\r\n    ],\r\n    \"rgb\": [\r\n      171,\r\n      84,\r\n      77\r\n    ],\r\n    \"hex\": \"#ab544d\"\r\n  },\r\n  {\r\n    \"name\": \"Scarlet\",\r\n    \"combinations\": [\r\n      136,\r\n      308,\r\n      332\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      10,\r\n      95,\r\n      72,\r\n      7\r\n    ],\r\n    \"lab\": [\r\n      46.54612039368276,\r\n      61.52529182879377,\r\n      28.902723735408557\r\n    ],\r\n    \"rgb\": [\r\n      203,\r\n      47,\r\n      67\r\n    ],\r\n    \"hex\": \"#cb2f43\"\r\n  },\r\n  {\r\n    \"name\": \"Carmine\",\r\n    \"combinations\": [\r\n      39,\r\n      117,\r\n      122,\r\n      154,\r\n      225,\r\n      232,\r\n      307,\r\n      313\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      0,\r\n      100,\r\n      75,\r\n      16\r\n    ],\r\n    \"lab\": [\r\n      44.29388876173037,\r\n      67.18677042801556,\r\n      33.71206225680933\r\n    ],\r\n    \"rgb\": [\r\n      204,\r\n      18,\r\n      54\r\n    ],\r\n    \"hex\": \"#cc1236\"\r\n  },\r\n  {\r\n    \"name\": \"Indian Lake\",\r\n    \"combinations\": [\r\n      299,\r\n      331\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      12,\r\n      89,\r\n      35,\r\n      9\r\n    ],\r\n    \"lab\": [\r\n      47.54253452353704,\r\n      57.21400778210116,\r\n      6.677042801556411\r\n    ],\r\n    \"rgb\": [\r\n      197,\r\n      60,\r\n      105\r\n    ],\r\n    \"hex\": \"#c53c69\"\r\n  },\r\n  {\r\n    \"name\": \"Rosolanc Purple\",\r\n    \"combinations\": [\r\n      48,\r\n      144,\r\n      170,\r\n      204,\r\n      277,\r\n      346\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      30,\r\n      90,\r\n      33,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      45.93881132219425,\r\n      52.365758754863805,\r\n      -3.159533073929964\r\n    ],\r\n    \"rgb\": [\r\n      183,\r\n      63,\r\n      116\r\n    ],\r\n    \"hex\": \"#b73f74\"\r\n  },\r\n  {\r\n    \"name\": \"Pomegranite Purple\",\r\n    \"combinations\": [\r\n      220,\r\n      271\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      23,\r\n      100,\r\n      50,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      41.42519264515145,\r\n      60.96108949416342,\r\n      8.400778210116727\r\n    ],\r\n    \"rgb\": [\r\n      183,\r\n      31,\r\n      87\r\n    ],\r\n    \"hex\": \"#b71f57\"\r\n  },\r\n  {\r\n    \"name\": \"Hydrangea Red\",\r\n    \"combinations\": [\r\n      142\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      38,\r\n      90,\r\n      70,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      43.070115205615316,\r\n      44.35408560311285,\r\n      14.182879377431902\r\n    ],\r\n    \"rgb\": [\r\n      169,\r\n      65,\r\n      81\r\n    ],\r\n    \"hex\": \"#a94151\"\r\n  },\r\n  {\r\n    \"name\": \"Brick Red\",\r\n    \"combinations\": [\r\n      37,\r\n      108,\r\n      246,\r\n      322,\r\n      328\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      22,\r\n      84,\r\n      100,\r\n      18\r\n    ],\r\n    \"lab\": [\r\n      42.45975432974746,\r\n      41.50972762645915,\r\n      40.688715953307394\r\n    ],\r\n    \"rgb\": [\r\n      168,\r\n      66,\r\n      34\r\n    ],\r\n    \"hex\": \"#a84222\"\r\n  },\r\n  {\r\n    \"name\": \"Carmine Red\",\r\n    \"combinations\": [\r\n      35,\r\n      51,\r\n      104,\r\n      130,\r\n      181,\r\n      200,\r\n      221,\r\n      228,\r\n      233,\r\n      237,\r\n      245,\r\n      338\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      25,\r\n      95,\r\n      80,\r\n      16\r\n    ],\r\n    \"lab\": [\r\n      38.71366445410849,\r\n      50.22957198443581,\r\n      24.688715953307394\r\n    ],\r\n    \"rgb\": [\r\n      166,\r\n      44,\r\n      55\r\n    ],\r\n    \"hex\": \"#a62c37\"\r\n  },\r\n  {\r\n    \"name\": \"Pompeian Red\",\r\n    \"combinations\": [\r\n      30,\r\n      71,\r\n      120,\r\n      212,\r\n      311,\r\n      324\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      18,\r\n      97,\r\n      74,\r\n      19\r\n    ],\r\n    \"lab\": [\r\n      38.857099259937435,\r\n      54.805447470817114,\r\n      23.844357976653697\r\n    ],\r\n    \"rgb\": [\r\n      171,\r\n      36,\r\n      57\r\n    ],\r\n    \"hex\": \"#ab2439\"\r\n  },\r\n  {\r\n    \"name\": \"Red\",\r\n    \"combinations\": [\r\n      251,\r\n      261\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      30,\r\n      100,\r\n      70,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      37.86678873884184,\r\n      54.58754863813229,\r\n      15.369649805447466\r\n    ],\r\n    \"rgb\": [\r\n      167,\r\n      33,\r\n      68\r\n    ],\r\n    \"hex\": \"#a72144\"\r\n  },\r\n  {\r\n    \"name\": \"Brown\",\r\n    \"combinations\": [\r\n      110,\r\n      121,\r\n      145,\r\n      161\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      35,\r\n      74,\r\n      90,\r\n      35\r\n    ],\r\n    \"lab\": [\r\n      35.06981002517738,\r\n      23.47470817120623,\r\n      28.571984435797674\r\n    ],\r\n    \"rgb\": [\r\n      124,\r\n      66,\r\n      38\r\n    ],\r\n    \"hex\": \"#7c4226\"\r\n  },\r\n  {\r\n    \"name\": \"Hay's Russet\",\r\n    \"combinations\": [\r\n      58,\r\n      82,\r\n      95,\r\n      152,\r\n      186,\r\n      231,\r\n      249,\r\n      304,\r\n      314,\r\n      336,\r\n      345\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      37,\r\n      85,\r\n      87,\r\n      35\r\n    ],\r\n    \"lab\": [\r\n      31.235217822537575,\r\n      30.657587548638134,\r\n      23.509727626459153\r\n    ],\r\n    \"rgb\": [\r\n      121,\r\n      51,\r\n      39\r\n    ],\r\n    \"hex\": \"#793327\"\r\n  },\r\n  {\r\n    \"name\": \"Vandyke Red\",\r\n    \"combinations\": [\r\n      16,\r\n      133,\r\n      147,\r\n      316,\r\n      335\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      32,\r\n      95,\r\n      95,\r\n      33\r\n    ],\r\n    \"lab\": [\r\n      30.157930876630807,\r\n      40.59922178988327,\r\n      27.607003891050596\r\n    ],\r\n    \"rgb\": [\r\n      130,\r\n      36,\r\n      31\r\n    ],\r\n    \"hex\": \"#82241f\"\r\n  },\r\n  {\r\n    \"name\": \"Pansy Purple\",\r\n    \"combinations\": [\r\n      157,\r\n      273\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      34,\r\n      100,\r\n      60,\r\n      34\r\n    ],\r\n    \"lab\": [\r\n      27.605096513313494,\r\n      45.922178988326834,\r\n      6.089494163424121\r\n    ],\r\n    \"rgb\": [\r\n      125,\r\n      19,\r\n      58\r\n    ],\r\n    \"hex\": \"#7d133a\"\r\n  },\r\n  {\r\n    \"name\": \"Pale Burnt Lake\",\r\n    \"combinations\": [\r\n      124,\r\n      171,\r\n      177,\r\n      205,\r\n      217,\r\n      258,\r\n      269,\r\n      283\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      25,\r\n      90,\r\n      80,\r\n      40\r\n    ],\r\n    \"lab\": [\r\n      30.18234531166552,\r\n      39.03501945525292,\r\n      22.712062256809332\r\n    ],\r\n    \"rgb\": [\r\n      128,\r\n      38,\r\n      38\r\n    ],\r\n    \"hex\": \"#802626\"\r\n  },\r\n  {\r\n    \"name\": \"Violet Red\",\r\n    \"combinations\": [\r\n      9\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      75,\r\n      100,\r\n      50,\r\n      5\r\n    ],\r\n    \"lab\": [\r\n      27.77141985198749,\r\n      30.38521400778211,\r\n      -17.743190661478593\r\n    ],\r\n    \"rgb\": [\r\n      100,\r\n      45,\r\n      94\r\n    ],\r\n    \"hex\": \"#642d5e\"\r\n  },\r\n  {\r\n    \"name\": \"Vistoris Lake\",\r\n    \"combinations\": [\r\n      63,\r\n      91,\r\n      165,\r\n      226,\r\n      290,\r\n      337\r\n    ],\r\n    \"swatch\": 0,\r\n    \"cmyk\": [\r\n      40,\r\n      71,\r\n      55,\r\n      40\r\n    ],\r\n    \"lab\": [\r\n      33.090714885175856,\r\n      20.29571984435799,\r\n      6.101167315175104\r\n    ],\r\n    \"rgb\": [\r\n      109,\r\n      65,\r\n      69\r\n    ],\r\n    \"hex\": \"#6d4145\"\r\n  },\r\n  {\r\n    \"name\": \"Sulpher Yellow\",\r\n    \"combinations\": [\r\n      52,\r\n      72,\r\n      80,\r\n      104,\r\n      132,\r\n      135,\r\n      151,\r\n      208,\r\n      246,\r\n      254,\r\n      270,\r\n      294,\r\n      296,\r\n      310,\r\n      315,\r\n      320,\r\n      321,\r\n      326\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      4,\r\n      4,\r\n      28,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      93.22499427786678,\r\n      -1.7315175097276239,\r\n      21.64980544747081\r\n    ],\r\n    \"rgb\": [\r\n      245,\r\n      236,\r\n      194\r\n    ],\r\n    \"hex\": \"#f5ecc2\"\r\n  },\r\n  {\r\n    \"name\": \"Pale Lemon Yellow\",\r\n    \"combinations\": [\r\n      3,\r\n      31,\r\n      60,\r\n      76,\r\n      99,\r\n      109,\r\n      111,\r\n      169,\r\n      185,\r\n      195,\r\n      203,\r\n      228,\r\n      241,\r\n      261,\r\n      272,\r\n      281,\r\n      290,\r\n      292,\r\n      336\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      4,\r\n      38,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      94.8577096208133,\r\n      -0.14396887159533378,\r\n      34.08560311284046\r\n    ],\r\n    \"rgb\": [\r\n      255,\r\n      239,\r\n      174\r\n    ],\r\n    \"hex\": \"#ffefae\"\r\n  },\r\n  {\r\n    \"name\": \"Naples Yellow\",\r\n    \"combinations\": [\r\n      14,\r\n      115,\r\n      166,\r\n      193,\r\n      303,\r\n      325\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      2,\r\n      7,\r\n      44,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      91.7265583276112,\r\n      0.31906614785992815,\r\n      36.56809338521401\r\n    ],\r\n    \"rgb\": [\r\n      251,\r\n      230,\r\n      160\r\n    ],\r\n    \"hex\": \"#fbe6a0\"\r\n  },\r\n  {\r\n    \"name\": \"Ivory Buff\",\r\n    \"combinations\": [\r\n      11,\r\n      50,\r\n      94,\r\n      102,\r\n      126,\r\n      178,\r\n      184,\r\n      190,\r\n      209,\r\n      214,\r\n      235,\r\n      243,\r\n      262,\r\n      266,\r\n      301,\r\n      343\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      8,\r\n      15,\r\n      40,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      85.59700923170824,\r\n      3.377431906614788,\r\n      27.268482490272362\r\n    ],\r\n    \"rgb\": [\r\n      235,\r\n      211,\r\n      162\r\n    ],\r\n    \"hex\": \"#ebd3a2\"\r\n  },\r\n  {\r\n    \"name\": \"Seashell Pink\",\r\n    \"combinations\": [\r\n      45,\r\n      84,\r\n      88,\r\n      113,\r\n      150,\r\n      176,\r\n      194,\r\n      276,\r\n      334\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      19,\r\n      23,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      88.12848096437018,\r\n      12.08949416342412,\r\n      17.268482490272362\r\n    ],\r\n    \"rgb\": [\r\n      253,\r\n      212,\r\n      189\r\n    ],\r\n    \"hex\": \"#fdd4bd\"\r\n  },\r\n  {\r\n    \"name\": \"Light Pinkish Cinnamon\",\r\n    \"combinations\": [\r\n      317\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      25,\r\n      40,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      84.2069123369192,\r\n      15.630350194552534,\r\n      29.809338521400775\r\n    ],\r\n    \"rgb\": [\r\n      252,\r\n      199,\r\n      155\r\n    ],\r\n    \"hex\": \"#fcc79b\"\r\n  },\r\n  {\r\n    \"name\": \"Pinkish Cinnamon\",\r\n    \"combinations\": [\r\n      78,\r\n      161,\r\n      175,\r\n      232,\r\n      258,\r\n      263,\r\n      292,\r\n      305,\r\n      310\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      5,\r\n      32,\r\n      53,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      77.84695201037613,\r\n      17.229571984435808,\r\n      34.747081712062254\r\n    ],\r\n    \"rgb\": [\r\n      238,\r\n      180,\r\n      128\r\n    ],\r\n    \"hex\": \"#eeb480\"\r\n  },\r\n  {\r\n    \"name\": \"Cinnamon Buff\",\r\n    \"combinations\": [\r\n      23,\r\n      127,\r\n      137,\r\n      180,\r\n      210,\r\n      234,\r\n      246,\r\n      323,\r\n      344\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      25,\r\n      57,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      83.52941176470588,\r\n      14.743190661478593,\r\n      43.665369649805456\r\n    ],\r\n    \"rgb\": [\r\n      253,\r\n      197,\r\n      126\r\n    ],\r\n    \"hex\": \"#fdc57e\"\r\n  },\r\n  {\r\n    \"name\": \"Cream Yellow\",\r\n    \"combinations\": [\r\n      122,\r\n      192,\r\n      215,\r\n      226,\r\n      267,\r\n      278,\r\n      294,\r\n      295,\r\n      300,\r\n      302,\r\n      304,\r\n      311,\r\n      329,\r\n      342\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      28,\r\n      68,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      81.81277180132753,\r\n      16.46692607003891,\r\n      51.97665369649806\r\n    ],\r\n    \"rgb\": [\r\n      253,\r\n      191,\r\n      104\r\n    ],\r\n    \"hex\": \"#fdbf68\"\r\n  },\r\n  {\r\n    \"name\": \"Golden Yellow\",\r\n    \"combinations\": [\r\n      26,\r\n      81,\r\n      132,\r\n      138,\r\n      140,\r\n      179,\r\n      206,\r\n      229,\r\n      309,\r\n      315\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      2,\r\n      42,\r\n      74,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      73.85671778439001,\r\n      25.94163424124514,\r\n      51.1828793774319\r\n    ],\r\n    \"rgb\": [\r\n      243,\r\n      162,\r\n      87\r\n    ],\r\n    \"hex\": \"#f3a257\"\r\n  },\r\n  {\r\n    \"name\": \"Vinaceous Cinnamon\",\r\n    \"combinations\": [\r\n      203,\r\n      205,\r\n      213,\r\n      256,\r\n      260,\r\n      279,\r\n      299\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      4,\r\n      40,\r\n      42,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      74.98741130693523,\r\n      24.739299610894932,\r\n      24.813229571984436\r\n    ],\r\n    \"rgb\": [\r\n      238,\r\n      167,\r\n      140\r\n    ],\r\n    \"hex\": \"#eea78c\"\r\n  },\r\n  {\r\n    \"name\": \"Ochraceous Salmon\",\r\n    \"combinations\": [\r\n      32,\r\n      71,\r\n      121,\r\n      186,\r\n      217,\r\n      220,\r\n      223,\r\n      238,\r\n      296,\r\n      339\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      15,\r\n      38,\r\n      55,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      71.44731822690166,\r\n      16.459143968871587,\r\n      29.101167315175104\r\n    ],\r\n    \"rgb\": [\r\n      216,\r\n      163,\r\n      123\r\n    ],\r\n    \"hex\": \"#d8a37b\"\r\n  },\r\n  {\r\n    \"name\": \"Isabella Color\",\r\n    \"combinations\": [\r\n      4,\r\n      12,\r\n      241,\r\n      292\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      15,\r\n      28,\r\n      60,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      69.68337529564354,\r\n      7.070038910505843,\r\n      33.02334630350194\r\n    ],\r\n    \"rgb\": [\r\n      197,\r\n      165,\r\n      110\r\n    ],\r\n    \"hex\": \"#c5a56e\"\r\n  },\r\n  {\r\n    \"name\": \"Maple\",\r\n    \"combinations\": [\r\n      282\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      5,\r\n      26,\r\n      56,\r\n      20\r\n    ],\r\n    \"lab\": [\r\n      68.19409475852598,\r\n      9.591439688715951,\r\n      32.94941634241246\r\n    ],\r\n    \"rgb\": [\r\n      197,\r\n      159,\r\n      107\r\n    ],\r\n    \"hex\": \"#c59f6b\"\r\n  },\r\n  {\r\n    \"name\": \"Olive Buff\",\r\n    \"combinations\": [\r\n      83,\r\n      175,\r\n      200,\r\n      330,\r\n      348\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      16,\r\n      6,\r\n      42,\r\n      12\r\n    ],\r\n    \"lab\": [\r\n      78.04837109941252,\r\n      -7.108949416342412,\r\n      23.657587548638134\r\n    ],\r\n    \"rgb\": [\r\n      193,\r\n      196,\r\n      148\r\n    ],\r\n    \"hex\": \"#c1c494\"\r\n  },\r\n  {\r\n    \"name\": \"Ecru\",\r\n    \"combinations\": [\r\n      167,\r\n      249,\r\n      275,\r\n      279,\r\n      292,\r\n      302,\r\n      317,\r\n      327\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      20,\r\n      25,\r\n      40,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      72.19043259327077,\r\n      4.2295719844358075,\r\n      16.731517509727638\r\n    ],\r\n    \"rgb\": [\r\n      194,\r\n      174,\r\n      147\r\n    ],\r\n    \"hex\": \"#c2ae93\"\r\n  },\r\n  {\r\n    \"name\": \"Yellow\",\r\n    \"combinations\": [\r\n      22,\r\n      62,\r\n      68,\r\n      154,\r\n      240,\r\n      251,\r\n      295,\r\n      313\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      0,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      94.96452277409018,\r\n      -6.45525291828794,\r\n      95.57976653696497\r\n    ],\r\n    \"rgb\": [\r\n      255,\r\n      242,\r\n      0\r\n    ],\r\n    \"hex\": \"#fff200\"\r\n  },\r\n  {\r\n    \"name\": \"Lemon Yellow\",\r\n    \"combinations\": [\r\n      45,\r\n      123,\r\n      138,\r\n      158,\r\n      168,\r\n      173,\r\n      189,\r\n      210,\r\n      253,\r\n      259,\r\n      289,\r\n      298,\r\n      306,\r\n      317,\r\n      333\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      5,\r\n      0,\r\n      85,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      92.65583276112001,\r\n      -9.389105058365757,\r\n      77.7626459143969\r\n    ],\r\n    \"rgb\": [\r\n      248,\r\n      237,\r\n      67\r\n    ],\r\n    \"hex\": \"#f8ed43\"\r\n  },\r\n  {\r\n    \"name\": \"Apricot Yellow\",\r\n    \"combinations\": [\r\n      107,\r\n      129,\r\n      163,\r\n      198,\r\n      213,\r\n      247,\r\n      265,\r\n      284,\r\n      305,\r\n      319\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      10,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      89.35072861829556,\r\n      1.9066147859922182,\r\n      89.45525291828793\r\n    ],\r\n    \"rgb\": [\r\n      255,\r\n      221,\r\n      0\r\n    ],\r\n    \"hex\": \"#ffdd00\"\r\n  },\r\n  {\r\n    \"name\": \"Pyrite Yellow\",\r\n    \"combinations\": [\r\n      239,\r\n      250,\r\n      255,\r\n      287\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      23,\r\n      25,\r\n      80,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      73.56221866178377,\r\n      0.4241245136186649,\r\n      49.8171206225681\r\n    ],\r\n    \"rgb\": [\r\n      202,\r\n      179,\r\n      86\r\n    ],\r\n    \"hex\": \"#cab356\"\r\n  },\r\n  {\r\n    \"name\": \"Olive Ocher\",\r\n    \"combinations\": [\r\n      66,\r\n      148,\r\n      149,\r\n      156,\r\n      157,\r\n      249,\r\n      278\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      18,\r\n      26,\r\n      90,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      74.87907225146868,\r\n      3.568093385214013,\r\n      61.805447470817114\r\n    ],\r\n    \"rgb\": [\r\n      214,\r\n      180,\r\n      62\r\n    ],\r\n    \"hex\": \"#d6b43e\"\r\n  },\r\n  {\r\n    \"name\": \"Yellow Ocher\",\r\n    \"combinations\": [\r\n      42,\r\n      96,\r\n      118,\r\n      124,\r\n      126,\r\n      191,\r\n      222,\r\n      325\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      12,\r\n      28,\r\n      88,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      76.19134813458457,\r\n      8.44357976653697,\r\n      62.7898832684825\r\n    ],\r\n    \"rgb\": [\r\n      226,\r\n      181,\r\n      64\r\n    ],\r\n    \"hex\": \"#e2b540\"\r\n  },\r\n  {\r\n    \"name\": \"Orange Yellow\",\r\n    \"combinations\": [\r\n      114,\r\n      148,\r\n      153,\r\n      164,\r\n      170,\r\n      257,\r\n      286,\r\n      338\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      33,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      78.49393453879605,\r\n      19.571984435797674,\r\n      78.21789883268482\r\n    ],\r\n    \"rgb\": [\r\n      252,\r\n      179,\r\n      21\r\n    ],\r\n    \"hex\": \"#fcb315\"\r\n  },\r\n  {\r\n    \"name\": \"Yellow Orange\",\r\n    \"combinations\": [\r\n      2,\r\n      53,\r\n      89,\r\n      151,\r\n      171,\r\n      209,\r\n      222,\r\n      235,\r\n      267,\r\n      288,\r\n      297,\r\n      312,\r\n      319,\r\n      335\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      45,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      72.95948729686427,\r\n      29.404669260700388,\r\n      72.94163424124514\r\n    ],\r\n    \"rgb\": [\r\n      249,\r\n      157,\r\n      27\r\n    ],\r\n    \"hex\": \"#f99d1b\"\r\n  },\r\n  {\r\n    \"name\": \"Apricot Orange\",\r\n    \"combinations\": [\r\n      211,\r\n      253,\r\n      309,\r\n      328\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      55,\r\n      75,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      69.3736171511406,\r\n      37.688715953307394,\r\n      49.64980544747081\r\n    ],\r\n    \"rgb\": [\r\n      246,\r\n      140,\r\n      80\r\n    ],\r\n    \"hex\": \"#f68c50\"\r\n  },\r\n  {\r\n    \"name\": \"Orange\",\r\n    \"combinations\": [\r\n      7,\r\n      46,\r\n      141,\r\n      144,\r\n      149,\r\n      256,\r\n      272\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      68,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      63.79797055008774,\r\n      47.159533073929964,\r\n      64.715953307393\r\n    ],\r\n    \"rgb\": [\r\n      243,\r\n      116,\r\n      32\r\n    ],\r\n    \"hex\": \"#f37420\"\r\n  },\r\n  {\r\n    \"name\": \"Peach Red\",\r\n    \"combinations\": [\r\n      115,\r\n      250,\r\n      274,\r\n      285,\r\n      298,\r\n      303,\r\n      326,\r\n      340\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      0,\r\n      80,\r\n      90,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      59.09666590371557,\r\n      57.54863813229571,\r\n      54.35019455252919\r\n    ],\r\n    \"rgb\": [\r\n      241,\r\n      90,\r\n      48\r\n    ],\r\n    \"hex\": \"#f15a30\"\r\n  },\r\n  {\r\n    \"name\": \"English Red\",\r\n    \"combinations\": [\r\n      1,\r\n      131,\r\n      190,\r\n      308,\r\n      339\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      13,\r\n      73,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      57.2152285038529,\r\n      43.29961089494162,\r\n      54.361867704280144\r\n    ],\r\n    \"rgb\": [\r\n      217,\r\n      102,\r\n      41\r\n    ],\r\n    \"hex\": \"#d96629\"\r\n  },\r\n  {\r\n    \"name\": \"Cinnamon Rufous\",\r\n    \"combinations\": [\r\n      8,\r\n      10,\r\n      103,\r\n      158,\r\n      172,\r\n      204,\r\n      206\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      20,\r\n      60,\r\n      82,\r\n      5\r\n    ],\r\n    \"lab\": [\r\n      57.233539330128934,\r\n      27.76653696498053,\r\n      40.22957198443581\r\n    ],\r\n    \"rgb\": [\r\n      194,\r\n      117,\r\n      68\r\n    ],\r\n    \"hex\": \"#c27544\"\r\n  },\r\n  {\r\n    \"name\": \"Orange Rufous\",\r\n    \"combinations\": [\r\n      91,\r\n      102,\r\n      222\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      18,\r\n      65,\r\n      100,\r\n      8\r\n    ],\r\n    \"lab\": [\r\n      54.56168459601739,\r\n      31.61089494163423,\r\n      51.245136186770424\r\n    ],\r\n    \"rgb\": [\r\n      193,\r\n      107,\r\n      39\r\n    ],\r\n    \"hex\": \"#c16b27\"\r\n  },\r\n  {\r\n    \"name\": \"Sulphine Yellow\",\r\n    \"combinations\": [\r\n      36,\r\n      65,\r\n      142,\r\n      160,\r\n      252\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      24,\r\n      32,\r\n      100,\r\n      4\r\n    ],\r\n    \"lab\": [\r\n      67.23887998779279,\r\n      4.346303501945528,\r\n      60.55252918287937\r\n    ],\r\n    \"rgb\": [\r\n      193,\r\n      159,\r\n      44\r\n    ],\r\n    \"hex\": \"#c19f2c\"\r\n  },\r\n  {\r\n    \"name\": \"Khaki\",\r\n    \"combinations\": [\r\n      129,\r\n      146,\r\n      159,\r\n      236,\r\n      248\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      24,\r\n      45,\r\n      100,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      61.01930266269932,\r\n      13.859922178988313,\r\n      55.05058365758754\r\n    ],\r\n    \"rgb\": [\r\n      188,\r\n      137,\r\n      43\r\n    ],\r\n    \"hex\": \"#bc892b\"\r\n  },\r\n  {\r\n    \"name\": \"Citron Yellow\",\r\n    \"combinations\": [\r\n      40,\r\n      87,\r\n      145,\r\n      150,\r\n      153,\r\n      196,\r\n      305,\r\n      323\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      35,\r\n      17,\r\n      95,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      72.4650949874113,\r\n      -13.062256809338521,\r\n      58.17509727626458\r\n    ],\r\n    \"rgb\": [\r\n      178,\r\n      183,\r\n      62\r\n    ],\r\n    \"hex\": \"#b2b73e\"\r\n  },\r\n  {\r\n    \"name\": \"Citrine\",\r\n    \"combinations\": [\r\n      59,\r\n      93,\r\n      132,\r\n      133,\r\n      262\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      36,\r\n      32,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      65.5588616769665,\r\n      -2.579766536964982,\r\n      54.486381322957186\r\n    ],\r\n    \"rgb\": [\r\n      176,\r\n      159,\r\n      54\r\n    ],\r\n    \"hex\": \"#b09f36\"\r\n  },\r\n  {\r\n    \"name\": \"Buffy Citrine\",\r\n    \"combinations\": [\r\n      100,\r\n      177,\r\n      233\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      42,\r\n      40,\r\n      82,\r\n      8\r\n    ],\r\n    \"lab\": [\r\n      56.61860074769207,\r\n      0.0,\r\n      33.29961089494162\r\n    ],\r\n    \"rgb\": [\r\n      150,\r\n      135,\r\n      77\r\n    ],\r\n    \"hex\": \"#96874d\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Citrine\",\r\n    \"combinations\": [\r\n      10,\r\n      41,\r\n      274,\r\n      304\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      38,\r\n      34,\r\n      67,\r\n      20\r\n    ],\r\n    \"lab\": [\r\n      54.71427481498436,\r\n      -1.4046692607003877,\r\n      23.066147859922182\r\n    ],\r\n    \"rgb\": [\r\n      139,\r\n      131,\r\n      91\r\n    ],\r\n    \"hex\": \"#8b835b\"\r\n  },\r\n  {\r\n    \"name\": \"Light Grayish Olive\",\r\n    \"combinations\": [\r\n      107,\r\n      184\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      43,\r\n      36,\r\n      62,\r\n      19\r\n    ],\r\n    \"lab\": [\r\n      53.185320820935374,\r\n      -2.276264591439684,\r\n      17.019455252918277\r\n    ],\r\n    \"rgb\": [\r\n      132,\r\n      128,\r\n      97\r\n    ],\r\n    \"hex\": \"#848061\"\r\n  },\r\n  {\r\n    \"name\": \"Krongbergs Green\",\r\n    \"combinations\": [\r\n      29\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      48,\r\n      35,\r\n      70,\r\n      12\r\n    ],\r\n    \"lab\": [\r\n      55.12474250400549,\r\n      -6.1867704280155635,\r\n      21.509727626459153\r\n    ],\r\n    \"rgb\": [\r\n      132,\r\n      135,\r\n      94\r\n    ],\r\n    \"hex\": \"#84875e\"\r\n  },\r\n  {\r\n    \"name\": \"Olive\",\r\n    \"combinations\": [\r\n      96,\r\n      201,\r\n      254,\r\n      258,\r\n      277,\r\n      310,\r\n      334\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      48,\r\n      38,\r\n      100,\r\n      15\r\n    ],\r\n    \"lab\": [\r\n      52.213321126115815,\r\n      -5.727626459143963,\r\n      41.486381322957186\r\n    ],\r\n    \"rgb\": [\r\n      131,\r\n      126,\r\n      49\r\n    ],\r\n    \"hex\": \"#837e31\"\r\n  },\r\n  {\r\n    \"name\": \"Orange Citrine\",\r\n    \"combinations\": [\r\n      212,\r\n      342\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      28,\r\n      48,\r\n      92,\r\n      24\r\n    ],\r\n    \"lab\": [\r\n      50.24185549706264,\r\n      11.517509727626447,\r\n      42.046692607003905\r\n    ],\r\n    \"rgb\": [\r\n      152,\r\n      111,\r\n      45\r\n    ],\r\n    \"hex\": \"#986f2d\"\r\n  },\r\n  {\r\n    \"name\": \"Sudan Brown\",\r\n    \"combinations\": [\r\n      207,\r\n      214,\r\n      273\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      25,\r\n      60,\r\n      65,\r\n      19\r\n    ],\r\n    \"lab\": [\r\n      49.8619058518349,\r\n      23.03112840466926,\r\n      22.451361867704293\r\n    ],\r\n    \"rgb\": [\r\n      163,\r\n      103,\r\n      82\r\n    ],\r\n    \"hex\": \"#a36752\"\r\n  },\r\n  {\r\n    \"name\": \"Olive Green\",\r\n    \"combinations\": [\r\n      66,\r\n      243,\r\n      270,\r\n      297\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      56,\r\n      40,\r\n      85,\r\n      22\r\n    ],\r\n    \"lab\": [\r\n      46.38590066376745,\r\n      -8.494163424124508,\r\n      26.486381322957186\r\n    ],\r\n    \"rgb\": [\r\n      107,\r\n      113,\r\n      64\r\n    ],\r\n    \"hex\": \"#6b7140\"\r\n  },\r\n  {\r\n    \"name\": \"Light Brownish Olive\",\r\n    \"combinations\": [\r\n      199,\r\n      318\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      42,\r\n      46,\r\n      73,\r\n      24\r\n    ],\r\n    \"lab\": [\r\n      47.50743877317464,\r\n      3.747081712062254,\r\n      22.194552529182886\r\n    ],\r\n    \"rgb\": [\r\n      128,\r\n      110,\r\n      75\r\n    ],\r\n    \"hex\": \"#806e4b\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Grayish Olive\",\r\n    \"combinations\": [\r\n      146,\r\n      343\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      50,\r\n      48,\r\n      78,\r\n      37\r\n    ],\r\n    \"lab\": [\r\n      38.605325398641945,\r\n      -0.28404669260700643,\r\n      19.94163424124514\r\n    ],\r\n    \"rgb\": [\r\n      99,\r\n      90,\r\n      58\r\n    ],\r\n    \"hex\": \"#635a3a\"\r\n  },\r\n  {\r\n    \"name\": \"Pale Raw Umber\",\r\n    \"combinations\": [\r\n      26,\r\n      73,\r\n      160,\r\n      234,\r\n      296\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      46,\r\n      63,\r\n      87,\r\n      32\r\n    ],\r\n    \"lab\": [\r\n      37.065690089265274,\r\n      11.190661478599225,\r\n      24.957198443579756\r\n    ],\r\n    \"rgb\": [\r\n      113,\r\n      80,\r\n      47\r\n    ],\r\n    \"hex\": \"#71502f\"\r\n  },\r\n  {\r\n    \"name\": \"Sepia\",\r\n    \"combinations\": [\r\n      24,\r\n      288\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      48,\r\n      60,\r\n      100,\r\n      40\r\n    ],\r\n    \"lab\": [\r\n      33.82619974059663,\r\n      6.867704280155635,\r\n      30.23346303501947\r\n    ],\r\n    \"rgb\": [\r\n      100,\r\n      75,\r\n      30\r\n    ],\r\n    \"hex\": \"#644b1e\"\r\n  },\r\n  {\r\n    \"name\": \"Madder Brown\",\r\n    \"combinations\": [\r\n      28,\r\n      79,\r\n      98,\r\n      173,\r\n      237,\r\n      275,\r\n      323\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      36,\r\n      88,\r\n      100,\r\n      38\r\n    ],\r\n    \"lab\": [\r\n      29.08522163729305,\r\n      32.0,\r\n      29.280155642023345\r\n    ],\r\n    \"rgb\": [\r\n      118,\r\n      44,\r\n      25\r\n    ],\r\n    \"hex\": \"#762c19\"\r\n  },\r\n  {\r\n    \"name\": \"Mars Brown Tobacco\",\r\n    \"combinations\": [\r\n      19\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      39,\r\n      76,\r\n      100,\r\n      47\r\n    ],\r\n    \"lab\": [\r\n      28.032349126420996,\r\n      20.451361867704293,\r\n      29.836575875486375\r\n    ],\r\n    \"rgb\": [\r\n      101,\r\n      53,\r\n      20\r\n    ],\r\n    \"hex\": \"#653514\"\r\n  },\r\n  {\r\n    \"name\": \"Vandyke Brown\",\r\n    \"combinations\": [\r\n      110,\r\n      113,\r\n      118,\r\n      182,\r\n      192,\r\n      328\r\n    ],\r\n    \"swatch\": 1,\r\n    \"cmyk\": [\r\n      56,\r\n      71,\r\n      97,\r\n      52\r\n    ],\r\n    \"lab\": [\r\n      23.811703669794767,\r\n      8.49805447470817,\r\n      22.101167315175104\r\n    ],\r\n    \"rgb\": [\r\n      75,\r\n      51,\r\n      23\r\n    ],\r\n    \"hex\": \"#4b3317\"\r\n  },\r\n  {\r\n    \"name\": \"Turquoise Green\",\r\n    \"combinations\": [\r\n      36,\r\n      74,\r\n      147,\r\n      163,\r\n      173,\r\n      202,\r\n      223,\r\n      230,\r\n      263,\r\n      272,\r\n      285,\r\n      293,\r\n      300,\r\n      305,\r\n      317,\r\n      346\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      29,\r\n      0,\r\n      24,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      85.26283665217059,\r\n      -16.891050583657588,\r\n      4.595330739299612\r\n    ],\r\n    \"rgb\": [\r\n      181,\r\n      222,\r\n      204\r\n    ],\r\n    \"hex\": \"#b5decc\"\r\n  },\r\n  {\r\n    \"name\": \"Glaucous Green\",\r\n    \"combinations\": [\r\n      7,\r\n      150,\r\n      171,\r\n      207,\r\n      239,\r\n      260\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      30,\r\n      9,\r\n      24,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      80.29755092698558,\r\n      -10.237354085603116,\r\n      2.2996108949416225\r\n    ],\r\n    \"rgb\": [\r\n      180,\r\n      205,\r\n      194\r\n    ],\r\n    \"hex\": \"#b4cdc2\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Greenish Glaucous\",\r\n    \"combinations\": [\r\n      264,\r\n      311\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      30,\r\n      15,\r\n      36,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      77.09010452429999,\r\n      -7.5564202334630295,\r\n      11.369649805447466\r\n    ],\r\n    \"rgb\": [\r\n      183,\r\n      194,\r\n      169\r\n    ],\r\n    \"hex\": \"#b7c2a9\"\r\n  },\r\n  {\r\n    \"name\": \"Yellow Green\",\r\n    \"combinations\": [\r\n      111,\r\n      141,\r\n      276,\r\n      326,\r\n      334\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      35,\r\n      0,\r\n      72,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      80.60883497367819,\r\n      -24.599221789883273,\r\n      43.91050583657588\r\n    ],\r\n    \"rgb\": [\r\n      175,\r\n      212,\r\n      114\r\n    ],\r\n    \"hex\": \"#afd472\"\r\n  },\r\n  {\r\n    \"name\": \"Light Green Yellow\",\r\n    \"combinations\": [\r\n      61,\r\n      289,\r\n      291,\r\n      311,\r\n      346\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      26,\r\n      5,\r\n      85,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      81.13527122911421,\r\n      -15.863813229571988,\r\n      60.55642023346303\r\n    ],\r\n    \"rgb\": [\r\n      199,\r\n      209,\r\n      79\r\n    ],\r\n    \"hex\": \"#c7d14f\"\r\n  },\r\n  {\r\n    \"name\": \"Night Green\",\r\n    \"combinations\": [\r\n      19,\r\n      32,\r\n      158,\r\n      326\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      52,\r\n      0,\r\n      100,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      73.30739299610894,\r\n      -36.03112840466926,\r\n      57.0272373540856\r\n    ],\r\n    \"rgb\": [\r\n      135,\r\n      197,\r\n      64\r\n    ],\r\n    \"hex\": \"#87c540\"\r\n  },\r\n  {\r\n    \"name\": \"Olive Yellow\",\r\n    \"combinations\": [\r\n      124,\r\n      211,\r\n      265,\r\n      347\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      40,\r\n      30,\r\n      80,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      65.48561837186236,\r\n      -6.054474708171213,\r\n      37.836575875486375\r\n    ],\r\n    \"rgb\": [\r\n      166,\r\n      161,\r\n      89\r\n    ],\r\n    \"hex\": \"#a6a159\"\r\n  },\r\n  {\r\n    \"name\": \"Artemesia Green\",\r\n    \"combinations\": [\r\n      293,\r\n      312\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      57,\r\n      28,\r\n      39,\r\n      8\r\n    ],\r\n    \"lab\": [\r\n      58.101777676050965,\r\n      -12.832684824902728,\r\n      -2.891050583657588\r\n    ],\r\n    \"rgb\": [\r\n      112,\r\n      147,\r\n      144\r\n    ],\r\n    \"hex\": \"#709390\"\r\n  },\r\n  {\r\n    \"name\": \"Andover Green\",\r\n    \"combinations\": [\r\n      244,\r\n      346\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      60,\r\n      40,\r\n      50,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      51.212329289692526,\r\n      -7.7626459143968845,\r\n      1.5369649805447523\r\n    ],\r\n    \"rgb\": [\r\n      109,\r\n      126,\r\n      119\r\n    ],\r\n    \"hex\": \"#6d7e77\"\r\n  },\r\n  {\r\n    \"name\": \"Rainette Green\",\r\n    \"combinations\": [\r\n      73,\r\n      162,\r\n      188,\r\n      266,\r\n      301\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      42,\r\n      20,\r\n      62,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      63.738460364690624,\r\n      -12.525291828793769,\r\n      22.44747081712063\r\n    ],\r\n    \"rgb\": [\r\n      143,\r\n      160,\r\n      113\r\n    ],\r\n    \"hex\": \"#8fa071\"\r\n  },\r\n  {\r\n    \"name\": \"Chromium Green\",\r\n    \"combinations\": [\r\n      105,\r\n      200,\r\n      219,\r\n      283\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      50,\r\n      16,\r\n      58,\r\n      20\r\n    ],\r\n    \"lab\": [\r\n      57.87289234760052,\r\n      -18.147859922178995,\r\n      14.992217898832678\r\n    ],\r\n    \"rgb\": [\r\n      113,\r\n      148,\r\n      112\r\n    ],\r\n    \"hex\": \"#719470\"\r\n  },\r\n  {\r\n    \"name\": \"Pistachio Green\",\r\n    \"combinations\": [\r\n      127,\r\n      137\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      64,\r\n      29,\r\n      56,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      55.82055390249485,\r\n      -18.642023346303503,\r\n      5.688715953307394\r\n    ],\r\n    \"rgb\": [\r\n      100,\r\n      143,\r\n      123\r\n    ],\r\n    \"hex\": \"#648f7b\"\r\n  },\r\n  {\r\n    \"name\": \"Sea Green\",\r\n    \"combinations\": [\r\n      17,\r\n      21,\r\n      58,\r\n      86,\r\n      133,\r\n      250,\r\n      260,\r\n      284,\r\n      291,\r\n      340,\r\n      347\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      80,\r\n      0,\r\n      51,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      65.05226214999618,\r\n      -48.90272373540856,\r\n      0.4591439688715866\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      180,\r\n      155\r\n    ],\r\n    \"hex\": \"#00b49b\"\r\n  },\r\n  {\r\n    \"name\": \"Benzol Green\",\r\n    \"combinations\": [\r\n      15,\r\n      54,\r\n      92,\r\n      122,\r\n      155,\r\n      247,\r\n      266,\r\n      267,\r\n      281,\r\n      304,\r\n      306\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      100,\r\n      15,\r\n      55,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      53.56221866178378,\r\n      -54.62645914396887,\r\n      -8.307392996108945\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      151,\r\n      141\r\n    ],\r\n    \"hex\": \"#00978d\"\r\n  },\r\n  {\r\n    \"name\": \"Light Porcelain Green\",\r\n    \"combinations\": [\r\n      44,\r\n      193,\r\n      328\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      86,\r\n      22,\r\n      50,\r\n      3\r\n    ],\r\n    \"lab\": [\r\n      53.29518577859159,\r\n      -37.52140077821012,\r\n      -6.832684824902728\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      144,\r\n      138\r\n    ],\r\n    \"hex\": \"#00908a\"\r\n  },\r\n  {\r\n    \"name\": \"Green\",\r\n    \"combinations\": [\r\n      198,\r\n      216,\r\n      293\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      75,\r\n      21,\r\n      73,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      57.770656900892654,\r\n      -34.50972762645914,\r\n      15.58754863813229\r\n    ],\r\n    \"rgb\": [\r\n      72,\r\n      155,\r\n      110\r\n    ],\r\n    \"hex\": \"#489b6e\"\r\n  },\r\n  {\r\n    \"name\": \"Dull Viridian Green\",\r\n    \"combinations\": [\r\n      136,\r\n      256,\r\n      306,\r\n      316\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      90,\r\n      20,\r\n      80,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      53.49965667200732,\r\n      -49.00389105058366,\r\n      14.43968871595331\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      148,\r\n      101\r\n    ],\r\n    \"hex\": \"#009465\"\r\n  },\r\n  {\r\n    \"name\": \"Oil Green\",\r\n    \"combinations\": [\r\n      245,\r\n      299,\r\n      320\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      53,\r\n      28,\r\n      100,\r\n      8\r\n    ],\r\n    \"lab\": [\r\n      57.639429312581065,\r\n      -16.01167315175097,\r\n      43.76653696498053\r\n    ],\r\n    \"rgb\": [\r\n      129,\r\n      146,\r\n      56\r\n    ],\r\n    \"hex\": \"#819238\"\r\n  },\r\n  {\r\n    \"name\": \"Diamine Green\",\r\n    \"combinations\": [\r\n      38,\r\n      146,\r\n      217,\r\n      242,\r\n      251,\r\n      313\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      87,\r\n      32,\r\n      91,\r\n      18\r\n    ],\r\n    \"lab\": [\r\n      42.738994430457005,\r\n      -35.661478599221795,\r\n      18.56031128404669\r\n    ],\r\n    \"rgb\": [\r\n      26,\r\n      116,\r\n      68\r\n    ],\r\n    \"hex\": \"#1a7444\"\r\n  },\r\n  {\r\n    \"name\": \"Cossack Green\",\r\n    \"combinations\": [\r\n      5,\r\n      135,\r\n      262,\r\n      270,\r\n      278,\r\n      294,\r\n      319,\r\n      341,\r\n      348\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      76,\r\n      32,\r\n      91,\r\n      18\r\n    ],\r\n    \"lab\": [\r\n      45.46425574120699,\r\n      -27.202334630350194,\r\n      23.44747081712063\r\n    ],\r\n    \"rgb\": [\r\n      67,\r\n      119,\r\n      66\r\n    ],\r\n    \"hex\": \"#437742\"\r\n  },\r\n  {\r\n    \"name\": \"Lincoln Green\",\r\n    \"combinations\": [\r\n      70,\r\n      121,\r\n      203,\r\n      210,\r\n      280,\r\n      290\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      60,\r\n      48,\r\n      86,\r\n      37\r\n    ],\r\n    \"lab\": [\r\n      36.266117341878385,\r\n      -5.906614785992218,\r\n      21.182879377431902\r\n    ],\r\n    \"rgb\": [\r\n      85,\r\n      88,\r\n      50\r\n    ],\r\n    \"hex\": \"#555832\"\r\n  },\r\n  {\r\n    \"name\": \"Blackish Olive\",\r\n    \"combinations\": [\r\n      109,\r\n      318,\r\n      336\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      56,\r\n      32,\r\n      63,\r\n      55\r\n    ],\r\n    \"lab\": [\r\n      33.261615930418856,\r\n      -10.128404669260703,\r\n      9.688715953307394\r\n    ],\r\n    \"rgb\": [\r\n      66,\r\n      83,\r\n      62\r\n    ],\r\n    \"hex\": \"#42533e\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Slate Olive\",\r\n    \"combinations\": [\r\n      189,\r\n      229,\r\n      268,\r\n      303,\r\n      310,\r\n      321,\r\n      332,\r\n      341,\r\n      342,\r\n      348\r\n    ],\r\n    \"swatch\": 2,\r\n    \"cmyk\": [\r\n      76,\r\n      60,\r\n      80,\r\n      62\r\n    ],\r\n    \"lab\": [\r\n      18.800640878919662,\r\n      -7.669260700389103,\r\n      7.536964980544752\r\n    ],\r\n    \"rgb\": [\r\n      37,\r\n      49,\r\n      34\r\n    ],\r\n    \"hex\": \"#253122\"\r\n  },\r\n  {\r\n    \"name\": \"Nile Blue\",\r\n    \"combinations\": [\r\n      25,\r\n      250,\r\n      268,\r\n      302,\r\n      306,\r\n      330,\r\n      345\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      25,\r\n      0,\r\n      10,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      87.6752880140383,\r\n      -13.252918287937746,\r\n      -5.031128404669261\r\n    ],\r\n    \"rgb\": [\r\n      188,\r\n      228,\r\n      229\r\n    ],\r\n    \"hex\": \"#bce4e5\"\r\n  },\r\n  {\r\n    \"name\": \"Pale King's Blue\",\r\n    \"combinations\": [\r\n      16,\r\n      49,\r\n      72,\r\n      75,\r\n      167,\r\n      196,\r\n      213,\r\n      234,\r\n      287\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      33,\r\n      4,\r\n      7,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      82.21408407721064,\r\n      -12.735408560311285,\r\n      -12.883268482490266\r\n    ],\r\n    \"rgb\": [\r\n      167,\r\n      212,\r\n      228\r\n    ],\r\n    \"hex\": \"#a7d4e4\"\r\n  },\r\n  {\r\n    \"name\": \"Light Glaucous Blue\",\r\n    \"combinations\": [\r\n      54,\r\n      93,\r\n      119,\r\n      152,\r\n      178,\r\n      204,\r\n      227,\r\n      320,\r\n      339,\r\n      341\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      35,\r\n      10,\r\n      14,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      78.20859082932783,\r\n      -10.568093385214013,\r\n      -8.723735408560316\r\n    ],\r\n    \"rgb\": [\r\n      165,\r\n      200,\r\n      209\r\n    ],\r\n    \"hex\": \"#a5c8d1\"\r\n  },\r\n  {\r\n    \"name\": \"Salvia Blue\",\r\n    \"combinations\": [\r\n      29,\r\n      129,\r\n      135,\r\n      139,\r\n      142,\r\n      188,\r\n      209,\r\n      212,\r\n      237,\r\n      272,\r\n      294,\r\n      321,\r\n      330\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      41,\r\n      25,\r\n      10,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      69.4697489890898,\r\n      -2.7587548638132233,\r\n      -16.754863813229576\r\n    ],\r\n    \"rgb\": [\r\n      151,\r\n      172,\r\n      200\r\n    ],\r\n    \"hex\": \"#97acc8\"\r\n  },\r\n  {\r\n    \"name\": \"Cobalt Green\",\r\n    \"combinations\": [\r\n      156,\r\n      188,\r\n      201,\r\n      202,\r\n      230,\r\n      271,\r\n      281,\r\n      282,\r\n      290,\r\n      291,\r\n      308,\r\n      333\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      42,\r\n      0,\r\n      42,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      79.01274128328375,\r\n      -25.56420233463035,\r\n      13.0\r\n    ],\r\n    \"rgb\": [\r\n      150,\r\n      209,\r\n      170\r\n    ],\r\n    \"hex\": \"#96d1aa\"\r\n  },\r\n  {\r\n    \"name\": \"Calamine BLue\",\r\n    \"combinations\": [\r\n      20,\r\n      41,\r\n      65,\r\n      159,\r\n      176,\r\n      255,\r\n      261,\r\n      287,\r\n      291,\r\n      300\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      50,\r\n      0,\r\n      20,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      77.09010452429999,\r\n      -26.241245136186777,\r\n      -10.373540856031127\r\n    ],\r\n    \"rgb\": [\r\n      120,\r\n      205,\r\n      208\r\n    ],\r\n    \"hex\": \"#78cdd0\"\r\n  },\r\n  {\r\n    \"name\": \"Venice Green\",\r\n    \"combinations\": [\r\n      78,\r\n      128,\r\n      138,\r\n      189,\r\n      283,\r\n      345\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      58,\r\n      0,\r\n      30,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      73.69954985885404,\r\n      -31.731517509727624,\r\n      -6.140077821011673\r\n    ],\r\n    \"rgb\": [\r\n      98,\r\n      198,\r\n      191\r\n    ],\r\n    \"hex\": \"#62c6bf\"\r\n  },\r\n  {\r\n    \"name\": \"Cerulian Blue\",\r\n    \"combinations\": [\r\n      1,\r\n      63,\r\n      99,\r\n      125,\r\n      148,\r\n      227,\r\n      240,\r\n      264\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      84,\r\n      26,\r\n      32,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      54.972152285038526,\r\n      -30.186770428015564,\r\n      -20.13618677042801\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      147,\r\n      165\r\n    ],\r\n    \"hex\": \"#0093a5\"\r\n  },\r\n  {\r\n    \"name\": \"Peacock Blue\",\r\n    \"combinations\": [\r\n      131,\r\n      286\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      19,\r\n      43,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      52.78553444724193,\r\n      -48.91050583657588,\r\n      -17.51750972762646\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      147,\r\n      155\r\n    ],\r\n    \"hex\": \"#00939b\"\r\n  },\r\n  {\r\n    \"name\": \"Green Blue\",\r\n    \"combinations\": [\r\n      12,\r\n      74,\r\n      79,\r\n      178,\r\n      208,\r\n      252,\r\n      259,\r\n      271,\r\n      330\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      82,\r\n      24,\r\n      40,\r\n      3\r\n    ],\r\n    \"lab\": [\r\n      54.134431982909895,\r\n      -31.268482490272376,\r\n      -12.883268482490266\r\n    ],\r\n    \"rgb\": [\r\n      9,\r\n      145,\r\n      151\r\n    ],\r\n    \"hex\": \"#099197\"\r\n  },\r\n  {\r\n    \"name\": \"Olympic Blue\",\r\n    \"combinations\": [\r\n      44,\r\n      67,\r\n      157,\r\n      194,\r\n      231,\r\n      274,\r\n      324\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      69,\r\n      44,\r\n      10,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      53.090714885175856,\r\n      -3.634241245136181,\r\n      -30.739299610894946\r\n    ],\r\n    \"rgb\": [\r\n      90,\r\n      130,\r\n      179\r\n    ],\r\n    \"hex\": \"#5a82b3\"\r\n  },\r\n  {\r\n    \"name\": \"Blue\",\r\n    \"combinations\": [\r\n      49,\r\n      51,\r\n      88,\r\n      143,\r\n      154,\r\n      186,\r\n      191,\r\n      215,\r\n      257,\r\n      267,\r\n      295,\r\n      333\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      95,\r\n      54,\r\n      0,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      43.49431601434348,\r\n      -8.832684824902728,\r\n      -48.77042801556421\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      110,\r\n      184\r\n    ],\r\n    \"hex\": \"#006eb8\"\r\n  },\r\n  {\r\n    \"name\": \"Antwarp Blue\",\r\n    \"combinations\": [\r\n      85,\r\n      106,\r\n      114,\r\n      140,\r\n      163,\r\n      172,\r\n      208,\r\n      244,\r\n      258,\r\n      281,\r\n      299,\r\n      302,\r\n      334\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      40,\r\n      30,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      42.03250171663996,\r\n      -29.124513618677042,\r\n      -27.727626459143963\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      113,\r\n      144\r\n    ],\r\n    \"hex\": \"#007190\"\r\n  },\r\n  {\r\n    \"name\": \"Helvetia Blue\",\r\n    \"combinations\": [\r\n      39,\r\n      48,\r\n      161,\r\n      187,\r\n      218,\r\n      259,\r\n      312,\r\n      347\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      62,\r\n      19,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      35.309376668955515,\r\n      -12.101167315175104,\r\n      -36.37354085603113\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      91,\r\n      141\r\n    ],\r\n    \"hex\": \"#005b8d\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Medici Blue\",\r\n    \"combinations\": [\r\n      160,\r\n      224,\r\n      241,\r\n      249\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      70,\r\n      45,\r\n      45,\r\n      15\r\n    ],\r\n    \"lab\": [\r\n      45.117875944151976,\r\n      -9.225680933852146,\r\n      -6.856031128404666\r\n    ],\r\n    \"rgb\": [\r\n      84,\r\n      112,\r\n      118\r\n    ],\r\n    \"hex\": \"#547076\"\r\n  },\r\n  {\r\n    \"name\": \"Dusky Green\",\r\n    \"combinations\": [\r\n      94,\r\n      219,\r\n      225,\r\n      278,\r\n      284,\r\n      318,\r\n      332,\r\n      338\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      30,\r\n      64,\r\n      50\r\n    ],\r\n    \"lab\": [\r\n      27.965209430075532,\r\n      -36.268482490272376,\r\n      -3.2801556420233453\r\n    ],\r\n    \"rgb\": [\r\n      0,\r\n      79,\r\n      70\r\n    ],\r\n    \"hex\": \"#004f46\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Lyons Blue\",\r\n    \"combinations\": [\r\n      22,\r\n      38,\r\n      101,\r\n      126,\r\n      179,\r\n      199,\r\n      236,\r\n      247,\r\n      314,\r\n      344\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      85,\r\n      15,\r\n      6\r\n    ],\r\n    \"lab\": [\r\n      28.532845044632637,\r\n      6.560311284046691,\r\n      -42.68093385214007\r\n    ],\r\n    \"rgb\": [\r\n      28,\r\n      66,\r\n      134\r\n    ],\r\n    \"hex\": \"#1c4286\"\r\n  },\r\n  {\r\n    \"name\": \"Violet Blue\",\r\n    \"combinations\": [\r\n      75,\r\n      83,\r\n      89,\r\n      98,\r\n      125,\r\n      233,\r\n      286,\r\n      289,\r\n      297,\r\n      309,\r\n      339\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      85,\r\n      79,\r\n      38,\r\n      16\r\n    ],\r\n    \"lab\": [\r\n      30.14724956130312,\r\n      5.435797665369648,\r\n      -22.377431906614788\r\n    ],\r\n    \"rgb\": [\r\n      64,\r\n      69,\r\n      106\r\n    ],\r\n    \"hex\": \"#40456a\"\r\n  },\r\n  {\r\n    \"name\": \"Vandar Poel's Blue\",\r\n    \"combinations\": [\r\n      5,\r\n      77,\r\n      151,\r\n      167,\r\n      168,\r\n      309,\r\n      343\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      73,\r\n      43,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      30.77744716563668,\r\n      -11.264591439688715,\r\n      -24.521400778210122\r\n    ],\r\n    \"rgb\": [\r\n      6,\r\n      79,\r\n      110\r\n    ],\r\n    \"hex\": \"#064f6e\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Tyrian Blue\",\r\n    \"combinations\": [\r\n      2,\r\n      60,\r\n      67,\r\n      119,\r\n      141,\r\n      245,\r\n      279\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      90,\r\n      66,\r\n      36,\r\n      50\r\n    ],\r\n    \"lab\": [\r\n      20.613412680247194,\r\n      -5.836575875486375,\r\n      -19.081712062256813\r\n    ],\r\n    \"rgb\": [\r\n      18,\r\n      53,\r\n      78\r\n    ],\r\n    \"hex\": \"#12354e\"\r\n  },\r\n  {\r\n    \"name\": \"Dull Violet Black\",\r\n    \"combinations\": [\r\n      95,\r\n      106,\r\n      145,\r\n      265,\r\n      277,\r\n      289,\r\n      295,\r\n      331\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      95,\r\n      106,\r\n      38,\r\n      50\r\n    ],\r\n    \"lab\": [\r\n      8.1025406271458,\r\n      19.431906614785987,\r\n      -28.813229571984436\r\n    ],\r\n    \"rgb\": [\r\n      30,\r\n      14,\r\n      63\r\n    ],\r\n    \"hex\": \"#1e0e3f\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Indigo\",\r\n    \"combinations\": [\r\n      6,\r\n      28,\r\n      139,\r\n      155,\r\n      182,\r\n      211,\r\n      232\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      100,\r\n      92,\r\n      52,\r\n      60\r\n    ],\r\n    \"lab\": [\r\n      5.818265049210345,\r\n      4.140077821011687,\r\n      -21.785992217898837\r\n    ],\r\n    \"rgb\": [\r\n      5,\r\n      18,\r\n      48\r\n    ],\r\n    \"hex\": \"#051230\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Slate Green\",\r\n    \"combinations\": [\r\n      84,\r\n      149,\r\n      166,\r\n      271,\r\n      318,\r\n      325\r\n    ],\r\n    \"swatch\": 3,\r\n    \"cmyk\": [\r\n      80,\r\n      50,\r\n      60,\r\n      70\r\n    ],\r\n    \"lab\": [\r\n      16.881055924315252,\r\n      -12.143968871595334,\r\n      -2.2295719844357933\r\n    ],\r\n    \"rgb\": [\r\n      17,\r\n      47,\r\n      44\r\n    ],\r\n    \"hex\": \"#112f2c\"\r\n  },\r\n  {\r\n    \"name\": \"Grayish Lavender - A\",\r\n    \"combinations\": [\r\n      8,\r\n      15,\r\n      159,\r\n      177,\r\n      218,\r\n      248,\r\n      307\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      28,\r\n      28,\r\n      0,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      73.42336156252384,\r\n      7.459143968871587,\r\n      -19.35019455252919\r\n    ],\r\n    \"rgb\": [\r\n      181,\r\n      177,\r\n      216\r\n    ],\r\n    \"hex\": \"#b5b1d8\"\r\n  },\r\n  {\r\n    \"name\": \"Grayish Lavender - B\",\r\n    \"combinations\": [\r\n      47,\r\n      56,\r\n      174,\r\n      187,\r\n      235,\r\n      327,\r\n      329,\r\n      338\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      25,\r\n      33,\r\n      20,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      71.34508278019379,\r\n      10.046692607003905,\r\n      -2.210116731517516\r\n    ],\r\n    \"rgb\": [\r\n      192,\r\n      169,\r\n      179\r\n    ],\r\n    \"hex\": \"#c0a9b3\"\r\n  },\r\n  {\r\n    \"name\": \"Laelia Pink\",\r\n    \"combinations\": [\r\n      20,\r\n      254,\r\n      280,\r\n      337\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      20,\r\n      48,\r\n      18,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      66.5186541542687,\r\n      24.307392996108945,\r\n      -2.6614785992217946\r\n    ],\r\n    \"rgb\": [\r\n      202,\r\n      146,\r\n      168\r\n    ],\r\n    \"hex\": \"#ca92a8\"\r\n  },\r\n  {\r\n    \"name\": \"Lilac\",\r\n    \"combinations\": [\r\n      143,\r\n      162,\r\n      282,\r\n      347\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      28,\r\n      54,\r\n      8,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      61.530479896238646,\r\n      25.922178988326834,\r\n      -14.252918287937746\r\n    ],\r\n    \"rgb\": [\r\n      185,\r\n      132,\r\n      175\r\n    ],\r\n    \"hex\": \"#b984af\"\r\n  },\r\n  {\r\n    \"name\": \"Eupatorium Purple\",\r\n    \"combinations\": [\r\n      215,\r\n      315,\r\n      322\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      25,\r\n      79,\r\n      12,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      52.24536507209888,\r\n      46.71206225680933,\r\n      -11.723735408560316\r\n    ],\r\n    \"rgb\": [\r\n      191,\r\n      88,\r\n      146\r\n    ],\r\n    \"hex\": \"#bf5892\"\r\n  },\r\n  {\r\n    \"name\": \"Light Mauve\",\r\n    \"combinations\": [\r\n      23,\r\n      80,\r\n      128,\r\n      134,\r\n      180,\r\n      274,\r\n      331\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      43,\r\n      62,\r\n      5,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      53.6415655756466,\r\n      23.902723735408557,\r\n      -23.976653696498047\r\n    ],\r\n    \"rgb\": [\r\n      154,\r\n      114,\r\n      170\r\n    ],\r\n    \"hex\": \"#9a72aa\"\r\n  },\r\n  {\r\n    \"name\": \"Aconite Violet\",\r\n    \"combinations\": [\r\n      43,\r\n      64,\r\n      90,\r\n      187,\r\n      220,\r\n      257,\r\n      269,\r\n      301,\r\n      307,\r\n      324,\r\n      344\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      39,\r\n      68,\r\n      5,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      52.66956588082704,\r\n      30.696498054474716,\r\n      -22.369649805447466\r\n    ],\r\n    \"rgb\": [\r\n      163,\r\n      106,\r\n      165\r\n    ],\r\n    \"hex\": \"#a36aa5\"\r\n  },\r\n  {\r\n    \"name\": \"Dull Blue Violet\",\r\n    \"combinations\": [\r\n      9,\r\n      100\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      57,\r\n      60,\r\n      17,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      50.22201876859693,\r\n      13.377431906614788,\r\n      -22.4591439688716\r\n    ],\r\n    \"rgb\": [\r\n      128,\r\n      113,\r\n      158\r\n    ],\r\n    \"hex\": \"#80719e\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Soft Violet\",\r\n    \"combinations\": [\r\n      64,\r\n      127,\r\n      197\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      70,\r\n      68,\r\n      13,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      43.99633783474479,\r\n      12.346303501945528,\r\n      -31.171206225680933\r\n    ],\r\n    \"rgb\": [\r\n      102,\r\n      98,\r\n      156\r\n    ],\r\n    \"hex\": \"#66629c\"\r\n  },\r\n  {\r\n    \"name\": \"Blue Violet\",\r\n    \"combinations\": [\r\n      116,\r\n      175,\r\n      196,\r\n      322,\r\n      345\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      72,\r\n      80,\r\n      0,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      39.12260624093995,\r\n      23.571984435797674,\r\n      -41.91050583657588\r\n    ],\r\n    \"rgb\": [\r\n      100,\r\n      80,\r\n      161\r\n    ],\r\n    \"hex\": \"#6450a1\"\r\n  },\r\n  {\r\n    \"name\": \"Purple Drab\",\r\n    \"combinations\": [\r\n      236\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      38,\r\n      65,\r\n      49,\r\n      26\r\n    ],\r\n    \"lab\": [\r\n      41.87228198672465,\r\n      19.867704280155635,\r\n      5.560311284046691\r\n    ],\r\n    \"rgb\": [\r\n      132,\r\n      86,\r\n      91\r\n    ],\r\n    \"hex\": \"#84565b\"\r\n  },\r\n  {\r\n    \"name\": \"Deep Violet / Plumbeous\",\r\n    \"combinations\": [\r\n      183,\r\n      192,\r\n      218\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      61,\r\n      52,\r\n      43,\r\n      7\r\n    ],\r\n    \"lab\": [\r\n      48.02929732204166,\r\n      0.7937743190661593,\r\n      -5.906614785992218\r\n    ],\r\n    \"rgb\": [\r\n      112,\r\n      114,\r\n      124\r\n    ],\r\n    \"hex\": \"#70727c\"\r\n  },\r\n  {\r\n    \"name\": \"Veronia Purple\",\r\n    \"combinations\": [\r\n      13,\r\n      24,\r\n      168,\r\n      183\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      42,\r\n      78,\r\n      46,\r\n      15\r\n    ],\r\n    \"lab\": [\r\n      40.982681010147246,\r\n      29.56031128404669,\r\n      0.12840466926070349\r\n    ],\r\n    \"rgb\": [\r\n      140,\r\n      76,\r\n      98\r\n    ],\r\n    \"hex\": \"#8c4c62\"\r\n  },\r\n  {\r\n    \"name\": \"Dark Slate Purple\",\r\n    \"combinations\": [\r\n      225,\r\n      248\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      64,\r\n      85,\r\n      60,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      34.306858930342564,\r\n      22.217898832684824,\r\n      -3.5525291828793826\r\n    ],\r\n    \"rgb\": [\r\n      112,\r\n      67,\r\n      87\r\n    ],\r\n    \"hex\": \"#704357\"\r\n  },\r\n  {\r\n    \"name\": \"Taupe Brown\",\r\n    \"combinations\": [\r\n      57,\r\n      123,\r\n      174,\r\n      224,\r\n      275,\r\n      280,\r\n      288\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      30,\r\n      70,\r\n      35,\r\n      40\r\n    ],\r\n    \"lab\": [\r\n      36.17303730830854,\r\n      25.638132295719856,\r\n      0.06225680933852118\r\n    ],\r\n    \"rgb\": [\r\n      122,\r\n      68,\r\n      86\r\n    ],\r\n    \"hex\": \"#7a4456\"\r\n  },\r\n  {\r\n    \"name\": \"Violet Carmine\",\r\n    \"combinations\": [\r\n      337\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      64,\r\n      90,\r\n      70,\r\n      10\r\n    ],\r\n    \"lab\": [\r\n      32.303349355306324,\r\n      25.867704280155635,\r\n      0.8171206225680976\r\n    ],\r\n    \"rgb\": [\r\n      113,\r\n      59,\r\n      76\r\n    ],\r\n    \"hex\": \"#713b4c\"\r\n  },\r\n  {\r\n    \"name\": \"Violet\",\r\n    \"combinations\": [\r\n      42,\r\n      56,\r\n      130,\r\n      156,\r\n      164,\r\n      181,\r\n      205,\r\n      214,\r\n      226,\r\n      316,\r\n      331,\r\n      335\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      85,\r\n      90,\r\n      18,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      31.493095292591743,\r\n      20.665369649805456,\r\n      -37.92607003891051\r\n    ],\r\n    \"rgb\": [\r\n      79,\r\n      64,\r\n      134\r\n    ],\r\n    \"hex\": \"#4f4086\"\r\n  },\r\n  {\r\n    \"name\": \"Red Violet\",\r\n    \"combinations\": [\r\n      4,\r\n      37,\r\n      134,\r\n      136,\r\n      170,\r\n      172,\r\n      183,\r\n      316\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      76,\r\n      100,\r\n      25,\r\n      15\r\n    ],\r\n    \"lab\": [\r\n      25.052262149996185,\r\n      33.105058365758765,\r\n      -30.05836575875486\r\n    ],\r\n    \"rgb\": [\r\n      89,\r\n      37,\r\n      106\r\n    ],\r\n    \"hex\": \"#59256a\"\r\n  },\r\n  {\r\n    \"name\": \"Cotinga Purple\",\r\n    \"combinations\": [\r\n      61,\r\n      181,\r\n      238,\r\n      253,\r\n      307,\r\n      329,\r\n      348\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      66,\r\n      100,\r\n      42,\r\n      40\r\n    ],\r\n    \"lab\": [\r\n      18.403906309605553,\r\n      32.85992217898831,\r\n      -15.762645914396884\r\n    ],\r\n    \"rgb\": [\r\n      80,\r\n      19,\r\n      69\r\n    ],\r\n    \"hex\": \"#501345\"\r\n  },\r\n  {\r\n    \"name\": \"Dusky Madder Violet\",\r\n    \"combinations\": [\r\n      18,\r\n      50,\r\n      53,\r\n      82,\r\n      103,\r\n      314\r\n    ],\r\n    \"swatch\": 4,\r\n    \"cmyk\": [\r\n      75,\r\n      100,\r\n      46,\r\n      30\r\n    ],\r\n    \"lab\": [\r\n      20.103761348897535,\r\n      28.64980544747081,\r\n      -18.256809338521407\r\n    ],\r\n    \"rgb\": [\r\n      78,\r\n      29,\r\n      76\r\n    ],\r\n    \"hex\": \"#4e1d4c\"\r\n  },\r\n  {\r\n    \"name\": \"White\",\r\n    \"combinations\": [\r\n      55\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      0,\r\n      0,\r\n      0,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      100.0,\r\n      0.0,\r\n      0.0\r\n    ],\r\n    \"rgb\": [\r\n      255,\r\n      255,\r\n      255\r\n    ],\r\n    \"hex\": \"#ffffff\"\r\n  },\r\n  {\r\n    \"name\": \"Neutral Gray\",\r\n    \"combinations\": [\r\n      34,\r\n      139,\r\n      180,\r\n      195,\r\n      197,\r\n      221,\r\n      228,\r\n      229,\r\n      273,\r\n      303,\r\n      324,\r\n      340\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      29,\r\n      18,\r\n      20,\r\n      0\r\n    ],\r\n    \"lab\": [\r\n      76.74525062943465,\r\n      -3.0311284046692606,\r\n      -2.0311284046692606\r\n    ],\r\n    \"rgb\": [\r\n      182,\r\n      191,\r\n      193\r\n    ],\r\n    \"hex\": \"#b6bfc1\"\r\n  },\r\n  {\r\n    \"name\": \"Mineral Gray\",\r\n    \"combinations\": [\r\n      11,\r\n      30\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      33,\r\n      18,\r\n      25,\r\n      7\r\n    ],\r\n    \"lab\": [\r\n      70.75303273060197,\r\n      -5.618677042801551,\r\n      -0.0972762645914429\r\n    ],\r\n    \"rgb\": [\r\n      162,\r\n      176,\r\n      173\r\n    ],\r\n    \"hex\": \"#a2b0ad\"\r\n  },\r\n  {\r\n    \"name\": \"Warm Gray\",\r\n    \"combinations\": [\r\n      69,\r\n      76,\r\n      81,\r\n      143,\r\n      169,\r\n      238,\r\n      259,\r\n      261\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      37,\r\n      28,\r\n      36,\r\n      3\r\n    ],\r\n    \"lab\": [\r\n      66.74753948271916,\r\n      -2.2451361867704236,\r\n      4.743190661478593\r\n    ],\r\n    \"rgb\": [\r\n      161,\r\n      163,\r\n      154\r\n    ],\r\n    \"hex\": \"#a1a39a\"\r\n  },\r\n  {\r\n    \"name\": \"Slate Color\",\r\n    \"combinations\": [\r\n      27,\r\n      33,\r\n      57,\r\n      140,\r\n      202,\r\n      243,\r\n      245,\r\n      251,\r\n      253,\r\n      263,\r\n      296,\r\n      329,\r\n      335\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      85,\r\n      70,\r\n      62,\r\n      30\r\n    ],\r\n    \"lab\": [\r\n      27.84771496147097,\r\n      -5.3929961089494185,\r\n      -6.9727626459144005\r\n    ],\r\n    \"rgb\": [\r\n      52,\r\n      69,\r\n      76\r\n    ],\r\n    \"hex\": \"#34454c\"\r\n  },\r\n  {\r\n    \"name\": \"Black\",\r\n    \"combinations\": [\r\n      46,\r\n      52,\r\n      62,\r\n      69,\r\n      112,\r\n      117,\r\n      144,\r\n      190,\r\n      207,\r\n      216,\r\n      221,\r\n      242,\r\n      255,\r\n      256,\r\n      269,\r\n      276,\r\n      288,\r\n      298,\r\n      313,\r\n      323,\r\n      337,\r\n      340,\r\n      344\r\n    ],\r\n    \"swatch\": 5,\r\n    \"cmyk\": [\r\n      20,\r\n      10,\r\n      15,\r\n      100\r\n    ],\r\n    \"lab\": [\r\n      5.62752727550164,\r\n      -0.3968871595330796,\r\n      -1.1245136186770424\r\n    ],\r\n    \"rgb\": [\r\n      17,\r\n      19,\r\n      20\r\n    ],\r\n    \"hex\": \"#111314\"\r\n  }\r\n]"],"mappings":"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","names":[]}