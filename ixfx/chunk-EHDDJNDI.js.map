{"version":3,"sources":["../src/Random.ts","../src/collections/Arrays.ts","../src/collections/NumericArrays.ts","../src/modulation/Easing.ts","../src/visual/Colour.ts","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/lab.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/piecewise.js"],"sourcesContent":["import { randomIndex, randomElement } from \"./collections/Arrays.js\";\r\nimport {number as guardNumber} from './Guards.js';\r\nimport * as Easings from \"./modulation/Easing.js\";\r\nimport {clamp} from \"./Util.js\";\r\nexport {randomIndex as arrayIndex};\r\nexport {randomElement as arrayElement};\r\n\r\nexport {randomHue as hue} from './visual/Colour.js';\r\n\r\nexport const defaultRandom = Math.random;\r\nexport type RandomSource = () => number;\r\n\r\n/***\r\n * Returns a random number, 0..1, weighted by a given easing function. \r\n * Default easing is `quadIn`, which skews towards zero.\r\n * \r\n * ```js\r\n * weighted();          // quadIn easing by default, which skews toward low values\r\n * weighted(`quadOut`); // quadOut favours high values\r\n * ```\r\n * \r\n * @param easingName Easing name. `quadIn` by default.\r\n * @param rand Source random generator. `Math.random` by default.\r\n * @returns Random number (0-1)\r\n */\r\nexport const weighted = (easingName:Easings.EasingName = `quadIn`, rand:RandomSource = defaultRandom):number => {\r\n  const r = rand();\r\n  const easingFn = Easings.get(easingName as Easings.EasingName);\r\n  if (easingFn === undefined) throw new Error(`Easing function '${easingName}' not found.`);\r\n  return easingFn(r);\r\n};\r\n\r\n\r\n/**\r\n * Random integer, weighted according to an easing function.\r\n * Number will be inclusive of `min` and below `max`.\r\n * \r\n * ```js\r\n * // If only one parameter is provided, it's assumed to be the max:\r\n * // Random number that might be 0 through to 99\r\n * const r = weightedInteger(100);\r\n * \r\n * // If two numbers are given, it's assumed to be min, max\r\n * // Random number that might be 20 through to 29\r\n * const r = weightedInteger(20,30);\r\n * \r\n * // One number and string. First param is assumed to be\r\n * // the max, second parameter the easing function\r\n * const r = weightedInteger(100, `quadIn`)\r\n * ```\r\n * \r\n * Useful for accessing a random array element:\r\n * ```js\r\n * const list = [`mango`, `kiwi`, `grape`];\r\n * // Yields random item from list\r\n * list[weightedInteger(list.length)];\r\n * ```\r\n * \r\n * Note: result from easing function will be clamped to\r\n * the min/max (by default 0-1);\r\n * \r\n * @param max Maximum (exclusive)\r\n * @param min Minimum number (inclusive), 0 by default\r\n * @param rand Source random generator. `Math.random` by default.\r\n * @param easing Easing to use, uses `quadIn` by default\r\n * @returns \r\n */\r\nexport const weightedInteger = (minOrMax:number, maxOrEasing?:number|Easings.EasingName, easing?:Easings.EasingName, rand:RandomSource = defaultRandom) => {\r\n  // Unit tested - for ranges and params types. Haven't tested easing distribution\r\n\r\n  guardNumber(minOrMax);\r\n  //eslint-disable-next-line functional/no-let\r\n  let min, max, easingName;\r\n  easingName = `quadIn`;\r\n  min = 0;\r\n\r\n  if (maxOrEasing === undefined) {\r\n    // No second parameter\r\n    max = minOrMax;\r\n  } else {\r\n    // There is a second parameter\r\n    if (typeof maxOrEasing === `number`) {\r\n      min = minOrMax;\r\n      max = maxOrEasing;\r\n      if (easing !== undefined) easingName = easing;\r\n    } else if (typeof maxOrEasing === `string`) {\r\n      max = minOrMax;\r\n      easingName = maxOrEasing;\r\n    } else {\r\n      throw new Error(`Unexpected value type for maxOrEasing: ${maxOrEasing}`);\r\n    }\r\n  }\r\n  \r\n  if (easing !== undefined) easingName = easing;\r\n\r\n  const easingFn = Easings.get(easingName as Easings.EasingName);\r\n  if (easingFn === undefined) throw new Error(`Easing '${easingName}' not found`);\r\n\r\n  guardNumber(min);\r\n  if (max <= min) throw new Error(`Max should be greater than min`);\r\n  const r = clamp(easingFn(rand()));\r\n  return Math.floor(r * (max-min)) + min;\r\n};\r\n\r\n/**\r\n * Returns a random number with gaussian (ie bell-curved) distribution\r\n * ```js\r\n * // Yields a random number between 0..1\r\n * // with a gaussian distribution\r\n * gaussian();\r\n * ```\r\n * \r\n * Distribution can also be skewed:\r\n * ```js\r\n * // Yields a skewed random value\r\n * gaussian(10);\r\n * ```\r\n * \r\n * Use the curried version in order to pass the random number generator elsewhere:\r\n * ```js\r\n * const g = gaussianSkewed(10);\r\n * // Now it can be called without parameters\r\n * g(); // Yields skewed random\r\n * \r\n * // Eg:\r\n * shuffle(gaussianSkewed(10));\r\n * ```\r\n * @param skew \r\n * @returns \r\n */\r\nexport const gaussian = (skew = 1) => {\r\n  const min = 0;\r\n  const max = 1;\r\n  // Source: https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\r\n  \r\n  //eslint-disable-next-line functional/no-let\r\n  let u = 0, v = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)\r\n  //eslint-disable-next-line functional/no-loop-statement\r\n  while(v === 0) v = Math.random();\r\n  //eslint-disable-next-line functional/no-let\r\n  let num = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\r\n  \r\n  num = num / 10.0 + 0.5; // Translate to 0 -> 1\r\n  if (num > 1 || num < 0) {\r\n    num = gaussian(skew);// resample between 0 and 1 if out of range\r\n  } else{\r\n    num = Math.pow(num, skew); // Skew\r\n    num *= max - min; // Stretch to fill range\r\n    num += min; // offset to min\r\n  }\r\n  return num;\r\n};\r\n\r\n/**\r\n * Returns a function of skewed gaussian values.\r\n * \r\n * This 'curried' function is useful when be\r\n * ```js\r\n * const g = gaussianSkewed(10);\r\n * \r\n * // Now it can be called without parameters\r\n * g(); // Returns skewed value\r\n * \r\n * // Eg:\r\n * shuffle(gaussianSkewed(10));\r\n * ```\r\n * @param skew \r\n * @returns \r\n */\r\nexport const gaussianSkewed = (skew:number) => () => gaussian(skew);\r\n\r\n/**\r\n * Returns a random integer between `max` (exclusive) and `min` (inclusive)\r\n * If `min` is not specified, 0 is used.\r\n * \r\n * ```js\r\n * integer(10);    // Random number 0-9\r\n * integer(5, 10); // Random number 5-9\r\n * integer(-5);       // Random number from -4 to 0\r\n * integer(-5, -10); // Random number from -10 to -6\r\n * ```\r\n * @param max \r\n * @param min \r\n * @returns \r\n */\r\nexport const integer = (max:number, min?:number) => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let reverse = false;\r\n  if (min === undefined) {\r\n    if (max < 0) {\r\n      max = Math.abs(max);\r\n      reverse = true;\r\n    }\r\n    min = 0;\r\n  }\r\n  const amt = max - min;\r\n  const r = Math.floor(Math.random() * amt) + min;\r\n  if (reverse) return -r;\r\n  return r;\r\n};\r\n\r\n/**\r\n * Random a random float between `max` (exclusive) and `min` (inclusive).\r\n * If `min` is not specified, 0 is used.\r\n * @param max \r\n * @param min \r\n * @returns \r\n */\r\nexport const float = (max:number, min:number = 0) => Math.random() * (max - min) + min;\r\n\r\n/**\r\n * Returns a string of random letters and numbers of a given `length`.\r\n * \r\n * ```js\r\n * string(4); // eg. `4afd`\r\n * ```\r\n * @param length Length of random string\r\n * @returns Random string\r\n */\r\nexport const string = (length:number) => Math.random().toString(36).substring(2, length+2);\r\n\r\nexport const shortGuid = () => {\r\n  // Via Stackoverflow...\r\n  const firstPart = (Math.random() * 46656) | 0;\r\n  const secondPart = (Math.random() * 46656) | 0;\r\n  const firstPartStr = `000${firstPart.toString(36)}`.slice(-3);\r\n  const secondPartStr = `000${secondPart.toString(36)}`.slice(-3);\r\n  return firstPartStr + secondPartStr;\r\n};\r\n","/**\r\n * Functions for working with primitive arrays, regardless of type\r\n * See Also: NumericArrays.ts\r\n */\r\n\r\nimport {integer as guardInteger} from '../Guards.js';\r\nimport {defaultRandom, RandomSource} from '../Random.js';\r\nimport {IsEqual, isEqualDefault, isEqualValueDefault} from '../Util.js';\r\n\r\nexport * from './NumericArrays.js';\r\n\r\n/**\r\n * Throws an error if `array` parameter is not a valid array\r\n * @private\r\n * @param array \r\n * @param paramName \r\n */\r\nexport const guardArray = <V>(array:ArrayLike<V>, paramName:string = `?`) => {\r\n  if (array === undefined) throw new Error(`Param '${paramName}' is undefined. Expected array.`);\r\n  if (array === null) throw new Error(`Param '${paramName}' is null. Expected array.`);\r\n  if (!Array.isArray(array)) throw new Error(`Param '${paramName}' not an array as expected`);\r\n};\r\n\r\n/**\r\n * Throws if `index` is an invalid array index for `array`, and if\r\n * `array` itself is not a valid array.\r\n * @param array \r\n * @param index \r\n */\r\nexport const guardIndex = <V>(array:ReadonlyArray<V>, index:number, paramName:string = `index`) => {\r\n  guardArray(array);\r\n  guardInteger(index, `positive`, paramName);\r\n  if (index > array.length -1) throw new Error(`'${paramName}' ${index} beyond array max of ${array.length-1}`);\r\n};\r\n\r\n/**\r\n * Returns _true_ if all the contents of the array are identical\r\n * @param array Array\r\n * @param equality Equality checker. Uses string-conversion checking by default\r\n * @returns \r\n */\r\nexport const areValuesIdentical = <V>(array:ReadonlyArray<V>, equality?:IsEqual<V>):boolean => {\r\n  // Unit tested\r\n\r\n  if (!Array.isArray(array)) throw new Error(`Param 'array' is not an array.`);\r\n  if (array.length === 0) return true;\r\n  const eq = (equality === undefined) ? isEqualValueDefault : equality;\r\n  const a = array[0];\r\n  const r = array.some(v => !eq(a, v));\r\n  if (r) return false;\r\n  return true;\r\n};\r\n\r\n/**\r\n * Zip ombines the elements of two or more arrays based on their index.\r\n * \r\n * ```js\r\n * const a = [1,2,3];\r\n * const b = [`red`, `blue`, `green`];\r\n * \r\n * const c = zip(a, b);\r\n * // Yields:\r\n * // [\r\n * //   [1, `red`],\r\n * //   [2, `blue`],\r\n * //   [3, `green`]\r\n * // ]\r\n * ```\r\n * \r\n * Typically the arrays you zip together are all about the same logical item. Eg, in the above example\r\n * perhaps `a` is size and `b` is colour. So thing #1 (at array index 0) is a red thing of size 1. Before\r\n * zipping we'd access it by `a[0]` and `b[0]`. After zipping, we'd have c[0], which is array of [1, `red`].\r\n * @param arrays \r\n * @returns Zipped together array\r\n */\r\n//eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const zip = (...arrays:ReadonlyArray<any>):ReadonlyArray<any> => {\r\n  // Unit tested\r\n  if (arrays.some((a) => !Array.isArray(a))) throw new Error(`All parameters must be an array`);\r\n  const lengths = arrays.map(a => a.length);\r\n  if (!areValuesIdentical(lengths)) throw new Error(`Arrays must be of same length`);\r\n  const ret = [];\r\n  const len = lengths[0];\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<len;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    ret.push(arrays.map(a => a[i]));\r\n  }\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Returns an copy of `data` with specified length.\r\n * If the input array is too long, it is truncated. \r\n * If the input array is too short, it will the expanded based on the `expand` strategy\r\n *  - undefined: fill with `undefined`\r\n *  - repeat: repeat array elements from position 0\r\n *  - first: continually use first element\r\n *  - last: continually use last element\r\n * \r\n * ```js\r\n * ensureLength([1,2,3], 2); // [1,2]\r\n * ensureLength([1,2,3], 5, `undefined`); // [1,2,3,undefined,undefined]\r\n * ensureLength([1,2,3], 5, `repeat`);    // [1,2,3,1,2]\r\n * ensureLength([1,2,3], 5, `first`);     // [1,2,3,1,1]\r\n * ensureLength([1,2,3], 5, `last`);      // [1,2,3,3,3] \r\n * ```\r\n * @param data \r\n * @param length \r\n */\r\nexport const ensureLength = <V>(data:ReadonlyArray<V>, length:number, expand:`undefined`|`repeat`|`first`|`last` = `undefined`):ReadonlyArray<V> => {\r\n  // Unit tested\r\n  if (data === undefined) throw new Error(`Data undefined`);\r\n  if (!Array.isArray(data)) throw new Error(`data is not an array`);\r\n  if (data.length === length) return [...data];\r\n  if (data.length > length) {\r\n    return data.slice(0, length);\r\n  }\r\n  const d = [...data];\r\n  const add = length - d.length;\r\n  \r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<add;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (expand === `undefined`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(undefined);\r\n    } else if (expand === `repeat`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[i%data.length]);\r\n    } else if (expand === `first`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[0]);\r\n    } else if (expand === `last`) {\r\n      //eslint-disable-next-line functional/immutable-data\r\n      d.push(data[data.length-1]);\r\n    }\r\n  }\r\n  return d;\r\n};\r\n\r\n\r\n/**\r\n * Return elements from `array` that match a given `predicate`, and moreover are between the given `startIndex` and `endIndex`.\r\n * \r\n * While this can be done with in the in-built `array.filter` function, it will needless iterate through the whole array. It also\r\n * avoids another alternative of slicing the array before using `filter`.\r\n * @param array \r\n * @param predicate \r\n * @param startIndex \r\n * @param endIndex \r\n */\r\nexport const filterBetween = <V>(array:ReadonlyArray<V>, predicate: (value: V, index: number, array: ReadonlyArray<V>) => boolean, startIndex:number, endIndex:number):readonly V[] => {\r\n  guardIndex(array, startIndex, `startIndex`);\r\n  guardIndex(array, endIndex, `endIndex`);\r\n\r\n  const t:V[] = [];\r\n  //eslint-disable-next-line functional/no-let,functional/no-loop-statement\r\n  for (let i=startIndex;i<=endIndex;i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    if (predicate(array[i], i, array)) t.push(array[i]);\r\n  }\r\n  return t;\r\n};\r\n/**\r\n * Returns a random array index\r\n * @param array\r\n * @param rand Random generator. `Math.random` by default.\r\n * @returns \r\n */\r\nexport const randomIndex = <V>(array: ArrayLike<V>, rand:RandomSource = defaultRandom): number => Math.floor(rand() * array.length);\r\n\r\n/**\r\n * Returns random element\r\n * @param array\r\n * @params rand Random generator. `Math.random` by default.\r\n * @returns \r\n */\r\nexport const randomElement = <V>(array: ArrayLike<V>, rand:RandomSource = defaultRandom): V => {\r\n  guardArray(array, `array`);\r\n  return array[Math.floor(rand() * array.length)];\r\n};\r\n\r\n/**\r\n * Removes a random item from an array, returning both the item and the new array as a result.\r\n * Does not modify the original array unless `mutate` parameter is true.\r\n * \r\n * @example Without changing source\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const {value, array} = randomPluck(data);\r\n * // value: 20, array: [100, 40], data: [100, 20, 40];\r\n * ```\r\n *\r\n * @example Mutating source\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const {value} = randomPluck(data, true);\r\n * // value: 20, data: [100, 40];\r\n * ```\r\n * \r\n * @template V Type of array\r\n * @param array Array to pluck item from\r\n * @param mutate If _true_, changes input array. _False_ by default.\r\n * @param random Random generatr. `Math.random` by default.\r\n * @return Returns an object `{value:V|undefined, array:V[]}`\r\n * \r\n */\r\n//eslint-disable-next-line functional/prefer-readonly-type\r\nexport const randomPluck = <V>(array:readonly V[], mutate = false, rand:RandomSource = defaultRandom):{readonly value:V|undefined, readonly array:Array<V> } => {\r\n  if (array === undefined) throw new Error(`array is undefined`);\r\n  if (!Array.isArray(array)) throw new Error(`'array' param is not an array`);\r\n  if (array.length === 0) return {value: undefined, array: []};\r\n  const index = randomIndex(array, rand);\r\n  if (mutate) {\r\n    return {\r\n      value: array[index],\r\n      //eslint-disable-next-line functional/immutable-data\r\n      array: array.splice(index, 1)\r\n    };\r\n  } else {\r\n    // Copy array, remove item from that\r\n    const t = [...array];\r\n    //eslint-disable-next-line functional/immutable-data\r\n    t.splice(index, 1);\r\n    return {\r\n      value: array[index],\r\n      array: t\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a shuffled copy of the input array.\r\n * @example\r\n * ```js\r\n * const d = [1, 2, 3, 4];\r\n * const s = shuffle(d);\r\n * // d: [1, 2, 3, 4], s: [3, 1, 2, 4]\r\n * ```\r\n * @param dataToShuffle \r\n * @param rand Random generator. `Math.random` by default.\r\n * @returns Copy with items moved around randomly\r\n * @template V Type of array items\r\n */\r\nexport const shuffle = <V>(dataToShuffle:ReadonlyArray<V>, rand:RandomSource = defaultRandom): ReadonlyArray<V> => {\r\n  const array = [...dataToShuffle];\r\n  // eslint-disable-next-line functional/no-loop-statement, functional/no-let\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(rand() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\n/**\r\n * Returns an array with a value omitted. If value is not found, result will be a copy of input.\r\n * Value checking is completed via the provided `comparer` function, or by default checking whether `a === b`.\r\n *\r\n * @example\r\n * ```js\r\n * const data = [100, 20, 40];\r\n * const filtered = without(data, 20); // [100, 40]\r\n * ```\r\n * @template V Type of array items\r\n * @param data Source array\r\n * @param value Value to remove\r\n * @param comparer Comparison function. If not provided {@link isEqualDefault} is used, which compares using `===`\r\n * @return Copy of array without value.\r\n */\r\nexport const without = <V>(data:ReadonlyArray<V>, value:V, comparer:IsEqual<V> = isEqualDefault):ReadonlyArray<V> => data.filter(v => !comparer(v, value));\r\n\r\n/**\r\n * Groups data by a grouper function, returning data as a map with string\r\n * keys and array values.\r\n * \r\n * @example\r\n * ```js\r\n * const data = [\r\n *  { age: 39, city: `London` }\r\n *  { age: 14, city: `Copenhagen` }\r\n *  { age: 23, city: `Stockholm` }\r\n *  { age: 56, city: `London` }\r\n * ];\r\n * const map = groupBy(data, item => data.city); \r\n * ```\r\n * \r\n * Returns a map: \r\n * ```\r\n * London: [{ age: 39, city: `London` }, { age: 56, city: `London` }]\r\n * Stockhom: [{ age: 23, city: `Stockholm` }]\r\n * Copenhagen: [{ age: 14, city: `Copenhagen` }]\r\n * ```\r\n * @param array Array to group\r\n * @param grouper Function that returns a key for a given item\r\n * @template K Type of key to group by. Typically string.\r\n * @template V Type of values\r\n * @returns Map \r\n */\r\nexport const groupBy = <K, V>(array: ReadonlyArray<V>, grouper: (item: V) => K) => array.reduce((store, item) => {\r\n  const key = grouper(item);\r\n  const val = store.get(key);\r\n  if (val === undefined) {\r\n    store.set(key, [item]);\r\n  } else {\r\n    // eslint-disable-next-line functional/immutable-data\r\n    val.push(item);\r\n  }\r\n  return store;\r\n  /* eslint-disable-next-line functional/prefer-readonly-type */\r\n}, new Map<K, V[]>());","import {zip, filterBetween} from './Arrays.js';\r\nimport * as Easings from \"../modulation/Easing.js\";\r\n\r\n/**\r\n * Applies a function to the elements of an array, weighting them based on their relative position.\r\n * \r\n * ```js\r\n * // Six items\r\n * weight([1,1,1,1,1,1], Easings.gaussian());\r\n * \r\n * // Yields:\r\n * // [0.02, 0.244, 0.85, 0.85, 0.244, 0.02]\r\n * ```\r\n * \r\n * Function is expected to map (0..1) => (0..1), such as an {@link Easings.EasingFn}. The input to the\r\n * function is the relative position of an element, so the first element will use fn(0), the middle (0.5) and so on.\r\n * The output of the function s then multiplied by the original value.\r\n * \r\n * In the below example (which is also the default if `fn` is not specified), it is just the\r\n * position which is used to proportion the contents.\r\n * \r\n * ```js\r\n * weight([1,1,1,1,1,1], (relativePos) => relativePos);\r\n * // Yields:\r\n * // [0, 0.2, 0.4, 0.6, 0.8, 1]\r\n * ```\r\n * \r\n * Non-numbers in `data` will be silently ignored.\r\n * @param data Data to process. Assumed to be an array of numbers\r\n * @param fn Function (number)=>number. Returns a weighting based on the given relative position. If unspecified (x) => x is used.\r\n */\r\nexport const weight = (data:readonly number[], fn?:(relativePos:number)=>number):readonly number[] => {\r\n  const f = (fn === undefined) ? (x:number) => x : fn;\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return validNumbers.map((v:number, index:number) => v*f(index/(validNumbers.length-1)));\r\n};\r\n\r\n/**\r\n * Returns the dot product of two arbitrary-sized arrays. Assumed they are of the same length.\r\n * @param a \r\n * @param b \r\n * @returns \r\n */\r\nexport const dotProduct = (values:ReadonlyArray<readonly number[]>):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let r = 0;\r\n  const len = values[0].length;\r\n\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<len;i++) {\r\n    //eslint-disable-next-line functional/no-let\r\n    let t = 0;\r\n    //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n    for (let p=0;p<values.length;p++) {\r\n      if (p === 0) t = values[p][i];\r\n      else {\r\n        t *= values[p][i];\r\n      }\r\n    }\r\n    r += t;\r\n  }\r\n  return r;\r\n};\r\n\r\n/**\r\n * Calculates the average of all numbers in an array.\r\n * Array items which aren't a valid number are ignored and do not factor into averaging.\r\n *\r\n * Use {@link minMaxAvg} if you want min, max and total as well.\r\n * \r\n * @example\r\n * ```\r\n * // Average of a list\r\n * const avg = average(1, 1.4, 0.9, 0.1);\r\n * \r\n * // Average of a variable\r\n * let data = [100,200];\r\n * average(...data);\r\n * ```\r\n * @param data Data to average.\r\n * @returns Average of array\r\n */\r\nexport const average = (...data: readonly number[]): number => {\r\n  // ✔ UNIT TESTED\r\n  if (data === undefined) throw new Error(`data parameter is undefined`);\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  const total = validNumbers.reduce((acc, v) => acc + v, 0);\r\n  return total / validNumbers.length;\r\n};\r\n\r\n/**\r\n * Computes an average of an array with a set of weights applied.\r\n * \r\n * Weights can be provided as an array, expected to be on 0..1 scale, with indexes\r\n * matched up to input data. Ie. data at index 2 will be weighed by index 2 in the weightings array.\r\n * \r\n * ```js\r\n * // All items weighted evenly\r\n * averageWeighted([1,2,3], [1,1,1]); // 2\r\n * \r\n * // First item has full weight, second half, third quarter\r\n * averageWeighted([1,2,3], [1, 0.5, 0.25]); // 1.57\r\n * \r\n * // With reversed weighting of [0.25,0.5,1] value is 2.42\r\n * ```\r\n * \r\n * A function can alternatively be provided to compute the weighting based on array index, via {@link weight}.\r\n * \r\n * ```js\r\n * averageWeighted[1,2,3], Easings.gaussian()); // 2.0\r\n * ```\r\n * \r\n * This is the same as:\r\n * ```js\r\n * const data = [1,2,3];\r\n * const w = weight(data, Easings.gaussian());\r\n * const avg = averageWeighted(data, w); // 2.0\r\n * ```\r\n * @param data Data to average\r\n * @param weightings Array of weightings that match up to data array, or an easing function \r\n */\r\nexport const averageWeighted = (data:readonly number[], weightings:(readonly number[])|Easings.EasingFn):number => {\r\n  if (typeof weightings === `function`) weightings = weight(data, weightings);\r\n\r\n  const ww = zip(data, weightings);\r\n  const [totalV, totalW] = ww.reduce((acc, v:number[]) => [acc[0] + (v[0]*v[1]), acc[1] + v[1]], [0, 0]);\r\n  return totalV/totalW;\r\n};\r\n\r\n/**\r\n * Returns the minimum number out of `data`.\r\n * Undefined and non-numbers are silently ignored.\r\n * @param data\r\n * @returns Minimum number\r\n */\r\nexport const min = (...data:readonly number[]):number => {\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return Math.min(...validNumbers);\r\n};\r\n\r\n/**\r\n * Returns the index of the largest value\r\n * @param data \r\n * @returns \r\n */\r\nexport const maxIndex = (...data:readonly number[]):number => data.reduce((bestIndex, value, index, arr) => (value > arr[bestIndex] ? index : bestIndex), 0);\r\n\r\n/**\r\n * Returns the index of the smallest value\r\n * @param data \r\n * @returns \r\n */\r\nexport const minIndex = (...data:readonly number[]):number => data.reduce((bestIndex, value, index, arr) => (value < arr[bestIndex] ? index : bestIndex), 0);\r\n\r\n/**\r\n * Returns the maximum number out of `data`.\r\n * Undefined and non-numbers are silently ignored.\r\n * @param data\r\n * @returns Maximum number\r\n */\r\nexport const max = (...data:readonly number[]):number => {\r\n  const validNumbers = data.filter(d => typeof d === `number` && !Number.isNaN(d));\r\n  return Math.max(...validNumbers);\r\n};\r\n\r\n/**\r\n * Returns the maximum out of `data` without pre-filtering for speed.\r\n * \r\n * For most uses, {@link max} should suffice.\r\n * @param data \r\n * @returns Maximum\r\n */\r\nexport const maxFast = (data:readonly number[]|Float32Array):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let m = Number.MIN_SAFE_INTEGER;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<data.length;i++) {\r\n    m = Math.max(m, data[i]);\r\n  }\r\n  return m;\r\n};\r\n\r\n\r\n/**\r\n * Returns the maximum out of `data` without pre-filtering for speed.\r\n * \r\n * For most uses, {@link max} should suffice.\r\n * @param data \r\n * @returns Maximum\r\n */\r\nexport const minFast = (data:readonly number[]|Float32Array):number => {\r\n  //eslint-disable-next-line functional/no-let\r\n  let m = Number.MIN_SAFE_INTEGER;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0;i<data.length;i++) {\r\n    m = Math.min(m, data[i]);\r\n  }\r\n  return m;\r\n};\r\n\r\nexport type MinMaxAvgTotal = {\r\n  /**\r\n   * Smallest value in array\r\n   */\r\n  readonly min: number \r\n  /**\r\n   * Total of all items\r\n   */\r\n  readonly total: number \r\n  /**\r\n   * Largest value in array\r\n   */\r\n  readonly max: number\r\n  /**\r\n   * Average value in array\r\n   */\r\n  readonly avg: number\r\n};\r\n\r\n/**\r\n * Returns the min, max, avg and total of the array.\r\n * Any values that are invalid are silently skipped over.\r\n * \r\n * Use {@link average} if you only need average\r\n * \r\n * @param data\r\n * @param startIndex If provided, starting index to do calculations (defaults full range)\r\n * @param endIndex If provided, the end index to do calculations (defaults full range)\r\n * @returns `{min, max, avg, total}`\r\n */\r\nexport const minMaxAvg = (data: readonly number[], startIndex?:number, endIndex?:number):MinMaxAvgTotal  => {\r\n\r\n  if(data === undefined) throw new Error(`'data' is undefined`);\r\n  if (!Array.isArray(data)) throw new Error(`'data' parameter is not an array`);\r\n  \r\n  if (data.length === 0) {\r\n    return {\r\n      total: 0,\r\n      min: 0,\r\n      max: 0,\r\n      avg: 0\r\n    };\r\n  }\r\n  if (startIndex === undefined) startIndex = 0;\r\n  if (endIndex === undefined) endIndex = data.length - 1;\r\n\r\n  const validNumbers = filterBetween<number>(data, d => typeof d === `number` && !Number.isNaN(d), startIndex, endIndex);\r\n  const total = validNumbers.reduce((acc, v) => acc + v, 0);\r\n  return {\r\n    total: total,\r\n    max: Math.max(...validNumbers),\r\n    min: Math.min(...validNumbers),\r\n    avg: total / validNumbers.length\r\n  };\r\n};","// Easings from https://easings.net/\r\nimport {interpolate} from '../Util.js';\r\nimport {msElapsedTimer, HasCompletion, relativeTimer, ticksElapsedTimer, TimerSource} from '../flow/Timer.js';\r\n\r\nconst sqrt = Math.sqrt;\r\nconst pow = Math.pow;\r\nconst cos = Math.cos;\r\n//eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst pi = Math.PI;\r\nconst sin = Math.sin;\r\n/*\r\ntype RelativeTimer = {\r\n  reset(): void\r\n  elapsed(): number\r\n  isDone(): boolean\r\n}\r\n\r\ntype TimerSource = (upperBound: number) => RelativeTimer;\r\n\r\nconst msRelativeTimer = function (upperBound: number): RelativeTimer {\r\n  let start = performance.now();\r\n  return {\r\n    reset: () => {\r\n      start = performance.now();\r\n    },\r\n    elapsed: () => clamp((performance.now() - start) / upperBound),\r\n    isDone: () => (performance.now() - start) >= upperBound,\r\n  };\r\n};\r\n\r\nconst tickRelativeTimer = function (upperBound: number): RelativeTimer {\r\n  let start = 0;\r\n  return {\r\n    reset: () => {\r\n      start = 0;\r\n    },\r\n    elapsed: () => clamp(start++ / upperBound),\r\n    isDone: () => start >= upperBound,\r\n  };\r\n};\r\n*/\r\n\r\nexport type EasingFn = (x: number) => number;\r\n\r\n/**\r\n * Creates an easing based on clock time\r\n * @inheritdoc Easing\r\n * @example Time based easing\r\n * ```\r\n * const t = time(`quintIn`, 5*1000); // Will take 5 seconds to complete\r\n * ...\r\n * t.compute(); // Get current value of easing\r\n * t.reset();   // Reset to 0\r\n * t.isDone;    // _True_ if finished\r\n * ```\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param durationMs Duration in milliseconds\r\n * @returns Easing\r\n */\r\nexport const time = function (nameOrFn: EasingName|EasingFn, durationMs: number):Easing {\r\n  return create(nameOrFn, durationMs, msElapsedTimer);\r\n};\r\n\r\n/**\r\n * Creates an easing based on ticks\r\n * \r\n * @inheritdoc Easing\r\n * @example Tick-based easing\r\n * ```\r\n * const t = tick(`sineIn`, 1000);   // Will take 1000 ticks to complete\r\n * t.compute(); // Each call to `compute` progresses the tick count\r\n * t.reset();   // Reset to 0\r\n * t.isDone;    // _True_ if finished\r\n * ```\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param durationTicks Duration in ticks\r\n * @returns Easing\r\n */\r\nexport const tick = function (nameOrFn: EasingName|EasingFn, durationTicks: number):Easing {\r\n  return create(nameOrFn, durationTicks, ticksElapsedTimer);\r\n};\r\n\r\n/**\r\n * 'Ease' from `0` to `1` over a delicious curve. Commonly used for animation\r\n * and basic modelling of phyical motion. \r\n * \r\n * Create via {@link tick} or {@link time}, call `compute` to calculate the next\r\n * value in the progression, until you reach `1` or `isDone` returns true.\r\n * \r\n */\r\nexport type Easing = HasCompletion & {\r\n/**\r\n * Computes the current value of the easing\r\n *\r\n * @returns {number}\r\n */\r\n  compute(): number\r\n\r\n/**\r\n * Reset the easing\r\n */\r\n  reset(): void\r\n/**\r\n * Returns true if the easing is complete\r\n *\r\n * @returns {boolean}\r\n */\r\n  get isDone(): boolean\r\n};\r\n\r\n/**\r\n * Creates a new easing by name\r\n *\r\n * @param nameOrFn Name of easing, or an easing function\r\n * @param duration Duration (meaning depends on timer source)\r\n * @param timerSource Timer source. Eg {@link tickRelativeTimer}, {@link msRelativeTimer}\r\n * @returns\r\n */\r\nconst create = function (nameOrFn: EasingName|EasingFn, duration: number, timerSource: TimerSource): Easing {\r\n  //eslint-disable-next-line functional/no-let\r\n  let fn:EasingFn|undefined;\r\n  if (typeof nameOrFn === `function`) fn = nameOrFn;\r\n  else fn = get(nameOrFn);\r\n  if (fn === undefined) throw new Error(`Easing function not found: ${nameOrFn}`);\r\n\r\n  // Get a relative version of timer\r\n  const timer = relativeTimer(duration, timerSource(), true);\r\n\r\n  return {\r\n    get isDone() {\r\n      return timer.isDone;\r\n    },\r\n    compute: () => {\r\n      const relative = timer.elapsed;\r\n      return fn!(relative);\r\n    },\r\n    reset: () => {\r\n      timer.reset();\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Creates an easing function using a simple cubic bezier defined by two points.\r\n * \r\n * Eg: https://cubic-bezier.com/#0,1.33,1,-1.25\r\n *  a:0, b: 1.33, c: 1, d: -1.25\r\n * \r\n * ```js\r\n * // Time-based easing using bezier\r\n * const e = Easings.time(fromCubicBezier(1.33, -1.25), 1000);\r\n * e.compute();\r\n * ```\r\n * @param b\r\n * @param d \r\n * @param t \r\n * @returns Value\r\n */\r\nexport const fromCubicBezier = (b:number, d:number):EasingFn => (t:number) => {\r\n  const s = 1-t;\r\n  const s2 = s*s;\r\n  const t2 = t*t;\r\n  const t3 = t2*t;\r\n  return (3*b*s2*t) + (3*d*s*t2) + (t3);\r\n};\r\n\r\n/**\r\n * Returns a mix of two easing functions.\r\n * \r\n * ```js\r\n * // Get a 50/50 mix of two easing functions at t=0.25\r\n * mix(0.5, 0.25, sineIn, sineOut);\r\n * \r\n * // 10% of sineIn, 90% of sineOut\r\n * mix(0.90, 0.25, sineIn, sineOut);\r\n * ```\r\n * @param amt \r\n * @param balance \r\n * @param easingA \r\n * @param easingB \r\n * @returns \r\n */\r\nexport const mix = (amt:number, balance:number, easingA:EasingFn, easingB:EasingFn) => interpolate(balance, easingA(amt), easingB(amt));\r\n\r\nexport const crossfade = (amt:number, easingA:EasingFn, easingB:EasingFn) => mix(amt, amt, easingA, easingB);\r\n/**\r\n * @private\r\n */\r\nexport type EasingName = keyof typeof functions;\r\n\r\n/**\r\n * Returns an easing function by name, or _undefined_ if not found.\r\n * This is a manual way of working with easing functions. If you want to\r\n * ease over time or ticks, use {@link time} or {@link ticks}.\r\n * \r\n * ```js\r\n * const fn = Easings.get(`sineIn`);\r\n * // Returns 'eased' transformation of 0.5\r\n * fn(0.5); \r\n * ```\r\n * @param easingName eg `sineIn`\r\n * @returns Easing function\r\n */\r\nexport const get = function (easingName: EasingName): EasingFn|undefined {\r\n  if (easingName === null) throw new Error(`easingName is null`);\r\n  if (easingName === undefined) throw new Error(`easingName is undefined`);\r\n  const name = easingName.toLocaleLowerCase();\r\n  const found = Object\r\n    .entries(functions)\r\n    .find(([k, _v]) => k.toLocaleLowerCase() === name);\r\n\r\n  if (found === undefined) return found;\r\n  return found[1];\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns Returns list of available easing names\r\n */\r\nexport const getEasings = function ():readonly string[] {\r\n  return Array.from(Object.keys(functions));\r\n};\r\n\r\n/**\r\n * Returns a roughly gaussian easing function\r\n * @param stdDev \r\n * @returns \r\n */\r\nexport const gaussian = (stdDev:number = 0.4):EasingFn => {\r\n  const a = 1/sqrt(2*pi);\r\n  const mean = 0.5;\r\n  \r\n  return (t:number) => {\r\n    const f = a / stdDev;\r\n    // p:-8 pinched\r\n    //eslint-disable-next-line functional/no-let\r\n    let p = -2.5;// -1/1.25;\r\n    //eslint-disable-next-line functional/no-let\r\n    let c = (t-mean)/stdDev;\r\n    c *= c;\r\n    p *= c;\r\n    const v = f * pow(Math.E, p);// * (2/pi);//0.62;\r\n    if (v > 1) return 1;\r\n    if (v < 0) return 0;\r\n\r\n    //if (v >1) console.log(v);\r\n    //if (v < 0) console.log(v);\r\n    return v;\r\n  };\r\n};\r\n\r\nconst bounceOut = function (x:number): number {\r\n  const n1 = 7.5625;\r\n  const d1 = 2.75;\r\n\r\n  if (x < 1 / d1) {\r\n    return n1 * x * x;\r\n  } else if (x < 2 / d1) {\r\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\r\n  } else if (x < 2.5 / d1) {\r\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\r\n  } else {\r\n    return n1 * (x -= 2.625 / d1) * x + 0.984375;\r\n  }\r\n};\r\n\r\nconst quintIn = (x:number):number => x * x * x * x * x;\r\nconst quintOut = (x:number):number => 1 - pow(1 - x, 5);\r\nconst arch = (x:number):number => (x * (1-x) * 4);\r\n\r\nexport const functions = {\r\n  arch,\r\n  bell: gaussian(),\r\n  sineIn: (x: number): number => 1 - cos((x * pi) / 2),\r\n  sineOut: (x: number): number => sin((x * pi) / 2),\r\n  quadIn: (x: number): number => x * x,\r\n  quadOut: (x: number): number => 1 - (1 - x) * (1 - x),\r\n  sineInOut: (x: number): number => -(cos(pi * x) - 1) / 2,\r\n  quadInOut: (x: number): number => (x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2),\r\n  cubicIn: (x: number): number => x * x * x,\r\n  cubicOut: (x: number): number => 1 - pow(1 - x, 3),\r\n  quartIn: (x: number): number => x * x * x * x,\r\n  quartOut: (x: number): number => 1 - pow(1 - x, 4),\r\n  quintIn,\r\n  quintOut, //: (x: number): number => 1 - pow(1 - x, 5),\r\n  expoIn: (x: number): number => (x === 0 ? 0 : pow(2, 10 * x - 10)),\r\n  expoOut: (x: number): number => (x === 1 ? 1 : 1 - pow(2, -10 * x)),\r\n  quintInOut: (x: number): number => (x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2),\r\n  expoInOut: (x: number): number => (x === 0\r\n    ? 0\r\n    : x === 1\r\n      ? 1\r\n      : x < 0.5 ? pow(2, 20 * x - 10) / 2\r\n        : (2 - pow(2, -20 * x + 10)) / 2),\r\n  circIn: (x: number): number => 1 - sqrt(1 - pow(x, 2)),\r\n  circOut: (x: number): number => sqrt(1 - pow(x - 1, 2)),\r\n  backIn: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c3 = c1 + 1;\r\n\r\n    return c3 * x * x * x - c1 * x * x;\r\n  },\r\n  backOut: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c3 = c1 + 1;\r\n\r\n    return 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\r\n  },\r\n  circInOut: (x: number): number => (x < 0.5\r\n    ? (1 - sqrt(1 - pow(2 * x, 2))) / 2\r\n    : (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2),\r\n  backInOut: (x: number): number => {\r\n    const c1 = 1.70158;\r\n    const c2 = c1 * 1.525;\r\n\r\n    return x < 0.5\r\n      ? (pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\r\n      : (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\r\n  },\r\n  elasticIn: (x: number): number => {\r\n    const c4 = (2 * pi) / 3;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4);\r\n  },\r\n  elasticOut: (x: number): number => {\r\n    const c4 = (2 * pi) / 3;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1;\r\n  },\r\n  bounceIn: (x: number): number => 1 - bounceOut(1 - x),\r\n  bounceOut: bounceOut,\r\n  elasticInOut: (x: number): number => {\r\n    const c5 = (2 * pi) / 4.5;\r\n\r\n    return x === 0\r\n      ? 0\r\n      : x === 1\r\n        ? 1\r\n        : x < 0.5\r\n          ? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2\r\n          : (pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5)) / 2 + 1;\r\n  },\r\n  bounceInOut: (x: number): number => (x < 0.5\r\n    ? (1 - bounceOut(1 - 2 * x)) / 2\r\n    : (1 + bounceOut(2 * x - 1)) / 2)\r\n};","/* eslint-disable */\r\nimport * as d3Colour from 'd3-color';\r\nimport * as d3Interpolate from 'd3-interpolate';\r\nimport {defaultRandom, RandomSource} from '../Random.js';\r\nimport {number as guardNumber} from '../Guards.js'\r\n\r\nexport type Hsl = {h:number, s:number, l:number, opacity?:number};\r\nexport type Rgb = {r:number, g:number, b:number, opacity?:number}\r\nexport type Spaces = `hsl` | `rgb` | `lab` | `hcl` | `cubehelix`;\r\n/**\r\n * @private\r\n */\r\nexport type Colour = d3Colour.RGBColor | d3Colour.HSLColor;\r\n\r\n/**\r\n * A representation of colour. Eg: `blue`, `rgb(255,0,0)`, `hsl(20,100%,50%)`\r\n */\r\nexport type Colourish = string|d3Colour.ColorCommonInstance;\r\n\r\n/**\r\n * Options for interpolation\r\n */\r\nexport type InterpolationOpts = {\r\n  /**\r\n   * Gamma correction. Eg 4 brightens values. Only applies to rgb and cubehelix\r\n   * [Read more](https://github.com/d3/d3-interpolate#interpolate_gamma)\r\n   */\r\n  gamma?:number\r\n  /**\r\n   * Colour space\r\n   */\r\n  space?:Spaces\r\n  /**\r\n   * If true, interpolation happens the longer distance. Only applies to hsl, hcl and cubehelix\r\n   */\r\n  long?:boolean\r\n}\r\n\r\n/**\r\n * Parses colour to {h,s,l}. `opacity` field is added if it exists on source.\r\n * @param colour \r\n * @returns \r\n */\r\nexport const toHsl = (colour:Colourish):Hsl => {\r\n  const rgb = toRgb(colour);\r\n  const hsl = rgbToHsl(rgb.r, rgb.b, rgb.g);\r\n  if (rgb.opacity) return {...hsl, opacity: rgb.opacity};\r\n  else return hsl;\r\n}\r\n\r\n\r\n/**\r\n * Returns a full HSL colour string (eg `hsl(20,50%,75%)`) based on a index.\r\n * It's useful for generating perceptually different shades as the index increments.\r\n * \r\n * ```\r\n * el.style.backgroundColor = goldenAgeColour(10);\r\n * ```\r\n * \r\n * Saturation and lightness can be specified, as numeric ranges of 0-1.\r\n * \r\n * @param saturation Saturation (0-1), defaults to 0.5\r\n * @param lightness Lightness (0-1), defaults to 0.75\r\n * @returns HSL colour string eg `hsl(20,50%,75%)`\r\n */\r\nexport const goldenAngleColour = (index: number, saturation = 0.5, lightness = 0.75) => {\r\n  guardNumber(index, `positive`, `index`);\r\n  guardNumber(saturation, `percentage`, `saturation`);\r\n  guardNumber(lightness, `percentage`, `lightness`);\r\n\r\n  // Via Stackoverflow\r\n  const hue = index * 137.508; // use golden angle approximation\r\n  return `hsl(${hue},${saturation*100}%,${lightness*100}%)`;\r\n}\r\n\r\n/**\r\n * Returns a random hue component\r\n * ```\r\n * // Generate hue\r\n * const h =randomHue(); // 0-359\r\n * \r\n * // Generate hue and assign as part of a HSL string\r\n * el.style.backgroundColor = `hsl(${randomHue(), 50%, 75%})`;\r\n * ```\r\n * \r\n * \r\n * @param rand \r\n * @returns \r\n */\r\nexport const randomHue = (rand:RandomSource = defaultRandom): number => {\r\n  const r = rand();\r\n  return r * 360;\r\n};\r\n\r\n/**\r\n * Parses colour to {r,g,b}. `opacity` field is added if it exists on source.\r\n * @param colour \r\n * @returns \r\n */\r\nexport const toRgb = (colour:Colourish):Rgb => {\r\n  const c = resolveColour(colour);\r\n  const rgb = c.rgb();\r\n  if (c.opacity < 1) return {r:rgb.r, g:rgb.g, b:rgb.b, opacity: c.opacity};\r\n  else return {r:rgb.r, g:rgb.g, b:rgb.b}\r\n}\r\n\r\nconst resolveColour = (c:Colourish):Colour => {\r\n  if (typeof c === `string`) {\r\n    const css = d3Colour.color(c);\r\n    if (css !== null) return css;\r\n  } else {\r\n    if (isHsl(c)) return d3Colour.hsl(c.h, c.s, c.l);\r\n    if (isRgb(c)) return d3Colour.rgb(c.r, c.g, c.b); \r\n  }\r\n  throw new Error(`Could not resolve colour ${JSON.stringify(c)}`);\r\n}\r\n\r\n/**\r\n * Returns a colour in hex format `#000000`\r\n * @param colour\r\n * @returns Hex format, including #\r\n */\r\nexport const toHex = (colour:Colourish):string => {\r\n  const c = resolveColour(colour);\r\n  return c.formatHex();\r\n}\r\n\r\n/**\r\n * Returns a variation of colour with its opacity multiplied by `amt`.\r\n * \r\n * ```js\r\n * // Return a colour string for blue that is 50% opaque\r\n * opacity(`blue`, 0.5);\r\n * // eg: `rgba(0,0,255,0.5)`\r\n * \r\n * // Returns a colour string that is 50% more opaque\r\n * opacity(`hsla(200,100%,50%,50%`, 0.5);\r\n * // eg: `hsla(200,100%,50%,25%)` \r\n * ```\r\n * @param colour A valid CSS colour\r\n * @param amt Amount to multiply opacity by\r\n * @returns String representation of colour\r\n */\r\nexport const opacity = (colour:Colourish, amt:number):string => {\r\n  const c = resolveColour(colour);\r\n  c.opacity *= amt;\r\n  return c.toString(); \r\n}\r\n\r\n/**\r\n * Gets a CSS variable.\r\n * @example Fetch --accent variable, or use `yellow` if not found.\r\n * ```\r\n * getCssVariable(`accent`, `yellow`);\r\n * ```\r\n * @param name Name of variable. Do not starting `--`\r\n * @param fallbackColour Fallback colour if not found\r\n * @param root  Element to search variable from\r\n * @returns Colour or fallback.\r\n */\r\n export const getCssVariable = (name:string, fallbackColour:string = `black`, root?:HTMLElement):string => {\r\n  if (root === undefined) root = document.body;\r\n  const fromCss = getComputedStyle(root).getPropertyValue(`--${name}`).trim();\r\n  if (fromCss === undefined || fromCss.length === 0) return fallbackColour;\r\n  return fromCss;\r\n};\r\n\r\n/**\r\n * Interpolates between two colours, returning a string\r\n * \r\n * @example\r\n * ```js\r\n * // Get 50% between blue and red\r\n * interpolate(0.5, `blue`, `red`); \r\n * \r\n * // Get midway point, with specified colour space\r\n * interpolate(0.5, `hsl(200, 100%, 50%)`, `pink`, {space: `hcl`});\r\n * ```\r\n * @param amount Amount (0 = from, 0.5 halfway, 1= to)\r\n * @param from Starting colour\r\n * @param to Final colour\r\n * @param optsOrSpace Options for interpolation, or string name for colour space, eg `hsl`.\r\n * @returns String representation of colour, eg. `rgb(x,x,x)`\r\n */\r\nexport const interpolate = (amount:number, from:Colourish, to:Colourish, optsOrSpace?:string|InterpolationOpts):string => {\r\n  guardNumber(amount, `percentage`, `amount`);\r\n  if (typeof from !== `string`) throw new Error(`Expected string for 'from' param`);\r\n  if (typeof to !== `string`) throw new Error(`Expected string for 'to' param`);\r\n\r\n  let opts:InterpolationOpts;\r\n  if (typeof optsOrSpace === `undefined`) opts = {};\r\n  else if (typeof optsOrSpace === `string`) opts = { space: optsOrSpace as Spaces};\r\n  else opts = optsOrSpace as InterpolationOpts;\r\n\r\n\r\n  const inter = getInterpolator(opts, [from, to]);\r\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\r\n  return inter(amount);\r\n}\r\n\r\nconst getInterpolator = (optsOrSpace:InterpolationOpts|string, colours:Colourish[]): ((t: number) => string) | undefined => {\r\n  if (!Array.isArray(colours)) throw new Error(`Expected one or more colours as parameters`);\r\n  \r\n  let opts:InterpolationOpts;\r\n  if (typeof optsOrSpace === `undefined`) opts = {};\r\n  else if (typeof optsOrSpace === `string`) opts = { space: optsOrSpace as Spaces};\r\n  else opts = optsOrSpace as InterpolationOpts;\r\n\r\n  if (!Array.isArray(colours)) throw new Error(`Expected array for colours parameter`);\r\n  if (colours.length < 2) throw new Error(`Interpolation expects at least two colours`);\r\n  const {space = `rgb`, long = false} = opts;\r\n  let inter;\r\n\r\n  switch (space) {\r\n  case `lab`:\r\n    inter = d3Interpolate.interpolateLab;\r\n    break;\r\n  case `hsl`:\r\n    inter = long ? d3Interpolate.interpolateHslLong : d3Interpolate.interpolateHsl;\r\n    break;\r\n  case `hcl`:\r\n    inter = long ? d3Interpolate.interpolateHclLong : d3Interpolate.interpolateHcl;\r\n    break;\r\n  case `cubehelix`:\r\n    inter = long ? d3Interpolate.interpolateCubehelixLong : d3Interpolate.interpolateCubehelix;\r\n    break;\r\n  case `rgb`:\r\n    inter = d3Interpolate.interpolateRgb;\r\n  default:\r\n    inter = d3Interpolate.interpolateRgb;\r\n  }\r\n\r\n  if (opts.gamma) {\r\n    if (space === `rgb` || space === `cubehelix`) {\r\n      inter = (inter as d3Interpolate.ColorGammaInterpolationFactory).gamma(opts.gamma);      \r\n    }\r\n  }\r\n\r\n  if (colours.length > 2) {\r\n    return d3Interpolate.piecewise(inter, colours);\r\n  } else return inter(colours[0], colours[1]);\r\n}\r\n\r\n/**\r\n * Produces a scale of colours as a string array\r\n * \r\n * @example\r\n * ```js\r\n * // Yields array of 5 colour strings\r\n * const s = scale(5, {space:`hcl`}, `blue`, `red`);\r\n * // Produces scale between three colours\r\n * const s = scale(5, {space:`hcl`}, `blue`, `yellow`, `red`);\r\n * ```\r\n * @param steps Number of colours\r\n * @param opts Options for interpolation, or string colour space eg `hsl`\r\n * @param colours From/end colours (or more)\r\n * @returns \r\n */\r\nexport const scale = (steps:number, opts:InterpolationOpts|string, ...colours:Colourish[]):string[] => {\r\n  guardNumber(steps, `aboveZero`, `steps`);\r\n  if (!Array.isArray(colours)) throw new Error(`Expected one or more colours as parameters`);\r\n  const inter = getInterpolator(opts, colours);\r\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\r\n\r\n  const perStep = 1/(steps-1);\r\n  const r = [];\r\n  //eslint-disable-next-line functional/no-let\r\n  let amt = 0;\r\n  //eslint-disable-next-line functional/no-loop-statement,functional/no-let\r\n  for (let i=0; i<steps; i++) {\r\n    //eslint-disable-next-line functional/immutable-data\r\n    r.push(inter(amt));\r\n    amt += perStep;\r\n    if (amt > 1) amt = 1;\r\n  }\r\n  return r;\r\n}\r\n\r\nconst isHsl = (p: Colour|d3Colour.ColorCommonInstance|Hsl): p is Hsl => {\r\n  if ((p as Hsl).h === undefined) return false;\r\n  if ((p as Hsl).s === undefined) return false;\r\n  if ((p as Hsl).l === undefined) return false;\r\n  return true;\r\n};\r\n\r\nconst isRgb = (p: Colour|d3Colour.ColorCommonInstance|Rgb): p is Rgb => {\r\n  if ((p as Rgb).r === undefined) return false;\r\n  if ((p as Rgb).g === undefined) return false;\r\n  if ((p as Rgb).b === undefined) return false;\r\n  return true;\r\n};\r\n\r\nconst rgbToHsl = (r:number, g:number, b:number):Hsl => {\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n\r\n  var min = Math.min(r, g, b),\r\n    max = Math.max(r, g, b),\r\n    delta = max - min,\r\n    h, s, l;\r\n\r\n  h = 0;\r\n  if (max === min) {\r\n    h = 0;\r\n  }\r\n  else if (r === max) {\r\n    h = (g - b) / delta;\r\n  }\r\n  else if (g === max) {\r\n    h = 2 + (b - r) / delta;\r\n  }\r\n  else if (b === max) {\r\n    h = 4 + (r - g) / delta;\r\n  }\r\n\r\n  h = Math.min(h * 60, 360);\r\n\r\n  if (h < 0) {\r\n    h += 360;\r\n  }\r\n\r\n  l = (min + max) / 2;\r\n\r\n  if (max === min) {\r\n    s = 0;\r\n  }\r\n  else if (l <= 0.5) {\r\n    s = delta / (max + min);\r\n  }\r\n  else {\r\n    s = delta / (2 - max - min);\r\n  }\r\n\r\n  return {h, s, l};\r\n};\r\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n"],"mappings":"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","names":[]}